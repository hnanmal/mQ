{
  "Uuid": "69337bd4-731a-4c9d-b7b8-d3b37cc2a557",
  "IsCustomNode": false,
  "Description": "Auto Calculating the Quantities of each Element As per the Family List",
  "Name": "[H_PAB.RT.Q2A]_Revit 토공 물량 자동산출_[0.1.0]",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Revit.Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "c1fcec73c860411f965c3205e13a53bf",
      "Name": "▶ [A.1] 토공참조선을 생성할 대상 선택. (드래그만 가능)",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf285,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3bd,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3c5,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3cd,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3d7,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3dd,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3e5,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3ed,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3f7,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3ff,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf407,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf40f,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf417,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf436,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf493,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf518,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf55f,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf590,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf689,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf77a,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf7cf,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf876,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf91f,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf974,9bcf6978-584d-4e5e-a696-1309c33663f9-002bf9e5,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfa5e,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfa93,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfc5c,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfd07,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfe69,9bcf6978-584d-4e5e-a696-1309c33663f9-002bfe73,9bcf6978-584d-4e5e-a696-1309c33663f9-002c011c,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0293,9bcf6978-584d-4e5e-a696-1309c33663f9-002c029d,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02a7,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02b1,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02b9,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02c3,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02cf,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02d9,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02e3,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02ed,9bcf6978-584d-4e5e-a696-1309c33663f9-002c02f7,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0301,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0309,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0313,9bcf6978-584d-4e5e-a696-1309c33663f9-002c031d,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0327,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0339,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0467,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0471,9bcf6978-584d-4e5e-a696-1309c33663f9-002c047b,9bcf6978-584d-4e5e-a696-1309c33663f9-002c048c,9bcf6978-584d-4e5e-a696-1309c33663f9-002c062e,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0638,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0642,9bcf6978-584d-4e5e-a696-1309c33663f9-002c064e,9bcf6978-584d-4e5e-a696-1309c33663f9-002c0658,9bcf6978-584d-4e5e-a696-1309c33663f9-002c066c,9bcf6978-584d-4e5e-a696-1309c33663f9-002c07a6,9bcf6978-584d-4e5e-a696-1309c33663f9-002c07b0,9bcf6978-584d-4e5e-a696-1309c33663f9-002c07ba,9bcf6978-584d-4e5e-a696-1309c33663f9-002c1676,9bcf6978-584d-4e5e-a696-1309c33663f9-002c16c5,9bcf6978-584d-4e5e-a696-1309c33663f9-002c174f,9bcf6978-584d-4e5e-a696-1309c33663f9-002c1764,9bcf6978-584d-4e5e-a696-1309c33663f9-002c181f,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c185c,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1872,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c188a,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18a6,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18c3,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18e1,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1928,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c193f,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1971,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1987,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19ab,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19c2,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19dd,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19f9,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1a75,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1a8c,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b01,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b1d,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b31,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b50,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b77,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1bd0,98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1bea,4389afa9-d8df-47c4-a79e-f651437b0492-002c1d18,1821b493-da5d-45d4-b4d0-081992f26d53-002c4bf6,1821b493-da5d-45d4-b4d0-081992f26d53-002c4c2d",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "Id": "ec0957085d604537b91f29637a0fd228",
      "Name": "▶ [A.2] 토공참조선 선택 대상들을 그룹으로 적용하시겠습니까? 개별로 적용하시겠습니까?",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "그룹모드",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 0
    },
    {
      "Id": "9ff8ea3a3df243d0b2b7ccc57106e18d",
      "Name": "▶ [0.2] GL 레벨 선택",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "TOF",
      "Description": "Select a level in the active document",
      "SelectedIndex": 2
    },
    {
      "Id": "d898cc3c2bba495d939dd99fff568523",
      "Name": "▶ [A.3] 터파기 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
      "Type": "string",
      "Type2": "string",
      "Value": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------",
      "Description": "Creates a string"
    },
    {
      "Id": "1c8ef8f989844fc0bd4b898667fb3ed6",
      "Name": "▶ [0.1] 실행모드 선택 - 확인 필수!",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "A. 토공참조선작성모드",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 0
    },
    {
      "Id": "c5ebc6f0b3ea414b83659c5adf64b856",
      "Name": "▶ [B.1] 토공 물량 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
      "Type": "string",
      "Type2": "string",
      "Value": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(m : GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------",
      "Description": "Creates a string"
    },
    {
      "Id": "04c9ae06ebe44a77b72aaf82de8bd48c",
      "Name": "⏸ [0.0]안내문 영역 // 입력 불필요 //",
      "Type": "string",
      "Type2": "string",
      "Value": "본 토공 물량 산출기는\r\n터파기하단선 작성 → 형상 및 물량 산출의 순서로 이루어집니다.\r\n아래 [0.1] 항목에서\r\n\"A 모드 선택 후 실행 → B 모드 선택 후 실행\"의 순서로 이용십시오.",
      "Description": "Creates a string"
    },
    {
      "Id": "835ec69080604241a56c0e94a75b3a87",
      "Name": "※ 형상 바운딩화 옵션 (B모드 에러시 True로 설정 요망)",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "false",
      "Description": "Enables selection between True and False"
    }
  ],
  "Outputs": [
    {
      "Id": "9bcf898e0bda443d8e1a87ae89619706",
      "Name": "::: 토공 항목 별 산출 결과 :::",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n\r\nimport time\r\nimport subprocess\r\nimport asyncio\r\nimport multiprocessing\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncontents = IN[0]\r\nfolderPath = IN[1]\r\ncwd = folderPath\r\nportNo = IN[2]\r\n#bdName = IN[2]\r\n# Place your code below this line\r\n\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\ndef make_resultHTMLname(htmlStr,title,cwd):\r\n    timeStamp = time.strftime('%H_%M_%S', time.localtime(time.time()))\r\n    #folderPath = f\"{cwd}\\\\.dynLog\"\r\n    folderPath = cwd\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    fileName = f\"index.html\"\r\n    filePath = f\"{folderPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(htmlStr)\r\n    f.close()\r\n    return fileName\r\n\r\n\r\ndef execute_browser(cwd):\r\n    #cwd = find_cwd()\r\n    folderPath = cwd\r\n    os.chdir(folderPath)\r\n    #cmdStr = \"start chrome http:localhost:8000\"\r\n    cmdStr = f\"start msedge http:localhost:{portNo}\"\r\n    cmdList= cmdStr.split(' ')\r\n    #subprocess.run(args=[fileName], shell=True)\r\n    #subprocess.run(args=['start','excel',fileName], shell=True)\r\n    subprocess.run(args=cmdList, shell=True)\r\n    return cmdList\r\n\r\n\r\nfileName = make_resultHTMLname(contents,\"test\",cwd)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = execute_browser(cwd)#fileName.split('.')[0]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2293b855337546edb1fce2a82a226d51",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d8e80b2eef7846ef9fc7fa123e40e3a0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31270f6e0b034196b02ef6313ea86dfd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a98b44c39926443ca6e4ebd278cb8dc5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72a7b95350034400b415408f808fb2a2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ncssPart = '''\r\n\r\n/* style.css */\r\nimg {\r\n width : 25%;\r\n height: 25%; \r\n}\r\n\r\n:root {\r\n  --text-color: #f0f4f5;\r\n  --background-color: #263343;\r\n  --accent-color: orange;\r\n  --icons-color: rgb(152, 187, 201);\r\n  --bodybackground-color: lightgray;\r\n}\r\n\r\nth {\r\n  text-align: center;\r\n  padding-left: 30px;\r\n}\r\n\r\ntd {\r\n  padding-left: 40px;\r\n  border-bottom : 1px solid gray;\r\n  border-collapse : collapse;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  background-color: var(--bodybackground-color);\r\n  font-family: 'STIX Two Math';\r\n} \r\n\r\na {\r\n  text-decoration: none;\r\n  color: var(--text-color);\r\n}\r\n\r\n.navbar {\r\n  display: flex;\r\n  position: sticky;\r\n  top: 0px; /* 도달했을때 고정시킬 위치 */\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: var(--background-color);\r\n  padding: 8px 12px;\r\n  font-family: 'STIX Two Math';\r\n}\r\n\r\n.navbar__logo i {\r\n  color: var(--accent-color);\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__menu {\r\n  list-style: none;\r\n  display: flex;\r\n  margin: 0;\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__menu li {\r\n  padding: 8px 30px;\r\n  color: var(--text-color);\r\n}\r\n\r\n.navbar__menu li:hover {\r\n  background-color: var(--accent-color);\r\n  border-radius: 3px;\r\n}\r\n\r\n.navbar__icons {\r\n  list-style: none;\r\n  display: flex;\r\n  color: var(--icons-color);\r\n  margin: 0;\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__icons li {\r\n  padding: 8px 12px;\r\n  margin: 0;\r\n}\r\n\r\n#cat {\r\n  display: block;\r\n  }\r\n\r\n#home {\r\n  font-weight: bolder;\r\n  }\r\n\r\n#homePage {\r\n  display: inline;\r\n  }\r\n\r\n#infoPage {\r\n  display: None;\r\n  }\r\n\r\n#famTypePage {\r\n  display: None;\r\n  }\r\n\r\n#roomInfoPage {\r\n  display: None;\r\n  }\r\n\r\n#roomInfoPage_chk {\r\n  display: None;\r\n  }\r\n\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = cssPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "128b292038734d0497a800ffdbb36664",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "56f7a965afaf4ab2bdddf992f8bb5c28",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb7e50c36a5c4fdc80775b1756cce91e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9297ebeb07e4ee9bff52f44e6630224",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0e54e3fd8ff4606ada50c31c1af17d8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\njsPart = '''\r\nfunction hideAllPages() {\r\n        document.querySelector(\"#home\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#homePage\").style.display = \"None\";\r\n        document.querySelector(\"#info\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#infoPage\").style.display = \"None\";\r\n        document.querySelector(\"#famType\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#famTypePage\").style.display = \"None\";\r\n        document.querySelector(\"#roomInfo\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#roomInfoPage\").style.display = \"None\";\r\n        document.querySelector(\"#roomInfoPage_chk\").style.display = \"None\";\r\n}\r\n\r\ndocument.querySelector(\"#cat\").onclick = function() {\r\n\t    let img = document.createElement(\"img\");\r\n\t    img.setAttribute(\"src\", \"https://t4.ftcdn.net/jpg/05/62/99/31/360_F_562993122_e7pGkeY8yMfXJcRmclsoIjtOoVDDgIlh.jpg\");\r\n\t    document.querySelector(\"#cat\").style.display = \"None\";\r\n\t    img.setAttribute(\"style\", \"width:300px;margin-top:20px;\")\r\n\t    document.body.append(img);\r\n\t};\r\ndocument.querySelector(\"#home\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#home\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#homePage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#info\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#info\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#infoPage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#famType\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#famType\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#famTypePage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#roomInfo\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#roomInfo\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#roomInfoPage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#roomInfo_chk\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#roomInfo_chk\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#roomInfoPage_chk\").style.display = \"inline\";\r\n\t};\r\n\t\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = jsPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ccd5e4648eca41bea187f1cd549b3006",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cd27a5a3250646b8af05c6827971cc02",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c297516ac2a4a5198a8056fa13863cb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e35893f82e049eaadf62cf0fe338233",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2715083b45ed4f58af2eaad981a33897",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport time\r\nimport subprocess\r\nimport os\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndynTempServerPath = IN[0]\r\n# Place your code below this line\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\ncwd = find_cwd()\r\n#cwd = os.getenv(\"HomePath\")\r\n\r\nfolderPath = f\"{cwd}\\\\{dynTempServerPath}\\\\tmpForBOQ\"\r\nif not os.path.exists(folderPath):\r\n    os.makedirs(folderPath)\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = \"C:\"+folderPath\r\nOUT = folderPath",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e2e4af0fc18e4b908dcf2372c6b7c0ae",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a790eb19d69346e8b56360df832d0204",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "448932de8be943e9b1e309fc8e067d99",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\njsPart = IN[0]\r\ncssPart = IN[1]\r\nnavPart = IN[2]\r\n\r\npjtName = IN[3][0]\r\nbdName = IN[3][1]\r\npages = IN[4]\r\n\r\nhomePage = pages[0]\r\n\r\n\r\n\r\n# Place your code below this line\r\n##folderPath_r = folderPath.replace('\\\\','\\\\\\\\')\r\n\r\nhtmlStr = f'''\r\n<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n\r\n<head>\r\n    <link rel=\"shortcut icon\" href=\"#\">\r\n    <meta charset=\"UTF-8\">\r\n    <title>RVT Calculation Result</title>\r\n    <style>\r\n        {cssPart}\r\n    </style>\r\n</head>\r\n\r\n<header>\r\n<h5>Revit Elements' Bill of Quantities Page</h5>\r\n<h4>{pjtName}</h4>\r\n<h4>{bdName}</h4>\r\n</header>\r\n\r\n<body>\r\n{navPart}\r\n\r\n<div id=\"homePage\">\r\n{homePage}\r\n</div>\r\n\r\n\r\n\r\n<script type =\"module\" src=\"./js/script.js\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = htmlStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe86d2e04e3f446eb61d604b1722d6a7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "09b3afab404d40b9a6458d9cdec5d090",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1186cb42b4834da892396a64d7af190a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a60e762b4a074b659e687d4d1e516da1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a35c3c9f980b43c8855d626ea95e9af6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e6a573560f74b01a9d7793966dc63bd",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6fa566905a049a1add2c70e17432a87",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e97d441e14e44edc828a96c60739260d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a34e9f10b2bc481a926292d0061531de",
          "Name": "htmlStr",
          "Description": "htmlStr",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd15b0ac83e04be7aa75031a9bf4daf1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "htmlStr;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnavPart = f\"\"\"\r\n\r\n<nav class=\"navbar\">\r\n\r\n  <ul class=\"navbar__menu\">\r\n    <li id=\"home\">Home</li>\r\n  </ul>\r\n\r\n</nav>\r\n\r\n\"\"\"\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = navPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bb79dddfc2e9457e966f337a7c97306e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1f7f5995c6b74e949bf86fbcdf5a1f3e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b8c0a5728634607a57019136c306b91",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n\r\nimport time\r\nimport subprocess\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncontents = IN[0]\r\nfolderPath = IN[1]\r\n#bdName = IN[2]\r\n# Place your code below this line\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\n#cwd = find_cwd()\r\ncwd = folderPath\r\n\r\ndef make_resultHTMLname(jsStr,cwd):\r\n    #timeStamp = time.strftime('%H_%M_%S', time.localtime(time.time()))\r\n    #folderPath = f\"{cwd}\\\\.dynLog\"\r\n    folderPath = cwd\r\n    jsPath = cwd + \"\\\\js\"\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    if not os.path.exists(jsPath):\r\n        os.makedirs(jsPath)\r\n    fileName = \"script.js\"\r\n    filePath = f\"{jsPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(jsStr)\r\n    f.close()\r\n    return fileName\r\n\r\ndef execute_file(fileName):\r\n    #cwd = find_cwd()\r\n    folderPath = cwd\r\n    os.chdir(folderPath)\r\n    subprocess.run(args=[fileName], shell=True)\r\n    #subprocess.run(args=['start','excel',fileName], shell=True)\r\n    \r\n\r\nfileName = make_resultHTMLname(contents,cwd)\r\n#fileName = \"Test1.html\"\r\n\r\n#execute_file(fileName)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = fileName",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "505cea545c5a4672ba1f9dca7b06fe98",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "44ea388a7f674212a4473bd8a2de7eb2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "385bebc0885a4263b3a761a50641f7e0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2169277f35b4728ab9a72f5d7349adb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b32189b590be4b65b3fefc86f462746a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\nimport asyncio\r\nimport multiprocessing\r\nimport subprocess\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncwd = IN[0]\r\nportNo = IN[1]\r\n# Place your code below this line\r\nbatStr = f\"\"\"\r\n@echo on\r\npython -m http.server {portNo}\r\ncmd /k\r\n\"\"\"\r\n##cmd /k\r\ntitle = \"localWebserver\"\r\n\r\ndef make_startSever_bat(batStr,title,cwd):\r\n    folderPath = cwd\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    fileName = f\"{title}.bat\"\r\n    filePath = f\"{folderPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(batStr)\r\n    f.close()\r\n    return fileName\r\n\r\ndef startBat(fileName, cwd):\r\n    cmdStr = f\".\\\\{fileName}\"\r\n    cmdList= cmdStr.split(' ')\r\n    os.chdir(cwd)\r\n    \r\n    res = subprocess.Popen(args=cmdList, shell=True)\r\n    return res\r\n\r\nbatFileName = make_startSever_bat(batStr,title,cwd)\r\n#res = multiprocessing.Process(name=\"SubProcess\", target=startBat, args=(batFileName, cwd))\r\n# Assign your output to the OUT variable.\r\nOUT = startBat(batFileName, cwd)\r\n\r\n#startBat(fileName, cwd)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7911dd5152fb4afc9942fa71eb471e18",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8ed9e15c86dc4c0b9073de2f41cf1065",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb8149952ae847a7bd2fc2ee01e36dea",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c29f9a23004245e5bcb9462f65c0da4a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\njsPart = IN[0]\r\ncssPart = IN[1]\r\ntablePart = IN[2]\r\n\r\n# Place your code below this line\r\n##folderPath_r = folderPath.replace('\\\\','\\\\\\\\')\r\n\r\nhtmlStr = f'''\r\n<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>my first three.js app</title>\r\n    <style>\r\n        {cssPart}\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n\r\n\r\n<div class=\"wrapper\">\r\n\r\n  <a data-fslightbox=\"gallery\" href=\"#custom-source\">\r\n    유튜브 라이트박스\r\n  </a>\r\n\r\n  <iframe id=\"custom-source\"\r\n          frameborder=\"0\"\r\n          width=\"1920px\"\r\n          height=\"1080px\"\r\n          allow=\"autoplay; fullscreen\"\r\n          src=\"https://www.youtube.com/embed/qgBSiRwsbNw?autoplay=1\">\r\n  </iframe>\r\n</div>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/fslightbox/3.3.1/index.min.js\" integrity=\"sha512-EqNNJuepkw5P9vxCml8eBk7C4Ld+4kAnvzOD/jG21rkxWPILGoQa5EvD62UieiJF0u3xoQrcVnce4i83VnYj/Q==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = htmlStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "eb3d472b821e4392b812a06bbd34d3ed",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2897d9110ec34e129d789c3b7475b1be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12db67f00e784857aded00125797de24",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f859036bc105425fb1793c912dc3f987",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3bb120d1556479087ad77aa05cdab17",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d1ff79fecf704ef6a5f9ec4bee7f2020",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f05424c070294cbca49dda114c05adb6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\".dynTemp\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6295313e8a4a48bc83e02079e2a9eb8e",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dca90ec33fe04d76acc96c750acea32b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "8000"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "fef5572a431c4fde8517afbe902a131f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e040cd905de141c8a8e0ef78b5e99845",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16425a1079ef4e508777b3f362bfc45c",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4d510c5a94814cffa3d4ae58fe74664c",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "3389f2f57284482e9095339b7cd6ad17",
          "Name": "bdName",
          "Description": "bdName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "742b72aa21234b019b2b5bc200b03c86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "bdName;"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf285",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3bd",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3c5",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3cd",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3d7",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3dd",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3e5",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3ed",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3f7",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf3ff",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf407",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf40f",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf417",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf436",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf493",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf518",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf55f",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf590",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf689",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf77a",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf7cf",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf876",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf91f",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf974",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bf9e5",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfa5e",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfa93",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfc5c",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfd07",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfe69",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002bfe73",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c011c",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0293",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c029d",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02a7",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02b1",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02b9",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02c3",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02cf",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02d9",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02e3",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02ed",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c02f7",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0301",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0309",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0313",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c031d",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0327",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0339",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0467",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0471",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c047b",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c048c",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c062e",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0638",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0642",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c064e",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c0658",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c066c",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c07a6",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c07b0",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c07ba",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c1676",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c16c5",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c174f",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c1764",
        "9bcf6978-584d-4e5e-a696-1309c33663f9-002c181f",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c185c",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1872",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c188a",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18a6",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18c3",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c18e1",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1928",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c193f",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1971",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1987",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19ab",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19c2",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19dd",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c19f9",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1a75",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1a8c",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b01",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b1d",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b31",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b50",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1b77",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1bd0",
        "98d7b8b9-81d8-469e-bf00-dac4f15df839-002c1bea",
        "4389afa9-d8df-47c4-a79e-f651437b0492-002c1d18",
        "1821b493-da5d-45d4-b4d0-081992f26d53-002c4bf6",
        "1821b493-da5d-45d4-b4d0-081992f26d53-002c4c2d"
      ],
      "Id": "c1fcec73c860411f965c3205e13a53bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6037781503fb4cc0a655bcdda044e481",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "그룹모드",
          "Item": "그룹모드"
        },
        {
          "Name": "개별모드",
          "Item": "개별모드"
        }
      ],
      "SelectedIndex": 0,
      "SelectedString": "그룹모드",
      "Id": "ec0957085d604537b91f29637a0fd228",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "147d5333460e47acb5c61aefba6da013",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n# Add Revit API references\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\ndef get_geom_elem(mode, elems):\r\n    res = []\r\n    tmp = []\r\n    if refLine_mode==\"그룹모드\":\r\n        for elem in elems:\r\n            try:\r\n                tmp.append(elem.Geometry()[0])\r\n            except: pass\r\n        res.append(tmp)\r\n    if refLine_mode==\"개별모드\":\r\n        for elem in elems:\r\n            try:\r\n                res.append(elem.Geometry())\r\n            except: pass\r\n    res_ = go(\r\n        res,\r\n        filter(lambda x: x ),\r\n        list,\r\n    )\r\n    \r\n    return res_\r\n    \r\ndef get_btm_srf(geom):\r\n    filter_rule = lambda srf: go(\r\n        srf,\r\n        lambda x: x.NormalAtParameter(0,0),\r\n        lambda x: x.Z,\r\n        lambda z: z==-1,\r\n    )\r\n\r\n    res = go(\r\n        geom,\r\n        lambda x: x.Explode(),\r\n        filter( filter_rule ),\r\n        list,\r\n    )\r\n    \r\n    return res\r\n\r\n#to convert point\r\ndef feet_to_m(a,b,c):\r\n    k=0.3048\r\n    return XYZ(a/k,b/k,c/k)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\nrefLine_mode = IN[1]\r\ntgt_elems_ = IN[2]\r\ntgt_elems = go(\r\n    tgt_elems_,\r\n    filter( lambda x: \"Lean\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),#.AsValueString() ),\r\n    list,\r\n)\r\ndescent_height = IN[3]\r\noffset_gap = IN[4]\r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\ndef make_refLine_forExca(refLine_mode, tgt_elems, descent_height, offset_gap):\r\n    all_geoms = get_geom_elem(refLine_mode, tgt_elems)\r\n    bdCuboids = go(\r\n        all_geoms,\r\n        map( lambda x: BoundingBox.ByGeometry(list(x)) ),\r\n        map( lambda x: x.ToCuboid() ),\r\n    )\r\n    btmSrfs = go(\r\n        bdCuboids,\r\n        map( get_btm_srf ),\r\n        lambda x: chain(*x),list,\r\n        map( lambda x: x.Translate(0,0,descent_height) ),\r\n    )\r\n    \r\n    refLines = go(\r\n        btmSrfs,\r\n        map( lambda x: x.PerimeterCurves() ),\r\n        map( lambda x: PolyCurve.ByJoinedCurves(x) ),\r\n        map( lambda x: x.OffsetMany(\r\n            signedDistance=offset_gap,\r\n            extendCircular=False,\r\n            planeNormal=None)\r\n            ),\r\n        lambda x: chain(*x),list,\r\n        map( lambda x: x.Explode() ),\r\n        list,\r\n        #map( lambda x: ModelCurve. .GeometryCurve(x) ),\r\n    )\r\n    \r\n    # Step 4: Start a transaction to create the ModelCurve\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    \r\n    # Create the ModelCurve in Revit\r\n    res = []\r\n    for refLine in refLines:\r\n        tmp = []\r\n        for line in refLine:\r\n            try:\r\n                model_curve = Revit.Elements.ModelCurve.ByCurve(line)\r\n                tmp.append(model_curve)\r\n            except:\r\n                pass\r\n        res.append(tmp)\r\n    # Complete the transaction    \r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    \r\n\r\n    \r\n    return refLines, res\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"토공참조선작성모드\":\r\n    OUT = make_refLine_forExca(refLine_mode, tgt_elems, descent_height, offset_gap)\r\nelse:\r\n    OUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e2880396992841d2827e53d2f2cf8e31",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8752db9aa49e4f1885d7dec6a128dbab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "925be649b07949999d0d400591105eb4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46b8228789ea43be98de7c280497a878",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3588a078a1fe41618d080e0899cd9c03",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bbc7f1a6022444585c1c396cb569849",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fef097660a584937a3ddf63d52e3eaa9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "3c9c05912bcd4f21a83d0ee995482a3f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "42dc965221104d70a907735a6c396959",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a8cd445ddef414ca02cf5bdfe81947b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09b28190b3cf4a198aada165e597f87c",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b63721825be149fea36a318539265b92",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cb81582893f48cda8dd3bbbf5b8520d",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "1338a90484f541299269e48957d2252c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d25f05b8f1d54f88ac2fb694c8cd0f5a",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a4b1e63bcc4497a91ca0e48148eebab",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8bec34c01d54113a0d245322974061c",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e573bcfdb1ab4a56a5dbdfdf7c4dadca",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4c73d59ea5af4fe2ac05a32c1ec1807a",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7c0f03a172342f8a7231d2fcfe207ea",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d582196cdbe4521890b952417aac578",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1d9c48bf80fc46419502005cda990f86",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25dad0161dd54658ab05cb76268b3304",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dd324403c8d2426297eb22420423adb6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "69a86eb44223415fadb64f75354c366f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3009e9c9b4d947ee8b8aa758a6890b06",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0a3b2e440854d49afe1e1511d6a22e3",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "18aba5663c574ee286b695875f5baecf",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d5fcff616f14abc9464a8f3e1209b79",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b7785df8d1fd43a3aaaaefacc9d0bc7a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4224b02d3b74455e85cb66cb8b574bb0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c82b101ace0a457682d6c2bd38843e2b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f661514cc0754a53805af48a513bf572",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73e1a81ee83a479680dc7462523514a5",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdbf88cfaa9c43f5ae8126b7e856abc9",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "461e3721ec6a4d26b879f546e0908112",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3130d632dc34de499e1c47435434b95",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b75e9b72598045128e4cd6a9e5f8f46d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3887574f51d346b986aef0d3f36e8a84",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "542dfabf165f45d9809263c96dc1820e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39335c51b4c2436dae2df0ad60073f03",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3b24ad1bfd164309a72773ac7d209e74",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ff804761a0bd49bbb4b5a313758837a4",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "643604a41db34868a641ff9362523dc3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "27b0ea6c7a7b4831b2fdfeab014e9389",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "13f120225f4641b2b215fbc82f830f19",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bc58ea7d7fb474d9d84dede6c494d58",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 302,
      "SelectedString": "OST_Lines",
      "Id": "591889c6fe8a4647aeaab636623a76d8",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b7d469902b04bc6ab13094379f25c8a",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "25c88cea114d477b91fe86fb4c02be42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8216ef83e81e49a8a909404b87007147",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9e9e6f0461f453ea9dafdd20bce0f56",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5be6e756780f4979a499b8cfe8041258",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "892c0f7f18834d3992030ee82d6cf1fd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cad1ee3cc1546758c17913caf6cbed1",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2626829eff141e48b35ebd5f2acbeed",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "977fc4e68df849e4be62353155dd68b2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "26e7e62fcdfd49c2bbcaa1c9a51b15e0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Detail Line\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4e4342225379411ca2567ee9826dbfa8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5f1df1d013bc40f68b6f8fe50e8d6b7f",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b158f73d62ab4613bb41bb35ff070183",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84ddb0023b3444659d75c25e4c2cfe32",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a740931af0ac415e9fa13cfa310345f7",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e7eb00eb7e9d4727b84ad39bc3dc6667",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "4f860622e0dc41888babb709153e2b48",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "288f267d10ae4d1a86fc563a6abfe136",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i==0?true:false;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 2,
      "SelectedString": "TOF",
      "Id": "9ff8ea3a3df243d0b2b7ccc57106e18d",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b2812c24da34c83abdbcc2e9ab6cee6",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "45694e26cbdf4c5390294ff64865ef54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b211cb3d4d5346c7a5fb30c6b33b4022",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76e75a56f1b143c79f690643b0e10f7a",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "afcf64071a22497bb205b94bf7425c1c",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "d6d4b4d3230f43caae8e0428550a11b1",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5e3044d94814a88a9c8c75c084896dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i*1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f5fe8f9c5ba642238307a16c7be10c4d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e4cbc6f34bed46bc8dddb9c953bd3581",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6f00a42b0884cc48cf76371fcb79357",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf7bbcafe1af4e43a582c9febe85fc55",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a179122c5d914896acba1cb4b503e4cf",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5edc83bed9f44e1fb33333a8cf8217bc",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bff64d882147417291808d49d7b59838",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5331cdd1a45741d49f1fe50ac9ce929d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "d9c314bc1f7b482f880d578bdaa835d0",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72424ea9b4a2464389809d7e67baf4d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4335018d9de645d7aceeb3c58948ee03",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "0ac700dd1b2c4148ba362c9834b0eaa4",
          "Name": "G",
          "Description": "G",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "501c6ff30b874d74b7a5e2f47b346db7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "G;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Import required Revit API and services\r\nimport clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference(\"RevitNodes\")\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the active document and UIDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\nuidoc = uiapp.ActiveUIDocument\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Input: View name from Dynamo\r\nview_name = IN[0]  # View name (string) to open\r\n\r\n# Find the view by name\r\nviews = FilteredElementCollector(doc).OfClass(View).ToElements()\r\ntarget_view = None\r\n\r\nfor view in views:\r\n    if view.Name == view_name and not view.IsTemplate:  # Ignore view templates\r\n        target_view = view\r\n        break\r\n\r\n# Open the view if it exists\r\n\r\nif target_view:\r\n    # Start a transaction\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    \r\n    uidoc.RequestViewChange(target_view)  # Opens the target view\r\n    \r\n    # Complete the transaction    \r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    OUT = \"View opened: {}\".format(view_name)\r\n\r\nelse:\r\n    OUT = \"View not found: {}\".format(view_name)\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ac80177712a2432b8cd2438a52767d01",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "41fe519e39204368a3e17c03adc8a7dd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98c38d03e4a6471cb46e758ae0b2ec57",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9f716c2978a743279c7407a634a31b9b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e6e0c6647d04514893d4d04301d452a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"3D_AR_for Earth Calc\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "d898cc3c2bba495d939dd99fff568523",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2784434345e44e09111f0d7cc2219cc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncommon_info_str = IN[0]\r\n# Place your code below this line\r\n\r\ndef parse_commonInfo(common_info_str):\r\n    res = common_info_str.split(\"\\n\")\r\n    \r\n    res = go(\r\n        common_info_str,\r\n        lambda x: x.split(\"\\n\"),\r\n        map(lambda x: x.strip()),\r\n        filter(lambda x: \"---\" not in x),\r\n        filter(lambda x: \"<\" not in x),\r\n        map(lambda x: x.split(\":\")),\r\n        map(lambda x: float(x[-1])),\r\n    )\r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = parse_commonInfo(common_info_str)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d183314fc9f84d0585d3aa23617e7dd1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "96cd0a054aea4c3fbb493e3cf8d54eff",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f890ed3563fe475ea45d90e52e855747",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b764e90b3fb148af9fc85367fdfd11ec",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "38ef5c7bbac24ad083c621fc9d6f5c0c",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2f332671cdf4ad981254e42b522c6d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8927ab6f212448eb1470a60bc13e855",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "637e0f88c9154186afec1060127199d8",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d236312c5cf46cebc8be34080d09b5c",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f22c568bbe754f8a95346005244abe48",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14ef8b93f3524143a5d17197daf76141",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0];\ni[1];\ni[2];\ni[3];\ni[4];\ni[5];"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "A. 토공참조선작성모드",
          "Item": "토공참조선작성모드"
        },
        {
          "Name": "B. 물량산출모드",
          "Item": "물량산출모드"
        },
        {
          "Name": "* 토공객체삭제모드",
          "Item": "토공객체삭제모드"
        }
      ],
      "SelectedIndex": 0,
      "SelectedString": "A. 토공참조선작성모드",
      "Id": "1c8ef8f989844fc0bd4b898667fb3ed6",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2bc2627c68d4eb0bb4de390108ede51",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "c5ebc6f0b3ea414b83659c5adf64b856",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "367e67d4746843c6b616311804d470e9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(m : GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "36807ed35bb54ec788bd788e7498708f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c68c2f5a2f0a4d71850536f8b1258df9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08fea8bb341d48938dffb61b7ee05624",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbbd449aaf9f4703bb20ddb379a20891",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14e37345de794730b95fee619d8fccee",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0];\ni[1];\ni[2];"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n# Add Revit API references\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\ngroup_closed_curves = IN[1]\r\nbelow_refLines = IN[2]\r\nVCF, GWL, G, GL = IN[3]\r\nall_elem_solid = IN[4]\r\nc1_d2 = IN[5]\r\n# Place your code below this line\r\n\r\n\r\ndef make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2):\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    below_refPolyline = go(\r\n        line_grp,\r\n        PolyCurve.ByJoinedCurves,\r\n        \r\n    )\r\n    \r\n    btm_ref_Z = go(\r\n        line_grp,\r\n        map(lambda x: x.StartPoint.Z),\r\n        min,\r\n    )\r\n    \r\n    height_to_GL = GL - btm_ref_Z\r\n    \r\n    if height_to_GL > 0:\r\n        upper_pre_refPolyline = go(\r\n            below_refPolyline,\r\n            lambda x: x.Translate(0,0,height_to_GL),\r\n        )\r\n        \r\n        upper_offset_refPolyline = go(\r\n            upper_pre_refPolyline,\r\n            lambda x: x.OffsetMany(\r\n                signedDistance=(height_to_GL * G),\r\n                extendCircular=False,\r\n                planeNormal=None\r\n                ),\r\n            lambda x: x[0],\r\n        )\r\n        \r\n        if upper_pre_refPolyline.Length > upper_offset_refPolyline.Length:\r\n            upper_offset_refPolyline = go(\r\n                upper_pre_refPolyline,\r\n                lambda x: x.OffsetMany(\r\n                    signedDistance=-(height_to_GL * G),\r\n                    extendCircular=False,\r\n                    planeNormal=None\r\n                    ),\r\n                lambda x: x[0],\r\n            )\r\n        \r\n        res = Autodesk.DesignScript.Geometry.Solid.ByLoft(\r\n            [below_refPolyline, upper_offset_refPolyline]\r\n        )\r\n    else:\r\n        res = None\r\n    \r\n    btmRefArea = below_refPolyline.Patch().Area / 10**6\r\n    leanAndOthers_vol = btmRefArea * sum([c1,c2,c3,c4]) \r\n    \r\n    return res, leanAndOthers_vol\r\n    \r\ndef make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2):\r\n    below_refLine_grps = group_closed_curves(below_refLines)\r\n    excaSolids = []\r\n    leanAndOthers_vol = []\r\n    for line_grp in below_refLine_grps:\r\n        if make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[0] != None:\r\n            excaSolids.append(\r\n                make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[0]\r\n            )\r\n        leanAndOthers_vol.append(\r\n            make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[1]\r\n        )\r\n    res = Autodesk.DesignScript.Geometry.Solid.ByUnion(excaSolids)\r\n    total_leanAndOthers = sum( leanAndOthers_vol )\r\n    \r\n    return res, total_leanAndOthers\r\n\r\ndef find_earthCalc_solids(below_refLines, VCF, GWL, G, GL, c1_d2):\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    whole_exca_solid = make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2)[0]\r\n#    total_leanAndOthers = round( \r\n#        make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2)[1], 3\r\n#    )\r\n\r\n    \r\n    gwl_above_solid = go(\r\n        whole_exca_solid,\r\n        BoundingBox.ByGeometry,\r\n        BoundingBox.ToCuboid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==1 ),\r\n        next,\r\n        lambda x: x.Thicken(GWL-GL, False),\r\n        #lambda x: x.Thicken(5000),\r\n    )\r\n    split_for_gwl_solid = Geometry.Split( whole_exca_solid, gwl_above_solid )\r\n    \r\n    if len(split_for_gwl_solid)<2:\r\n        above_exca_solid = split_for_gwl_solid[0]\r\n        above_exca_solid_volume = round(above_exca_solid.Volume/10**9, 3)\r\n        below_exca_solid_volume = 0.0\r\n    else:\r\n        above_exca_solid = split_for_gwl_solid[1]\r\n        above_exca_solid_volume = round(above_exca_solid.Volume/10**9, 3)\r\n        \r\n        below_exca_solid = split_for_gwl_solid[0]\r\n        below_exca_solid_volume = round(below_exca_solid.Volume/10**9, 3)\r\n    \r\n    split_for_disp_solid = Geometry.Split( whole_exca_solid, all_elem_solid )\r\n    backfill_solid = split_for_disp_solid[0]\r\n    backfill_solid_volume = round(backfill_solid.Volume/10**9, 3)\r\n    \r\n    disposal_solid = split_for_disp_solid[1]\r\n    disposal_solid_volume = round(disposal_solid.Volume/10**9, 3)\r\n\r\n    total_leanAndOthers = go(\r\n        disposal_solid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n        map( lambda x: x.Thicken(sum([c1,c2,c3,c4])*1000, False) ),\r\n        list,\r\n        map(lambda x: x.Volume ),\r\n        sum,\r\n        lambda x: round(x / 10**9, 3),\r\n    )\r\n\r\n    res = [\r\n        [\r\n            backfill_solid,\r\n            disposal_solid,\r\n        ],\r\n        [\r\n            [\"Above_GWL_Excavation Volume (m3)\", round(above_exca_solid_volume, 3)],\r\n            [\"Below_GWL_Excavation Volume (m3)\", round(below_exca_solid_volume, 3)],\r\n            [\"Total_Excavation Volume (m3)\", round(whole_exca_solid.Volume/10**9, 3)],\r\n            [\"Backfill Volume (m3)\", round((backfill_solid_volume - total_leanAndOthers), 3)],\r\n            [\"Disposal Volume (m3)\", round((disposal_solid_volume + total_leanAndOthers), 3)],\r\n            [\"Disposal Volume_VCF (m3)\", round((disposal_solid_volume + total_leanAndOthers) * VCF, 3)],\r\n            #[\"Backfill Volume (m3)\", backfill_solid_volume],\r\n            #[\"Disposal Volume (m3)\", disposal_solid_volume],\r\n            #[\"Disposal Volume_VCF (m3)\", disposal_solid_volume * VCF],\r\n           \r\n        ]\r\n    ]\r\n\r\n    \r\n    return res\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    OUT = find_earthCalc_solids(below_refLines, VCF, GWL, G, GL, c1_d2)\r\n    #OUT = calc_allLeans_base_volume(c3c2_ratio)\r\nelse:\r\n    OUT = [[[]]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8f7bcda97ed74a4ea3b572a0190b69ab",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9258fb475e9749fd9f6ac2512d2fb03e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84b577131335418abd5311428370f1e9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78cb9bef05f9403caf256922fac990a9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67b3c75d540c475dae3744eec37313e3",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9b31c8b592e469ea5ec26e50940205b",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ce37801faeb43b2a7e8f96e69ddd186",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "375f14f0d77440469e9107fd84b3f631",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n#clr.AddReference(\"Revit.GeometryConversion\")\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n#import Revit.GeometryConversion #import ProtoToRevit, RevitToProto\r\n#from Revit import GeometryConversion\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\n\r\n\r\n#########################################################################\r\ndef get_QGeometry(elem):\r\n    # Revit Document 객체 가져오기\r\n    doc = DocumentManager.Instance.CurrentDBDocument\r\n    revitElement = UnwrapElement(elem)\r\n    \r\n    # Geometry 가져오기 옵션 설정\r\n    geometryOptions = Options()\r\n    geometryOptions.DetailLevel = ViewDetailLevel.Fine  # 세부 레벨 설정 (Fine, Medium, Coarse 등)\r\n    geometryOptions.IncludeNonVisibleObjects = True    # 비가시 기하학 포함 여부\r\n    \r\n    # GeometryElement 가져오기\r\n    #geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n    geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n\r\n    # Geometry 변환 리스트 초기화\r\n    dynamoGeometries = []\r\n\r\n    # GeometryElement 내의 GeometryObject 순회\r\n    for geomObj in geometryElement:\r\n        # Revit GeometryObject를 Dynamo Geometry로 변환\r\n        dynGeom = geomObj#.ToProtoType()\r\n        #dynGeom = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geomObj)\r\n        if dynGeom:\r\n            dynamoGeometries.append(dynGeom)\r\n    \r\n    return dynamoGeometries\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Rooms,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    \r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def get_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def get_ug_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_ug_cols():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n        \r\n    def get_ug_frames():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_railElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n        \r\n    def get_genericModels():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            #filter( lambda x: DSCore.Object.Type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            filter( lambda x: type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    pre_res = go(\r\n        list(chain(*map(get_elems, bics))),\r\n        filter( lambda x: \"Lean\" not in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n        list,\r\n    )\r\n\r\n    res = [\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Rooms),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming),\r\n        get_ug_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Walls),\r\n        #get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Floors),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation),\r\n        #list(map(get_elems, bics))# + get_genericModels()\r\n        pre_res,\r\n    ]\r\n\r\n    return res\r\n\r\ndef get_solid(element):\r\n    geos = []\r\n    for geo in element.get_Geometry(Options()):\r\n        geos.append(geo)\r\n    \r\n    #res = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geos[0])\r\n    \r\n    return geos[0]\r\n\r\n\r\ndef union_solids(solids):\r\n    \"\"\"\r\n    주어진 Solid 객체 리스트를 유니온하여 하나의 Solid로 반환\r\n    :param solids: List[Solid]\r\n    :return: Solid\r\n    \"\"\"\r\n    if not solids or len(solids) < 2:\r\n        raise ValueError(\"유니온을 수행할 최소 2개의 Solid가 필요합니다.\")\r\n    \r\n    # 첫 번째 Solid를 기준으로 시작\r\n    result = solids[0]\r\n    \r\n    # 남은 Solid와 반복적으로 유니온 수행\r\n    for solid in solids[1:]:\r\n        if solid.Volume > 0:  # Solid가 비어 있지 않은지 확인\r\n            result = BooleanOperationsUtils.ExecuteBooleanOperation(result, solid, BooleanOperationsType.Union)\r\n    \r\n    return result\r\n\r\ndef get_allElems_unionSolid(allElems):\r\n    allRooms = get_allElems(doc)[0]\r\n    allElems = list(chain(*get_allElems(doc)[1]))\r\n    res = go(\r\n        allElems,\r\n        #map(lambda x: dir(x)),\r\n        map( lambda x: get_solid(x) ),\r\n        list,\r\n        #map(lambda x: get_QGeometry(x)),\r\n#        lambda x: chain(*x),\r\n        lambda x: Solid_ByUnion(x),\r\n    )\r\n    return res\r\n    \r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    OUT = get_allElems(doc)\r\nelse:\r\n    OUT = [[]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "40c0649d2aef40e4b6dfefab8827545c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f8707e90a92e49c5918e641835088242",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dffa7dc0929842e886f617e2f43d7abc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e731a6054af14c22ad1abe966ad50a2a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78dc041da93e45ab98fc034007b77ad5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf6fb6bc8434747b734761fbea68ca9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91ea0ce1b40e4bb8a59bf35a09d58635",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1a069ed848e7430a9deb3e3ef0f72b32",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "be1254ceccca495d97e745a736036fe9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3a9fe157edf454c83368a9e871cb5ec",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "129d0975b42940088c8c76b1522e2f0f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6520885898b14841a8ea2b9ba7071692",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ddf025c3e4d145e88d83e0f73080fecc",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4eea3849a6a4db88c2a7d881809cd59",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bd263cd2761044758867a928af0d553f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "7fe243d7421a4066a8213dcc7e5251ae",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a442ede6c8114575bcc7987f2cb7beb6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "18b7185c493b4b34abdced738675d953",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "4dd2d89cbc164d718d8c7c7cf270a9a8",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd5d6c2394bb415991bf4aa1e3792666",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "16fb2fdc7ce44da48248c5441dd82123",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3188393434e640219508c506fcfa6f85",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baf19ad2cdc347e0b066677a7b598d0f",
          "Name": "geometry[]",
          "Description": "The element’s location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Replication": "Auto",
      "Description": "Returns an element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncommon_info_str = IN[0]\r\n# Place your code below this line\r\n\r\ndef parse_commonInfo(common_info_str):\r\n    res = common_info_str.split(\"\\n\")\r\n    \r\n    res = go(\r\n        common_info_str,\r\n        lambda x: x.split(\"\\n\"),\r\n        map(lambda x: x.strip()),\r\n        filter(lambda x: \"---\" not in x),\r\n        filter(lambda x: \"<\" not in x),\r\n        map(lambda x: x.split(\":\")),\r\n        map(lambda x: float(x[-1])),\r\n    )\r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = parse_commonInfo(common_info_str)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "822b6bdf5810416bb58840cf8cd4bb66",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7a01a92c8635435b86bb90f7618cfe20",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59e0ac1fcffb4225aa66dc46756eee5a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ead180525cc042dfa2504f3dd3c1e750",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a7a409948800411b9dfb6cdeb0231ac8",
          "Name": "GWL",
          "Description": "GWL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcc22016be8b4d01994a6675c4319ddf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "GWL;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "1df28b41a9b14c8c956f3328c8738007",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2bf7a640b8f344399fc8d5a1412004f8",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "902e1bebdee94fbe99009e1174fac2cb",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d79bc73cff36494abbdb199b9465e63c",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08a9bc901bae46a5891fa7786e95454e",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68f3ffaee1e643b9b0f146c7d531313b",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e0c86f122847424dac5fc1edbe972adb",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "4a1e98e0045444ec921bd179e062115a",
          "Name": "VCF",
          "Description": "VCF",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "852fb5bef8af461fba493036669ce854",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "VCF;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4b789ff8fed24d4db9fc70a07e87c2a9",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "6d34ca6186854f7a9c83c723e9e34113",
          "Name": "comm_infos",
          "Description": "comm_infos",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3bc824f3192f4a15937d6e0deb477848",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "comm_infos;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9314854b56ca4ba29fe4cad964819dee",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "38e9c6f83d0043eaa3db0612a9b13de8",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69b1936ea99e42f09214a577cd487e61",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "79e76a2f25b24c0484d6ce85b28558a5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a7fd4781dda24150a65b4e705fd43bd7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be99f57752484cf9b01f784b945bcaec",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nimport math\r\n# Import Dynamo Geometry Library\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import Line, Point\r\n\r\n\r\n\r\ndef find_closed_loops_dynamo(lines):\r\n    \"\"\"Find closed loops from a list of Dynamo Line segments.\"\"\"\r\n    def is_close_dynamo(point1, point2, tolerance=1e-6):\r\n        \"\"\"Check if two Dynamo Points are close within a given tolerance.\"\"\"\r\n        return (\r\n            math.isclose(point1.X, point2.X, abs_tol=tolerance) and\r\n            math.isclose(point1.Y, point2.Y, abs_tol=tolerance) and\r\n            math.isclose(point1.Z, point2.Z, abs_tol=tolerance)\r\n        )\r\n    \r\n    closed_loops = []  # Stores completed closed loops\r\n    source_list = lines.copy()  # Clone the source list to maintain original data\r\n\r\n\r\n    while source_list:\r\n        inspection_completed = []  # List to track inspected lines\r\n        current_line = source_list.pop(0)  # Step 1: Select the first line\r\n        inspection_completed.append(current_line)  # Add it to inspected list\r\n\r\n        # Initialize start and end points\r\n        start_point = current_line.StartPoint\r\n        end_point = current_line.EndPoint\r\n\r\n        while True:\r\n            # Step 2: Find a line that connects to the last end point\r\n            matching_line = None\r\n            for line in source_list:\r\n                if is_close_dynamo(line.StartPoint, end_point):\r\n                    matching_line = line\r\n                    new_start = line.StartPoint\r\n                    new_end = line.EndPoint\r\n                    break\r\n                elif is_close_dynamo(line.EndPoint, end_point):\r\n                    matching_line = line\r\n                    new_start = line.EndPoint\r\n                    new_end = line.StartPoint\r\n                    break\r\n\r\n            # If no matching line is found, break the loop\r\n            if not matching_line:\r\n                break\r\n\r\n            # Update end point and add the matching line to inspected list\r\n            end_point = new_end\r\n            inspection_completed.append(matching_line)\r\n            source_list.remove(matching_line)\r\n\r\n            # Step 3: Check if the loop is closed\r\n            if is_close_dynamo(start_point, end_point):\r\n                # Step 4: Add inspection list as a closed loop\r\n                closed_loops.append(inspection_completed)\r\n                inspection_completed = []  # Reset for the next loop\r\n                break\r\n\r\n        # Step 6: If loop is incomplete, reset inspection list\r\n        if inspection_completed:\r\n            source_list.extend(inspection_completed)\r\n\r\n    return closed_loops\r\n\r\n\r\n\r\n# Find closed curves\r\n#closed_groups = group_closed_curves(lines)\r\n\r\n# Output: List of groups forming closed curves\r\n#OUT = closed_groups\r\nOUT = find_closed_loops_dynamo",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4c4212003b724ed7bec9a4dc23b35735",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "956c864cd8f7481785db063fab793fb5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ace3fc47ee649f0a8b08e092253fe5c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ac350ab23fca4665b347d22badc79a9f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "10b1c638220f44e68ea8fd0d1ab823d9",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a16bf56bccfe49488476ded50f84ca14",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "801b6049951d4e3d97f724ae7c13fd6d",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ccf3e005fd343dd93d67d041a9cc8a3",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e97887ee15424bff9e56ed53ccca3689",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e064875705f049dfb7460e6872dc217b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "cb8fe5029b1441039012162d59803e11",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9db57a96a4d8467caa40534532c4aba8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "3721a1e7f7b94282aa6f7e63632a2e20",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e05262c35131488ebef7a41a75f32b56",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b92475859e2045e98c2cd661ca077fa3",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc7a5b326afc4a96bd8e503d083356bf",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aff51406b2da410fbc8ffb5cb3def9b5",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6d74907ef0143e09d18db672ff42d03",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4614515f750f4a6b864f5d22b67f7a68",
          "Name": "width",
          "Description": "Width of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21b8e1d403e34b5ab5e1a27cbbacfa7a",
          "Name": "length",
          "Description": "Length of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfbb681dee41423aaed37ded892265a9",
          "Name": "height",
          "Description": "Height of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "682e7612859d4e81b2717bc04c94355b",
          "Name": "Cuboid",
          "Description": "Cuboid created by lengths",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@double,double,double",
      "Replication": "Auto",
      "Description": "Create a Cuboid centered at WCS origin, with width, length, and height.\n\nCuboid.ByLengths (width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3fb9ac7931864c8192108b5adda5d624",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "458f38a7beb84c1a802c17edf09c70a4",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cc83a26e5024ca5a1909d57040b1125",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b4120c3680414d91bc2ceda3a7229c88",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa54c55a3d954c9e818824945dee68fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[];"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 271,
      "SelectedString": "OST_GenericModel",
      "Id": "78a29380e41a416ba2369f6b6a68595b",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6220803c7c2a4d689a3a0d914b776ab2",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "ebbab7fe769f4acbb4da07b9509c5cfe",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d6e7537ca9224b0b9c3f2fb9ea77ac79",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b63e699eca84f5fa362b9ca8930ee0b",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bdfd49a060a4cdbab703b522ef2f85e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5370e490a0740e38bd8f5c4ce3d64f3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2c5ed5e961944687b4173c852167f980",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "bfd2e75ee2fa4daaa140340bafa2d1d3",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d399dcae4eab49618c93841312b66ac5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0][0];"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "9bcf898e0bda443d8e1a87ae89619706",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d830b8e9e27a43859a29012a7c98ec18",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a10b3067fed94366b2de385d39324cd3",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "04c9ae06ebe44a77b72aaf82de8bd48c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34e36a96338b4ecb8634113526abe659",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "본 토공 물량 산출기는\r\n터파기하단선 작성 → 형상 및 물량 산출의 순서로 이루어집니다.\r\n아래 [0.1] 항목에서\r\n\"A 모드 선택 후 실행 → B 모드 선택 후 실행\"의 순서로 이용십시오."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallElems = IN[0]\r\ngl_elev = IN[1]\r\n# Place your code below this line\r\n\r\ndef getGeoms(elems):\r\n    res = []\r\n    for elem in elems:\r\n        try:\r\n            res.append( elem.Geometry() )\r\n        except:\r\n            pass\r\n    return res\r\n\r\nallGeoms = list(chain(*getGeoms(allElems)))\r\n\r\nget_bottom_elev = lambda geom: go(\r\n    geom,\r\n    lambda x: BoundingBox.ByGeometry(x).ToCuboid(),\r\n    Geometry.Explode,\r\n    filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n    next,\r\n    lambda x: x.PointAtParameter(0,0).Z ,\r\n)\r\n\r\nres = go(\r\n    allGeoms,\r\n    filter(lambda x: get_bottom_elev(x) < gl_elev ),\r\n)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3f35264bc1ed4779b0893083e1de2cc1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7a0066063335431db352b862df0cf977",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f674a593c1a64b8d80b64ca54584bd25",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54ba488712f24645a60b54a9be4c98e8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a710f251caff4a27b25963549f28ec27",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "3ab68ea061b94e04a365e2d52e39b053",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92104ae700354c7ba02b7aeb1e020ace",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom datetime import datetime\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n\r\ndef log_with_timestamp():\r\n    timestamp = datetime.now().strftime(\"%Y-%m-%d_%H%M%S\")\r\n    return f\"Backfill shape_{timestamp}\"\r\n    #print(f\"[{timestamp}] {message}\")\r\n# Assign your output to the OUT variable.\r\nOUT = log_with_timestamp()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c7a8b14ae1764eaeafe8daba1072fde5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8bfa5eb62f554c03b4b50e919e343cb2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "580d984fb4cc42fdab3d77c73f971cad",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "20e43fd35a704884a7d0df61a6c1db5e",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "6058c2e237df4807bee04100b83520bc",
          "Name": "c2",
          "Description": "c2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ce404de17244dd7aabf3ee20e320cae",
          "Name": "c1",
          "Description": "c1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79f27a77a10c4dcaa2b2eb2ae4f01d32",
          "Name": "c3",
          "Description": "c3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feac65772746403381a1787402fcd33c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\nc2/c1,\nc3/c1\n];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0c36d54a65a3421a80733db774a1d047",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "24d4567102e5411a8f0da30362461dd4",
          "Name": "c3c2_ratio",
          "Description": "c3c2_ratio",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8db6d6ab40a045b299ea9ff991ecd515",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c3c2_ratio;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b8ece175ed67499aaf07d7ee3e89c68b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e111778ebd134609a63b16a306e0dc31",
          "Name": "c3c2_ratio",
          "Description": "c3c2_ratio",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "666dad4522d243fb8d7b2e9a65196ea1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c3c2_ratio;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8688612e9aa44ff4bea3805130ac5555",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c8a1a29f1b554a62845e8411e6349c3f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4c87768c82e4fbd92a5d5a95fc7d56a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\ni[0],\ni[1],\ni[2],\ni[3],\ni[4],\ni[5]\n];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e7e4ecb7955c4b3c962b4fc2cad4fe95",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "27d12b9ab83d4d3292bfd75a76c4cdb5",
          "Name": "c1_c4",
          "Description": "c1_c4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38fb01da8048485a8bbb8441a726e76c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c1_c4;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "24b95594fbaf40eaaeab996157a0a104",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "790f6425e79e4fbd84a250d227f93d0c",
          "Name": "c1_c4",
          "Description": "c1_c4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3eb70582b93441595b9056f15b8d232",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c1_c4;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e7a25190a3c6488d95373d871d0fb039",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ce66cc0b71c481f8ef36980e848cd11",
          "Name": "Point",
          "Description": "Project Base Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Coordinates.BasePoint",
      "Replication": "Auto",
      "Description": "Get Project Base Point\n\nCoordinates.BasePoint ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e33a4dd07d4447b2b96ef23b9bc57d19",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eee63aa282c0431ba8e1a3f5d15dd785",
          "Name": "Point",
          "Description": "Survey Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Coordinates.SurveyPoint",
      "Replication": "Auto",
      "Description": "Get Survey Point\n\nCoordinates.SurveyPoint ( ): Point"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "3e80e620254f46ab9feaf6bb6e52e493",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c3981641c76f4a8488763e17b26ca9f9",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a28ca3a7fcf4091b9db0d4f22965ed4",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b06296458370433d888569c6f3cc521c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ac1c31c4b307486d9c803b5afad8fc2c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65c06bc725504f4d8f7e8134fad83f43",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25120007f27c4f98aa74766b02060bdb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0f7c27495826488ebe398d343fecec09",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72f51d44097f4532ad73903e1aafff0b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Detail Line\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "426500c7e68f44a1ba06f44ffe8644e8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ff64ae79ffca437fbfc800ada6621682",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ad30687e3344e7c9400ce3d8d3c5526",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abea125e7b4845f4a0fa23383f357aa8",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c30579106654807b11059d100038702",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0eea658601884ecf84dd705e42645228",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e8295f77f28f4fa88877c5cae82f6403",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57304db59d9e4160ad4584263632a267",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i==0?true:false;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 302,
      "SelectedString": "OST_Lines",
      "Id": "26b4922c2a404062852f379baa03285b",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "401d62507f66462b9d485be8cca7a40a",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n#clr.AddReference(\"Revit.GeometryConversion\")\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n#import Revit.GeometryConversion #import ProtoToRevit, RevitToProto\r\n#from Revit import GeometryConversion\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\nmodel_lines = IN[1]\r\n\r\n#########################################################################\r\ndef get_QGeometry(elem):\r\n    # Revit Document 객체 가져오기\r\n    doc = DocumentManager.Instance.CurrentDBDocument\r\n    revitElement = UnwrapElement(elem)\r\n    \r\n    # Geometry 가져오기 옵션 설정\r\n    geometryOptions = Options()\r\n    geometryOptions.DetailLevel = ViewDetailLevel.Fine  # 세부 레벨 설정 (Fine, Medium, Coarse 등)\r\n    geometryOptions.IncludeNonVisibleObjects = True    # 비가시 기하학 포함 여부\r\n    \r\n    # GeometryElement 가져오기\r\n    #geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n    geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n\r\n    # Geometry 변환 리스트 초기화\r\n    dynamoGeometries = []\r\n\r\n    # GeometryElement 내의 GeometryObject 순회\r\n    for geomObj in geometryElement:\r\n        # Revit GeometryObject를 Dynamo Geometry로 변환\r\n        dynGeom = geomObj#.ToProtoType()\r\n        #dynGeom = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geomObj)\r\n        if dynGeom:\r\n            dynamoGeometries.append(dynGeom)\r\n    \r\n    return dynamoGeometries\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Rooms,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    \r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def get_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def get_ug_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_ug_cols():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n        \r\n    def get_ug_frames():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_railElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n        \r\n    def get_genericModels():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            #filter( lambda x: DSCore.Object.Type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            #filter( lambda x: type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            filter( lambda x: \"Backfil\" in x.Name ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    res = get_genericModels()\r\n    \r\n\r\n    return res\r\n\r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"토공객체삭제모드\":\r\n    OUT = get_allElems(doc) + model_lines\r\nelse:\r\n    OUT = []",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4c963d58e13440e3b2808c27829ffa31",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4d08b6568e56491a964d8e1a91d6fe30",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15c77f089a484cd18f9b73fcf825fd04",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de78652fbe874743aeb4fe6eb2e59dc7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5242ccc05ade40b5b8e8b7d0c4ccbc34",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5a0bb32714ab44ed88bdc599b423d134",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8eaf4a1cd0f74005bab382dc798cd7c1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cb25696431ec49f7a20477e9c5500e52",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fd72b048648543f2a7143cdc9657b668",
          "Name": "element",
          "Description": "The element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c338f4901b774f939d01c7e5653a00f1",
          "Name": "int[]",
          "Description": "The list of element id's deleted, including any dependent elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Delete@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Delete the element and any elements that are totally dependent upon the element.\n\nElement.Delete (element: Element): int[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsolids = IN[0]\r\nis_boundMode = IN[1]\r\n# Place your code below this line\r\n\r\n\r\n\r\n\r\ndef union_solids(solids, is_boundMode):\r\n    union_obj=None\r\n    if is_boundMode:\r\n        for idx, sol in enumerate(solids):\r\n            if idx==0:\r\n                union_obj = BoundingBox.ByGeometry(sol).ToCuboid()\r\n            else:\r\n                try:\r\n                    bounding_sol = BoundingBox.ByGeometry(sol).ToCuboid()\r\n                    union_obj = union_obj.Union(bounding_sol)\r\n                except:\r\n                    pass\r\n    else:\r\n        for idx, sol in enumerate(solids):\r\n            if idx==0:\r\n                union_obj = sol\r\n            else:\r\n                try:\r\n                    union_obj = union_obj.Union(sol)\r\n                except:\r\n                    try:\r\n                        bounding_sol = BoundingBox.ByGeometry(sol).ToCuboid()\r\n                        union_obj = union_obj.Union(bounding_sol)\r\n                    except:\r\n                        pass\r\n    return union_obj\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = union_solids(solids, is_boundMode)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "61992af6dc044afb83a47c2a33d65bca",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "49122c24e43843859cf9b4a3512ee8f5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2429433c274f462d8f36aaa9c13a1d89",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "134ff1d0f8674cacbe5b5dfc5b0ef31e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\n\r\n\r\nres = go(\r\n    elems,\r\n    #lambda x: list(chain(*x)),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bc690724c0094c43862f307071ab1a07",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c8da18f4af7d486ca8fc51460f66e699",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c678f033bdd14bb4a2c79b876cc60a98",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d46f01bec9444f3819d824a7289ee2f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "15c7c607f5d64473881edacd594f3e40",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f77636a917743a6a99b2011ee2047b7",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "835ec69080604241a56c0e94a75b3a87",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e6fe3138ad446508face6c8bebe751a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ae676c7a092d4e129b34920599b65931",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "928fcf229e7140138d5fccecbffa124e",
          "Name": "is_boundMode",
          "Description": "is_boundMode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f32b0383eaaf43e0a2bc0ce590fc0d35",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "is_boundMode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "046b4178564e46c598392155dad04ba1",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "80d636306d2e4c5091c05c1f12ebaa23",
          "Name": "is_boundMode",
          "Description": "is_boundMode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "252998de1fba491cb1e049b9c96c654c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "is_boundMode;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "1cc32b9bb53840949ee0966179e4c6ec",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b6000ab44eff4c98985a16b38344de0d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0f348c1d00e43c4886e3c197c3717de",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Lines\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Railings\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Doors\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Windows\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Curtain Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash Block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Stairs\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Void\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"void\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a65998c4edef44e1872a508de22c1335",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "34a3d111e33245a0ac0c75f54ce19fd4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22293d3398c74f62bb3b1c3bc3260b8c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6acbca1799b5454198b699a5b793cb8c",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a5bc258e9a77495d8c13ccb7bd909868",
          "Name": "filtered_target",
          "Description": "filtered_target",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bef6a2640ca4967b8f083d2c681e64e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "filtered_target;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "2ec38bb9c798484c9d4f9ca4c3270562",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "69a4264a96a54d3088c1e457abb414ac",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be5fa1a81bf1482e9c5580f02eea8798",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "062bfacd7f0545d08ed525b3bb6efbab",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "23f4615566c643d082ed970950ead1bf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4fceb310f3804d65969983e7bdc88d0c",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d662a723d9404d378898b78e63d55751",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"_Ground Insulation\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Slab Edge\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Edge\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "17f1749771634e99bed2571c399c4f59",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5753e65f32e54e05b4052814ed51ac7a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baeed2ed969c4d8a8c1c2a54201318fa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexca_res = IN[0]\r\nc1_d2 = IN[1]\r\n# Place your code below this line\r\nif exca_res != [[[]]]:\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    \r\n    backfill_solid, disposal_solid = exca_res[0]\r\n    members_btmThicken = go(\r\n        disposal_solid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n        map( lambda x: x.Thicken(sum([c1,c2,c3,c4])*1000, False) ),\r\n    )\r\n    res = members_btmThicken\r\nelse:\r\n    res = 0\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bcf643a5a21647fdbcb47dc32bc43e23",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8b833fa5273d49ea8e70d020a3d3e703",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cfe53ae222f473cbf1f3e5f32014768",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "867feb9d36df45b5aa59c3be8e84a2a4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Lines\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Railings\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Doors\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Windows\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Curtain Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash Block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1b68956335aa492db8caae0904e092bf",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dcd5f0cfb548436abe2f69055505134d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e5e9bc471944d418a5e17e471b66d31",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2144217f779c4d969388ed3434943498",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c9265fe21df4eb983e67575f4bcfda7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d128e0bd3244878b2c6fb1d5dd573f0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ede6451a14994e0d8cf111a5753e6bc6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1de69a865de84efea106629730693a19",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "245351042b9e46d889524838e77b0518",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "491f9e18872a491d902457f24474a9a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0184325c8ff14d8abf43a1523f01f953",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "166330ad47004504ba1474b3b2ec2882",
          "Name": "GL",
          "Description": "GL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15a142558c3442b39fa996070cd0e514",
          "Name": "BP",
          "Description": "BP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "421c3ef2119b444ea6ebb9b12c5f9fc5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "GL + BP.Z;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "76acbf9b2ab14b44a2b4bbb7e49079c2",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c93ccd1c85ee41698a47161cf7d94ecf",
          "Name": "socket",
          "Description": "socket",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b28a5cfc597047b79f95b87604a0af70",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "socket;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "baad84a2047f4b6e971e0192061b8fe1",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a2773c896df1442eac57766f6ab35d43",
          "Name": "pjtBP",
          "Description": "pjtBP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf0e958757034872a0514b9e31f5a039",
          "Name": "GL",
          "Description": "GL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e5b191a98da4d84b1714018eb8a7d18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "pjtBP.Z - GL;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nGL_elevation_prime = IN[0]\r\npjtBasePointZ = IN[1]\r\n# Place your code below this line\r\n\r\nif GL_elevation_prime - pjtBasePointZ < 100:\r\n    res = GL_elevation_prime\r\nelse:\r\n    res = GL_elevation_prime + pjtBasePointZ\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "78f51f111d7d4148aeb033961ee56095",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "91a1506189414dbbade6b246ba1fab0f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae8fcdf26202435b8503e2404f8fade8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c179c302748451bac70573c601558fd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c241e403b5c44f9b8adc6b40c62c7c0d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c0987f1adabc4002a7c463f6ffe1ae48",
          "Name": "BP",
          "Description": "BP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17c5092c60424a969bfb5d5d8df9f0a6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "BP.Z;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport datetime  # For timestamp\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Revit Services와 DocumentManager 추가 (Revit API 접근)\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\ndata = IN[1]\r\n# Place your code below this line\r\n\r\n# 저장할 파일 경로 설정 (경로는 사용자에 맞게 수정)\r\n# 현재 열려있는 Revit 문서 가져오기\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# 파일 경로 가져오기\r\ntimestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n# 리스트를 텍스트 파일로 저장\r\nfolder_path = \"\\\\\".join( doc.PathName.split(\"\\\\\")[:-1] )\r\nmodeling_name = doc.PathName.split(\"\\\\\")[-1].split(\".rvt\")[0]\r\nfile_path = folder_path + \"\\\\\" + modeling_name + f\"_토공산출결과_{timestamp}.txt\"\r\n\r\ndef save_txt(file_path, str):\r\n    try:\r\n        with open(file_path, \"w\", encoding=\"utf-8\") as file:\r\n#            for item in data:\r\n#                # 리스트 항목을 문자열로 변환하고 줄바꿈 추가\r\n#                file.write(str(item) + \"\\n\")\r\n            file.write(str + \"\\n\")\r\n        OUT = \"파일 저장 성공: \" + file_path\r\n    except Exception as e:\r\n        OUT = \"파일 저장 실패: \" + str(e)\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    str = go(\r\n        data[1],\r\n        map(lambda x: \": \".join( map(lambda y: str(y) , x) ) ),\r\n        lambda x: \"\\n\".join(x),\r\n    )\r\n    \r\n    save_txt(file_path, str)\r\n    OUT = \"txt 파일 저장됨\"\r\nelse:\r\n    OUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5a6f3eb1432340b9b34554dd87237466",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9388c6de8b454186855abcc34a65ad6c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78dae41a003443bab23cdf19748581fe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e17634b380a445b988440564ebfa5581",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "66a3070877154daea15aab9c7bb4d28a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "8f99a9409d0e4c0db3361738b5fecca0",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "746d6ad07b0940c19a50678f504a57f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "dee9e3f1fffb4ed783f40a36185ac50a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "84da32f2daa141889f99a63655f690c5",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34fe8673a25e4fd1845d792dd8d1c79c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# 필요한 모듈 불러오기\r\nimport clr\r\nimport datetime  # For timestamp\r\n# Revit Services와 DocumentManager 추가 (Revit API 접근)\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# 현재 열려있는 Revit 문서 가져오기\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n# Generate current timestamp (format: YYYYMMDD_HHMMSS)\r\ntimestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n# 파일 경로 가져오기\r\nfolder_path = \"\\\\\".join( doc.PathName.split(\"\\\\\")[:-1] )\r\nmodeling_name = doc.PathName.split(\"\\\\\")[-1].split(\".rvt\")[0]\r\nfile_path = folder_path + \"\\\\\" + modeling_name + f\"_토공산출결과_{timestamp}.txt\"\r\n\r\n# 경로 출력\r\nOUT = file_path\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "662cfdb5eef54bf7ac8597f6e1f7563d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c1235bbccbd84c549aa59777bb06939e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac37da6ae3444957bcba04c0216e44d3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "e0e54e3fd8ff4606ada50c31c1af17d8",
      "End": "1186cb42b4834da892396a64d7af190a",
      "Id": "40799a75b2e74a07bd95dff1c30c24e9",
      "IsHidden": "False"
    },
    {
      "Start": "e0e54e3fd8ff4606ada50c31c1af17d8",
      "End": "12db67f00e784857aded00125797de24",
      "Id": "1a916016b5f241df87cd29a1d18e135d",
      "IsHidden": "False"
    },
    {
      "Start": "2715083b45ed4f58af2eaad981a33897",
      "End": "09b3afab404d40b9a6458d9cdec5d090",
      "Id": "8747a31b487841bdabf9ad444002c7e8",
      "IsHidden": "False"
    },
    {
      "Start": "2715083b45ed4f58af2eaad981a33897",
      "End": "44ea388a7f674212a4473bd8a2de7eb2",
      "Id": "68cb7233fa6a41e69706d6fe695be331",
      "IsHidden": "False"
    },
    {
      "Start": "2715083b45ed4f58af2eaad981a33897",
      "End": "2897d9110ec34e129d789c3b7475b1be",
      "Id": "42d71f35c56a4353a9e02c5927e357aa",
      "IsHidden": "False"
    },
    {
      "Start": "448932de8be943e9b1e309fc8e067d99",
      "End": "31270f6e0b034196b02ef6313ea86dfd",
      "Id": "680d08a101d94f74b1a675474b73b3d1",
      "IsHidden": "False"
    },
    {
      "Start": "448932de8be943e9b1e309fc8e067d99",
      "End": "385bebc0885a4263b3a761a50641f7e0",
      "Id": "95c1c8830a634063a237eab9b744fd11",
      "IsHidden": "False"
    },
    {
      "Start": "448932de8be943e9b1e309fc8e067d99",
      "End": "8ed9e15c86dc4c0b9073de2f41cf1065",
      "Id": "425e4f2b2eeb47f2a5619b06d8f05495",
      "IsHidden": "False"
    },
    {
      "Start": "e6fa566905a049a1add2c70e17432a87",
      "End": "a34e9f10b2bc481a926292d0061531de",
      "Id": "e50d5b3325c343cb9f7cc8d22c5fb135",
      "IsHidden": "False"
    },
    {
      "Start": "cd15b0ac83e04be7aa75031a9bf4daf1",
      "End": "d8e80b2eef7846ef9fc7fa123e40e3a0",
      "Id": "a05f2b9adfb14c60b49ad9d8263ae078",
      "IsHidden": "False"
    },
    {
      "Start": "4b8c0a5728634607a57019136c306b91",
      "End": "a60e762b4a074b659e687d4d1e516da1",
      "Id": "aad4ae99c4bc4e5899cad5fa07d601b2",
      "IsHidden": "False"
    },
    {
      "Start": "f05424c070294cbca49dda114c05adb6",
      "End": "a790eb19d69346e8b56360df832d0204",
      "Id": "74ed5cdea0024a6886c630039ec33347",
      "IsHidden": "False"
    },
    {
      "Start": "dca90ec33fe04d76acc96c750acea32b",
      "End": "a98b44c39926443ca6e4ebd278cb8dc5",
      "Id": "5166c453ddc74f4395a27f7ae9ad3784",
      "IsHidden": "False"
    },
    {
      "Start": "dca90ec33fe04d76acc96c750acea32b",
      "End": "cb8149952ae847a7bd2fc2ee01e36dea",
      "Id": "568c6b261dfd4f9e8f07ce2ddac683ce",
      "IsHidden": "False"
    },
    {
      "Start": "16425a1079ef4e508777b3f362bfc45c",
      "End": "2e6a573560f74b01a9d7793966dc63bd",
      "Id": "9154236c627b444482fbb133ffa48ae5",
      "IsHidden": "False"
    },
    {
      "Start": "742b72aa21234b019b2b5bc200b03c86",
      "End": "a35c3c9f980b43c8855d626ea95e9af6",
      "Id": "e98613f32a5641e5a1a2f4aebba19a13",
      "IsHidden": "False"
    },
    {
      "Start": "6037781503fb4cc0a655bcdda044e481",
      "End": "34a3d111e33245a0ac0c75f54ce19fd4",
      "Id": "a58a83bf14c84b14b8f6b663b3f5e8c0",
      "IsHidden": "False"
    },
    {
      "Start": "147d5333460e47acb5c61aefba6da013",
      "End": "925be649b07949999d0d400591105eb4",
      "Id": "8f880ce64d3d4ece805ab4bb96b53d61",
      "IsHidden": "False"
    },
    {
      "Start": "8cb81582893f48cda8dd3bbbf5b8520d",
      "End": "4c73d59ea5af4fe2ac05a32c1ec1807a",
      "Id": "97d688f5bb314ea88454155f66b26f13",
      "IsHidden": "False"
    },
    {
      "Start": "b8bec34c01d54113a0d245322974061c",
      "End": "1d9c48bf80fc46419502005cda990f86",
      "Id": "1f2a3da2890147c599b8277c77a8f697",
      "IsHidden": "False"
    },
    {
      "Start": "b7c0f03a172342f8a7231d2fcfe207ea",
      "End": "f661514cc0754a53805af48a513bf572",
      "Id": "1b5be9e33e9a4fba8c3c52e371560b7b",
      "IsHidden": "False"
    },
    {
      "Start": "25dad0161dd54658ab05cb76268b3304",
      "End": "3887574f51d346b986aef0d3f36e8a84",
      "Id": "75640402f85e46db9446c64a8b3fa29e",
      "IsHidden": "False"
    },
    {
      "Start": "c0a3b2e440854d49afe1e1511d6a22e3",
      "End": "3588a078a1fe41618d080e0899cd9c03",
      "Id": "fb4ee5ad3da04287a16136d9f9bc1b5e",
      "IsHidden": "False"
    },
    {
      "Start": "7d5fcff616f14abc9464a8f3e1209b79",
      "End": "3009e9c9b4d947ee8b8aa758a6890b06",
      "Id": "8eff90778b0b4bb7a44a4bf51cb0c5df",
      "IsHidden": "False"
    },
    {
      "Start": "4224b02d3b74455e85cb66cb8b574bb0",
      "End": "73e1a81ee83a479680dc7462523514a5",
      "Id": "24c3157e782243759e80644d59a5426a",
      "IsHidden": "False"
    },
    {
      "Start": "fdbf88cfaa9c43f5ae8126b7e856abc9",
      "End": "69a86eb44223415fadb64f75354c366f",
      "Id": "e8c0a97bb8e5474980a8cca4bda3dfa1",
      "IsHidden": "False"
    },
    {
      "Start": "d3130d632dc34de499e1c47435434b95",
      "End": "542dfabf165f45d9809263c96dc1820e",
      "Id": "24f0999019eb493c8f38574a0b4f5dce",
      "IsHidden": "False"
    },
    {
      "Start": "39335c51b4c2436dae2df0ad60073f03",
      "End": "ff804761a0bd49bbb4b5a313758837a4",
      "Id": "421a9a967c134ac5b4ddf4b9b0977f3a",
      "IsHidden": "False"
    },
    {
      "Start": "643604a41db34868a641ff9362523dc3",
      "End": "1bbc7f1a6022444585c1c396cb569849",
      "Id": "7b71d9bb6372449bbd3dc05fa22be0f5",
      "IsHidden": "False"
    },
    {
      "Start": "8bc58ea7d7fb474d9d84dede6c494d58",
      "End": "8216ef83e81e49a8a909404b87007147",
      "Id": "904aa4295861442a9315231d0e9cdfbf",
      "IsHidden": "False"
    },
    {
      "Start": "8bc58ea7d7fb474d9d84dede6c494d58",
      "End": "892c0f7f18834d3992030ee82d6cf1fd",
      "Id": "4d59131f8ba94510a01e14d3f028983d",
      "IsHidden": "False"
    },
    {
      "Start": "8bc58ea7d7fb474d9d84dede6c494d58",
      "End": "5f1df1d013bc40f68b6f8fe50e8d6b7f",
      "Id": "8bfff3108f1349b7b5b2c503ba5e938d",
      "IsHidden": "False"
    },
    {
      "Start": "0b7d469902b04bc6ab13094379f25c8a",
      "End": "13f120225f4641b2b215fbc82f830f19",
      "Id": "1aef36cc72c04cec94802e041baa0f37",
      "IsHidden": "False"
    },
    {
      "Start": "a2626829eff141e48b35ebd5f2acbeed",
      "End": "4f860622e0dc41888babb709153e2b48",
      "Id": "3860ee3b56c54ff79ae8358bc09b4a71",
      "IsHidden": "False"
    },
    {
      "Start": "26e7e62fcdfd49c2bbcaa1c9a51b15e0",
      "End": "2cad1ee3cc1546758c17913caf6cbed1",
      "Id": "d261c4aad357468d8934298a4e21d38c",
      "IsHidden": "False"
    },
    {
      "Start": "84ddb0023b3444659d75c25e4c2cfe32",
      "End": "3188393434e640219508c506fcfa6f85",
      "Id": "2642b8327022406b85eb95f71942532d",
      "IsHidden": "False"
    },
    {
      "Start": "84ddb0023b3444659d75c25e4c2cfe32",
      "End": "a7fd4781dda24150a65b4e705fd43bd7",
      "Id": "a76235b64a6c43cbbdb70cc03c5be7d2",
      "IsHidden": "False"
    },
    {
      "Start": "288f267d10ae4d1a86fc563a6abfe136",
      "End": "b158f73d62ab4613bb41bb35ff070183",
      "Id": "348478995a1a47fb8f673a7db3d28c78",
      "IsHidden": "False"
    },
    {
      "Start": "1b2812c24da34c83abdbcc2e9ab6cee6",
      "End": "b211cb3d4d5346c7a5fb30c6b33b4022",
      "Id": "35bd1b6ff50f4359ae60cc8aabd0b86b",
      "IsHidden": "False"
    },
    {
      "Start": "76e75a56f1b143c79f690643b0e10f7a",
      "End": "166330ad47004504ba1474b3b2ec2882",
      "Id": "5e142911af254aa58fd1f1c882871469",
      "IsHidden": "False"
    },
    {
      "Start": "76e75a56f1b143c79f690643b0e10f7a",
      "End": "cf0e958757034872a0514b9e31f5a039",
      "Id": "6b869c23814f4169b5c4868d1caf7305",
      "IsHidden": "False"
    },
    {
      "Start": "76e75a56f1b143c79f690643b0e10f7a",
      "End": "91a1506189414dbbade6b246ba1fab0f",
      "Id": "4d165e1f28c0405c9260951ba4ffd045",
      "IsHidden": "False"
    },
    {
      "Start": "d5e3044d94814a88a9c8c75c084896dc",
      "End": "e4cbc6f34bed46bc8dddb9c953bd3581",
      "Id": "55309fc71aa84bec8a3c4fdefd866e48",
      "IsHidden": "False"
    },
    {
      "Start": "cf7bbcafe1af4e43a582c9febe85fc55",
      "End": "a7a409948800411b9dfb6cdeb0231ac8",
      "Id": "d640ee56876f4a94b599479290e6cfae",
      "IsHidden": "False"
    },
    {
      "Start": "bff64d882147417291808d49d7b59838",
      "End": "b6f00a42b0884cc48cf76371fcb79357",
      "Id": "e2f5f54aa2e847c3916fa29569440d3d",
      "IsHidden": "False"
    },
    {
      "Start": "72424ea9b4a2464389809d7e67baf4d9",
      "End": "08a9bc901bae46a5891fa7786e95454e",
      "Id": "24e408b826da40d383cce076ed51f29e",
      "IsHidden": "False"
    },
    {
      "Start": "501c6ff30b874d74b7a5e2f47b346db7",
      "End": "d79bc73cff36494abbdb199b9465e63c",
      "Id": "2730d84a42f2415b90629657ee00f172",
      "IsHidden": "False"
    },
    {
      "Start": "3e6e0c6647d04514893d4d04301d452a",
      "End": "41fe519e39204368a3e17c03adc8a7dd",
      "Id": "e463bf5b4f024c729edeff6ddac44b70",
      "IsHidden": "False"
    },
    {
      "Start": "c2784434345e44e09111f0d7cc2219cc",
      "End": "96cd0a054aea4c3fbb493e3cf8d54eff",
      "Id": "61e8750359b646109ffebd7ba9c5ca7f",
      "IsHidden": "False"
    },
    {
      "Start": "f890ed3563fe475ea45d90e52e855747",
      "End": "38ef5c7bbac24ad083c621fc9d6f5c0c",
      "Id": "327383ab2bc342439393f4952f8ed7ca",
      "IsHidden": "False"
    },
    {
      "Start": "f890ed3563fe475ea45d90e52e855747",
      "End": "c8a1a29f1b554a62845e8411e6349c3f",
      "Id": "70b27e9d898d4c9da48c2b51f3baf79f",
      "IsHidden": "False"
    },
    {
      "Start": "a2f332671cdf4ad981254e42b522c6d6",
      "End": "42dc965221104d70a907735a6c396959",
      "Id": "2785601789b04796b4c84e5663a63ba3",
      "IsHidden": "False"
    },
    {
      "Start": "a2f332671cdf4ad981254e42b522c6d6",
      "End": "4ce404de17244dd7aabf3ee20e320cae",
      "Id": "fb33ddcc944c4de2a3bbe8cf24a6f914",
      "IsHidden": "False"
    },
    {
      "Start": "d8927ab6f212448eb1470a60bc13e855",
      "End": "5a8cd445ddef414ca02cf5bdfe81947b",
      "Id": "f7c9e8b786ee4ca9a0d92c4d44c19cad",
      "IsHidden": "False"
    },
    {
      "Start": "d8927ab6f212448eb1470a60bc13e855",
      "End": "79f27a77a10c4dcaa2b2eb2ae4f01d32",
      "Id": "6b48ea4505c642c1b47be44eccded591",
      "IsHidden": "False"
    },
    {
      "Start": "637e0f88c9154186afec1060127199d8",
      "End": "09b28190b3cf4a198aada165e597f87c",
      "Id": "ea02aa96bbfb471f8334226d155d7746",
      "IsHidden": "False"
    },
    {
      "Start": "637e0f88c9154186afec1060127199d8",
      "End": "6058c2e237df4807bee04100b83520bc",
      "Id": "535130d60e4149bf88edfdf0e4414d6a",
      "IsHidden": "False"
    },
    {
      "Start": "2d236312c5cf46cebc8be34080d09b5c",
      "End": "b63721825be149fea36a318539265b92",
      "Id": "fabc5c96d9d04f3cb012958324ca8772",
      "IsHidden": "False"
    },
    {
      "Start": "f22c568bbe754f8a95346005244abe48",
      "End": "d25f05b8f1d54f88ac2fb694c8cd0f5a",
      "Id": "72408262689e42378eb8b3247bc0e91f",
      "IsHidden": "False"
    },
    {
      "Start": "14ef8b93f3524143a5d17197daf76141",
      "End": "3a4b1e63bcc4497a91ca0e48148eebab",
      "Id": "725252cdc1644b6ba3c8ac6851529012",
      "IsHidden": "False"
    },
    {
      "Start": "f2bc2627c68d4eb0bb4de390108ede51",
      "End": "8752db9aa49e4f1885d7dec6a128dbab",
      "Id": "ffa1b80c5adb490b932eb23949b07680",
      "IsHidden": "False"
    },
    {
      "Start": "f2bc2627c68d4eb0bb4de390108ede51",
      "End": "7fe243d7421a4066a8213dcc7e5251ae",
      "Id": "16d8961454404388bfd65bca19d30a27",
      "IsHidden": "False"
    },
    {
      "Start": "f2bc2627c68d4eb0bb4de390108ede51",
      "End": "5a0bb32714ab44ed88bdc599b423d134",
      "Id": "4283acc1f5e44d998e8487f686cc621a",
      "IsHidden": "False"
    },
    {
      "Start": "f2bc2627c68d4eb0bb4de390108ede51",
      "End": "8f99a9409d0e4c0db3361738b5fecca0",
      "Id": "4f27083efe8f4740b1bebcd4b4cbb1b2",
      "IsHidden": "False"
    },
    {
      "Start": "367e67d4746843c6b616311804d470e9",
      "End": "7a01a92c8635435b86bb90f7618cfe20",
      "Id": "8d6c9ae6f8cc4768a296371af4e546dc",
      "IsHidden": "False"
    },
    {
      "Start": "08fea8bb341d48938dffb61b7ee05624",
      "End": "4a1e98e0045444ec921bd179e062115a",
      "Id": "68560badcd9345d196c5fa84b8de48b5",
      "IsHidden": "False"
    },
    {
      "Start": "cbbd449aaf9f4703bb20ddb379a20891",
      "End": "d6d4b4d3230f43caae8e0428550a11b1",
      "Id": "95f73d91add84b8bab1917c9acd1134f",
      "IsHidden": "False"
    },
    {
      "Start": "14e37345de794730b95fee619d8fccee",
      "End": "0ac700dd1b2c4148ba362c9834b0eaa4",
      "Id": "c67b29a73aab4daeace3e51df0a113f1",
      "IsHidden": "False"
    },
    {
      "Start": "375f14f0d77440469e9107fd84b3f631",
      "End": "d830b8e9e27a43859a29012a7c98ec18",
      "Id": "acf00a3024be485ba8ddb654aaa630f1",
      "IsHidden": "False"
    },
    {
      "Start": "375f14f0d77440469e9107fd84b3f631",
      "End": "bfd2e75ee2fa4daaa140340bafa2d1d3",
      "Id": "f1e3bc034a944916826c84e43822fa3f",
      "IsHidden": "False"
    },
    {
      "Start": "375f14f0d77440469e9107fd84b3f631",
      "End": "8b833fa5273d49ea8e70d020a3d3e703",
      "Id": "026f8c3caa624aa1b18cfabffc759dde",
      "IsHidden": "False"
    },
    {
      "Start": "375f14f0d77440469e9107fd84b3f631",
      "End": "78dae41a003443bab23cdf19748581fe",
      "Id": "13e01aa7a5074dd092e09e862860d262",
      "IsHidden": "False"
    },
    {
      "Start": "dffa7dc0929842e886f617e2f43d7abc",
      "End": "15c7c607f5d64473881edacd594f3e40",
      "Id": "363377c428b54ba49b56aa087691a732",
      "IsHidden": "False"
    },
    {
      "Start": "dffa7dc0929842e886f617e2f43d7abc",
      "End": "4fceb310f3804d65969983e7bdc88d0c",
      "Id": "b1fa184150f9476aada5390decf8b944",
      "IsHidden": "False"
    },
    {
      "Start": "dffa7dc0929842e886f617e2f43d7abc",
      "End": "1c9265fe21df4eb983e67575f4bcfda7",
      "Id": "82c6cc3808f34a029bf159e5537568e6",
      "IsHidden": "False"
    },
    {
      "Start": "91ea0ce1b40e4bb8a59bf35a09d58635",
      "End": "be1254ceccca495d97e745a736036fe9",
      "Id": "108c5ad5085245d793800b3d9474e9a1",
      "IsHidden": "False"
    },
    {
      "Start": "91ea0ce1b40e4bb8a59bf35a09d58635",
      "End": "7a0066063335431db352b862df0cf977",
      "Id": "c688ea2fe6b04e9384a853d5b4e898dc",
      "IsHidden": "False"
    },
    {
      "Start": "a442ede6c8114575bcc7987f2cb7beb6",
      "End": "4dd2d89cbc164d718d8c7c7cf270a9a8",
      "Id": "bc0910f91007446b9765e7174e96a073",
      "IsHidden": "False"
    },
    {
      "Start": "a442ede6c8114575bcc7987f2cb7beb6",
      "End": "cb8fe5029b1441039012162d59803e11",
      "Id": "f51c83796a544e529d813f1e88b02b7a",
      "IsHidden": "False"
    },
    {
      "Start": "bd5d6c2394bb415991bf4aa1e3792666",
      "End": "9258fb475e9749fd9f6ac2512d2fb03e",
      "Id": "77a4677923d648218c6cca196b5a2ba1",
      "IsHidden": "False"
    },
    {
      "Start": "baf19ad2cdc347e0b066677a7b598d0f",
      "End": "78cb9bef05f9403caf256922fac990a9",
      "Id": "328098752c9f488bba67d4439dc4620f",
      "IsHidden": "False"
    },
    {
      "Start": "59e0ac1fcffb4225aa66dc46756eee5a",
      "End": "c68c2f5a2f0a4d71850536f8b1258df9",
      "Id": "68b10faefe4a400498df7372a4480aa9",
      "IsHidden": "False"
    },
    {
      "Start": "fcc22016be8b4d01994a6675c4319ddf",
      "End": "902e1bebdee94fbe99009e1174fac2cb",
      "Id": "fd7a8c91f9514395b731bc43f58d72d6",
      "IsHidden": "False"
    },
    {
      "Start": "68f3ffaee1e643b9b0f146c7d531313b",
      "End": "6d34ca6186854f7a9c83c723e9e34113",
      "Id": "4730e7c82793446382a519c3d05923ec",
      "IsHidden": "False"
    },
    {
      "Start": "852fb5bef8af461fba493036669ce854",
      "End": "2bf7a640b8f344399fc8d5a1412004f8",
      "Id": "4af390c693784de7b937e20f3e0f56bd",
      "IsHidden": "False"
    },
    {
      "Start": "3bc824f3192f4a15937d6e0deb477848",
      "End": "67b3c75d540c475dae3744eec37313e3",
      "Id": "3b7c29b8eb9f45c8b15571e4189bed8c",
      "IsHidden": "False"
    },
    {
      "Start": "3ace3fc47ee649f0a8b08e092253fe5c",
      "End": "84b577131335418abd5311428370f1e9",
      "Id": "cfa10bdb4aaf47b7a92e48b659359207",
      "IsHidden": "False"
    },
    {
      "Start": "9db57a96a4d8467caa40534532c4aba8",
      "End": "f8707e90a92e49c5918e641835088242",
      "Id": "eb7dc1aa843b40d2bfe06c387d4afbf1",
      "IsHidden": "False"
    },
    {
      "Start": "aff51406b2da410fbc8ffb5cb3def9b5",
      "End": "3ab68ea061b94e04a365e2d52e39b053",
      "Id": "2cbd473c3dcc4bb981226b26328226e6",
      "IsHidden": "False"
    },
    {
      "Start": "aff51406b2da410fbc8ffb5cb3def9b5",
      "End": "49122c24e43843859cf9b4a3512ee8f5",
      "Id": "ec6e6ce55c4a4700a2c8c020be8c6c3d",
      "IsHidden": "False"
    },
    {
      "Start": "aff51406b2da410fbc8ffb5cb3def9b5",
      "End": "38e9c6f83d0043eaa3db0612a9b13de8",
      "Id": "5cb9e437e64b4b6db7eb31656d820575",
      "IsHidden": "False"
    },
    {
      "Start": "682e7612859d4e81b2717bc04c94355b",
      "End": "b6000ab44eff4c98985a16b38344de0d",
      "Id": "cd76828e45344043976303b75c7834d9",
      "IsHidden": "False"
    },
    {
      "Start": "1cc83a26e5024ca5a1909d57040b1125",
      "End": "e05262c35131488ebef7a41a75f32b56",
      "Id": "c072ea703deb47ddbf20652489be4732",
      "IsHidden": "False"
    },
    {
      "Start": "1cc83a26e5024ca5a1909d57040b1125",
      "End": "d6e7537ca9224b0b9c3f2fb9ea77ac79",
      "Id": "4abfe3c16a9c462d9907d472fc82c2eb",
      "IsHidden": "False"
    },
    {
      "Start": "aa54c55a3d954c9e818824945dee68fc",
      "End": "4b63e699eca84f5fa362b9ca8930ee0b",
      "Id": "0f476db780c34150a1bcb7231f70fb85",
      "IsHidden": "False"
    },
    {
      "Start": "6220803c7c2a4d689a3a0d914b776ab2",
      "End": "a16bf56bccfe49488476ded50f84ca14",
      "Id": "818cd59bcc8d4439ae532774cfa8c0f9",
      "IsHidden": "False"
    },
    {
      "Start": "c5370e490a0740e38bd8f5c4ce3d64f3",
      "End": "10b1c638220f44e68ea8fd0d1ab823d9",
      "Id": "ed7c3575686f4cc086c6ad1c0446a18b",
      "IsHidden": "False"
    },
    {
      "Start": "d399dcae4eab49618c93841312b66ac5",
      "End": "0bdfd49a060a4cdbab703b522ef2f85e",
      "Id": "694aa1560de5408abf1327b8519ceb71",
      "IsHidden": "False"
    },
    {
      "Start": "54ba488712f24645a60b54a9be4c98e8",
      "End": "458f38a7beb84c1a802c17edf09c70a4",
      "Id": "f1cb86f722204d74b8685d2c61c090c9",
      "IsHidden": "False"
    },
    {
      "Start": "54ba488712f24645a60b54a9be4c98e8",
      "End": "bc7a5b326afc4a96bd8e503d083356bf",
      "Id": "7e763e00d6c64266baf38152a6318953",
      "IsHidden": "False"
    },
    {
      "Start": "580d984fb4cc42fdab3d77c73f971cad",
      "End": "8ccf3e005fd343dd93d67d041a9cc8a3",
      "Id": "04d794362b684229bc8e2c321f7ce825",
      "IsHidden": "False"
    },
    {
      "Start": "feac65772746403381a1787402fcd33c",
      "End": "24d4567102e5411a8f0da30362461dd4",
      "Id": "4176799058854909a69eaf6393b04f86",
      "IsHidden": "False"
    },
    {
      "Start": "8db6d6ab40a045b299ea9ff991ecd515",
      "End": "e111778ebd134609a63b16a306e0dc31",
      "Id": "c121a597e51943cab48f754d93df4cfe",
      "IsHidden": "False"
    },
    {
      "Start": "c4c87768c82e4fbd92a5d5a95fc7d56a",
      "End": "27d12b9ab83d4d3292bfd75a76c4cdb5",
      "Id": "92c28cb12fe0436790bab3544656de55",
      "IsHidden": "False"
    },
    {
      "Start": "38fb01da8048485a8bbb8441a726e76c",
      "End": "790f6425e79e4fbd84a250d227f93d0c",
      "Id": "bb5d04261ffa464e9ca1442f3b7f8a51",
      "IsHidden": "False"
    },
    {
      "Start": "c3eb70582b93441595b9056f15b8d232",
      "End": "9ce37801faeb43b2a7e8f96e69ddd186",
      "Id": "8bc04691460f466c99b45ce260c9fff9",
      "IsHidden": "False"
    },
    {
      "Start": "c3eb70582b93441595b9056f15b8d232",
      "End": "5cfe53ae222f473cbf1f3e5f32014768",
      "Id": "8fc9a517811b40c3b52c199a2f9a7cd3",
      "IsHidden": "False"
    },
    {
      "Start": "7ce66cc0b71c481f8ef36980e848cd11",
      "End": "15a142558c3442b39fa996070cd0e514",
      "Id": "ab2f662d29174edb8f3cc1e4f352b1f5",
      "IsHidden": "False"
    },
    {
      "Start": "7ce66cc0b71c481f8ef36980e848cd11",
      "End": "a2773c896df1442eac57766f6ab35d43",
      "Id": "2654bed859cc44199fe66ecbf720708a",
      "IsHidden": "False"
    },
    {
      "Start": "7ce66cc0b71c481f8ef36980e848cd11",
      "End": "c0987f1adabc4002a7c463f6ffe1ae48",
      "Id": "4cd0d2a42af54abda45c50d5c65d4d99",
      "IsHidden": "False"
    },
    {
      "Start": "9a28ca3a7fcf4091b9db0d4f22965ed4",
      "End": "ac1c31c4b307486d9c803b5afad8fc2c",
      "Id": "11c7e4de4dcf41078d71c445949e1509",
      "IsHidden": "False"
    },
    {
      "Start": "9a28ca3a7fcf4091b9db0d4f22965ed4",
      "End": "ff64ae79ffca437fbfc800ada6621682",
      "Id": "e1efe122aa17480797db3fbce4d37669",
      "IsHidden": "False"
    },
    {
      "Start": "25120007f27c4f98aa74766b02060bdb",
      "End": "e8295f77f28f4fa88877c5cae82f6403",
      "Id": "93afae3b18b2409d91bd2472d261339d",
      "IsHidden": "False"
    },
    {
      "Start": "72f51d44097f4532ad73903e1aafff0b",
      "End": "65c06bc725504f4d8f7e8134fad83f43",
      "Id": "10d26f4881e742f68dbf5481e69eaf4c",
      "IsHidden": "False"
    },
    {
      "Start": "abea125e7b4845f4a0fa23383f357aa8",
      "End": "15c77f089a484cd18f9b73fcf825fd04",
      "Id": "1fd991df03e445c79cb9271276308165",
      "IsHidden": "False"
    },
    {
      "Start": "57304db59d9e4160ad4584263632a267",
      "End": "7ad30687e3344e7c9400ce3d8d3c5526",
      "Id": "758c12dc01a14856b74c641edd7d6069",
      "IsHidden": "False"
    },
    {
      "Start": "401d62507f66462b9d485be8cca7a40a",
      "End": "c3981641c76f4a8488763e17b26ca9f9",
      "Id": "4347a7d8b6614688a31eb9df2b7e0c3c",
      "IsHidden": "False"
    },
    {
      "Start": "de78652fbe874743aeb4fe6eb2e59dc7",
      "End": "fd72b048648543f2a7143cdc9657b668",
      "Id": "2bcd56dd2aa84cd3b498f088a0bf456a",
      "IsHidden": "False"
    },
    {
      "Start": "8eaf4a1cd0f74005bab382dc798cd7c1",
      "End": "4d08b6568e56491a964d8e1a91d6fe30",
      "Id": "99dfc831a71d4a2c9ce19d4ea7f28172",
      "IsHidden": "False"
    },
    {
      "Start": "134ff1d0f8674cacbe5b5dfc5b0ef31e",
      "End": "b9b31c8b592e469ea5ec26e50940205b",
      "Id": "97f83eb42128470495e31ed8fb8c9b7f",
      "IsHidden": "False"
    },
    {
      "Start": "c678f033bdd14bb4a2c79b876cc60a98",
      "End": "78dc041da93e45ab98fc034007b77ad5",
      "Id": "21340255f1274d1aba7a586bb2903be4",
      "IsHidden": "False"
    },
    {
      "Start": "6e6fe3138ad446508face6c8bebe751a",
      "End": "928fcf229e7140138d5fccecbffa124e",
      "Id": "30575f51360d4916a987e1b1b4ded920",
      "IsHidden": "False"
    },
    {
      "Start": "f32b0383eaaf43e0a2bc0ce590fc0d35",
      "End": "80d636306d2e4c5091c05c1f12ebaa23",
      "Id": "3af07b049919486b97f235eb23cfc5bb",
      "IsHidden": "False"
    },
    {
      "Start": "252998de1fba491cb1e049b9c96c654c",
      "End": "2429433c274f462d8f36aaa9c13a1d89",
      "Id": "f435a05ed90b4790b281b972cdab4e32",
      "IsHidden": "False"
    },
    {
      "Start": "d0f348c1d00e43c4886e3c197c3717de",
      "End": "b92475859e2045e98c2cd661ca077fa3",
      "Id": "9182fc8d89ab4936b73326b7d4870841",
      "IsHidden": "False"
    },
    {
      "Start": "22293d3398c74f62bb3b1c3bc3260b8c",
      "End": "a5bc258e9a77495d8c13ccb7bd909868",
      "Id": "54861951e9cc400894992d9a1403473c",
      "IsHidden": "False"
    },
    {
      "Start": "22293d3398c74f62bb3b1c3bc3260b8c",
      "End": "5753e65f32e54e05b4052814ed51ac7a",
      "Id": "9ea9005ca1fd4ff58309243f82729dc9",
      "IsHidden": "False"
    },
    {
      "Start": "5bef6a2640ca4967b8f083d2c681e64e",
      "End": "be5fa1a81bf1482e9c5580f02eea8798",
      "Id": "caff32c8171e4529897eb31ba65e3467",
      "IsHidden": "False"
    },
    {
      "Start": "d662a723d9404d378898b78e63d55751",
      "End": "69a4264a96a54d3088c1e457abb414ac",
      "Id": "ded0d3a34d824361b6f3e5af05d0eb64",
      "IsHidden": "False"
    },
    {
      "Start": "baeed2ed969c4d8a8c1c2a54201318fa",
      "End": "46b8228789ea43be98de7c280497a878",
      "Id": "602f94cbcefa4fdfab69ab1b0633298b",
      "IsHidden": "False"
    },
    {
      "Start": "2e5e9bc471944d418a5e17e471b66d31",
      "End": "c8da18f4af7d486ca8fc51460f66e699",
      "Id": "531593f8671f4dbba3716a49e160c299",
      "IsHidden": "False"
    },
    {
      "Start": "ede6451a14994e0d8cf111a5753e6bc6",
      "End": "dcd5f0cfb548436abe2f69055505134d",
      "Id": "a6271e15adf34593866b1900f62040e1",
      "IsHidden": "False"
    },
    {
      "Start": "491f9e18872a491d902457f24474a9a8",
      "End": "f674a593c1a64b8d80b64ca54584bd25",
      "Id": "9c7862edb5c54823bcaa599f57a1f078",
      "IsHidden": "False"
    },
    {
      "Start": "b28a5cfc597047b79f95b87604a0af70",
      "End": "5edc83bed9f44e1fb33333a8cf8217bc",
      "Id": "f57fe0e4633f48c3a30528ac1fb115c8",
      "IsHidden": "False"
    },
    {
      "Start": "b28a5cfc597047b79f95b87604a0af70",
      "End": "d9c314bc1f7b482f880d578bdaa835d0",
      "Id": "a0434ff7453941c49341ce3c4a90673d",
      "IsHidden": "False"
    },
    {
      "Start": "b28a5cfc597047b79f95b87604a0af70",
      "End": "245351042b9e46d889524838e77b0518",
      "Id": "b1817dc0eb3e468d8b6b7a4166bb2481",
      "IsHidden": "False"
    },
    {
      "Start": "3c179c302748451bac70573c601558fd",
      "End": "c93ccd1c85ee41698a47161cf7d94ecf",
      "Id": "30935fef95dc4111bdbb843f50770f29",
      "IsHidden": "False"
    },
    {
      "Start": "17c5092c60424a969bfb5d5d8df9f0a6",
      "End": "ae8fcdf26202435b8503e2404f8fade8",
      "Id": "90fe2f70635c4b54b4549b439f41f3b9",
      "IsHidden": "False"
    },
    {
      "Start": "746d6ad07b0940c19a50678f504a57f0",
      "End": "84da32f2daa141889f99a63655f690c5",
      "Id": "eb26ddfdadde4dfa8870dcaaad48d072",
      "IsHidden": "False"
    },
    {
      "Start": "34fe8673a25e4fd1845d792dd8d1c79c",
      "End": "9388c6de8b454186855abcc34a65ad6c",
      "Id": "a60efba5984c4661b103a1e1592f2a08",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "/9j/4AAQSkZJRgABAQEBSgFKAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAO5A2kDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoorJ8SeK9H8H6a9/rWo2+m2i/wDLS4cLuPoo6sfYZNAGtRXzv4w/bQ8NaTJJD4f0y6151xtnkP2aE9ckbgX444KjNeOa9+158QdY3La3FjoyHIxZ2oY4OO8hfnjqMdT7YAPuuivzkvvjr8QNRkZ5fF2qIWXafInMI/AJgA+4rP8A+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4unxfF7xzDIHXxjrxI/valMw/ItigD9KKK/PnSf2mPiRpEmV8RyXSbtzR3cEUoPtkrkD6EV6P4X/ba1i1KR+INAtL+MDBmsXaB+g+Yq24E9em0c9scgH1/RXm3gb9oXwP4+YxWerLYXm3d9k1ICCQjGTgk7WI5yFYngnpzXpNABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFNd1jVmZgqqMlmOAB60k0yW8LyyuscSKWZ3OFUDkknsK+Kv2hf2kJ/Hk1z4e8OStb+G1bbLcDKyXpH8o/QdTjJ9AAelfGH9rey8NzXGkeEI4dV1BMpJqMmTbwsCQQo48wjHXO3kfe5FfJviTxXrHjDUnv9a1G41K7b/lpcOW2j0UdFHsMCsmigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvYPhZ+014p+HjwWV3N/behh8vbXXMqKWyxjk659myPYZzXj9FAH6V/Dv4naB8T9GXUNEut+OJbWbCzwH0dATj6gkHsa6uvzB8JeLdU8D69a6xo901pfW7ZVhyGHdWHdT3Ffe3wW+Nml/F7RWaMLY63bL/penlsle3mIf4kP6Hg9iQD0iiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiivMf2hPicPhn8Pbua3kaPWL9WtbAqD8rkfNJnoCqksM9SB70AeH/tXfHB9U1CXwZoV4y2NszR6pJHx5soODDn+6uOfU8dq+Z6fNM9xK8srtJI7FmdzksTyST3NMoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK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YUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABX5+/tRKsfx18ThVCjNscAY5NtESfzr9Aq/P/APak/wCS7eJv+3X/ANJYqAPKaKKKACiiigArq/hN/wAlU8G/9hqy/wDR6VyldX8Jv+SqeDf+w1Zf+j0oA/SuiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA+f/wBtb/klelf9hqL/ANET18U19rftrf8AJK9K/wCw1F/6Inr4poAKKKKACiiigAooooA/QD9lv/khPhn/ALev/SqWvVq8p/Zb/wCSE+Gf+3r/ANKpa9WoA/EH/gpV/wAnmeO/+uen/wDpBb18xV9O/wDBSr/k8zx3/wBc9P8A/SC3r5ir/SfhH/kncv8A+vNL/wBIifHYj+NP1YUUUV9YYH9K1r/x6w/7i/yqWorX/j1h/wBxf5VLX+Vst2fcBRRRSAKKKKAPhD/gsB/yQPwj/wBjNH/6S3FfknX62f8ABYD/AJIH4R/7GaP/ANJbivyTr+7PCP8A5Jal/jn+Z8xj/wCOwooor9nPOP2B/wCCR3/Jsutf9jRdf+k1rX21XxL/AMEjv+TZda/7Gi6/9JrWvtqv86ePf+Snx/8AjZ9dhf4MfQKKKK+COoKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAr8//wBqT/ku3ib/ALdf/SWKv0Ar8/8A9qT/AJLt4m/7df8A0lioA8pooooAKKKKACur+E3/ACVTwb/2GrL/ANHpXKV1fwm/5Kp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD5//AG1v+SV6V/2Gov8A0RPXxTX2t+2t/wAkr0r/ALDUX/oievimgAooooAKKKKACiiigD9AP2W/+SE+Gf8At6/9Kpa9Wryn9lv/AJIT4Z/7ev8A0qlr1agD8Qf+ClX/ACeZ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5Lt4m/7df/SWKgDymur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKAPzU+LP/JVPGX/Yavf/AEe9cpXV/Fn/AJKp4y/7DV7/AOj3rlKAPVv2W/8Aku3hn/t6/wDSWWv0Ar8//wBlv/ku3hn/ALev/SWWv0AoAKKKKACiiigAooooAKKKKACvypr9Vq/KmgAooooAKKKKACiiigD7W/Yp/wCSV6r/ANhqX/0RBX0BXz/+xT/ySvVf+w1L/wCiIK+gKACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/wDbevlSvqv9uj/mSf8At+/9t6+VKACiiigAooooAK6v4Tf8lU8G/wDYasv/AEelcpXV/Cb/AJKp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD5//bW/5JXpX/Yai/8ARE9fFNfa37a3/JK9K/7DUX/oievimgAooooAKKKKACiiigD9AP2W/wDkhPhn/t6/9Kpa9Wryn9lv/khPhn/t6/8ASqWvVqACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/8AbevlSvqv9uj/AJkn/t+/9t6+VKACv1Wr8qa/VagAooooAKKKKACiiigAooooAK/P/wDak/5Lt4m/7df/AElir9AK/P8A/ak/5Lt4m/7df/SWKgDymur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKAPzU+LP/JVPGX/Yavf/AEe9cpXV/Fn/AJKp4y/7DV7/AOj3rlKAPVv2W/8Aku3hn/t6/wDSWWv0Ar8//wBlv/ku3hn/ALev/SWWv0AoAKKKKACiiigAooooAKKKKACvypr9Vq/KmgAooooAKKKKACiiigD7W/Yp/wCSV6r/ANhqX/0RBX0BXz/+xT/ySvVf+w1L/wCiIK+gKACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/wDbevlSvqv9uj/mSf8At+/9t6+VKACiiigAooooAK6v4Tf8lU8G/wDYasv/AEelcpXV/Cb/AJKp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiii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9oo/4bo/6kn/AMq3/wBor5UooA+q/wDhuj/qSf8Ayrf/AGij/huj/qSf/Kt/9or5UooA+q/+G6P+pJ/8q3/2iqWr/txahcWciaZ4Ut7K6ZSFmub0zqp9doRM9+9fMNFAGt4o8Uan401261jWLprzULlsySMAOgwAAOAAAAAKyaKKACiiigAooooAK6v4Tf8AJVPBv/Yasv8A0elcpXV/Cb/kqng3/sNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAPn/8AbW/5JXpX/Yai/wDRE9fFNfa37a3/ACSvSv8AsNRf+iJ6+KaACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAPn/wDbW/5JXpX/AGGov/RE9fFNfa37a3/JK9K/7DUX/oievimgAooooAKKKKACiiigD2f4F/s43Xxbs5dXvdQOlaJDMYQ0ce6adhgsFzgAAH73PPGDzj2//hinwP8A9BXxB/4EQf8Axmup/ZZVV+BXhohQCxuiSB1P2mUZP4AflXq9AHz/AP8ADFPgf/oK+IP/AAIg/wDjNH/DFPgf/oK+IP8AwIg/+M19AUUAfP8A/wAMU+B/+gr4g/8AAiD/AOM0f8MU+B/+gr4g/wDAiD/4zX0BRQB8/wD/AAxT4H/6CviD/wACIP8A4zR/wxT4H/6CviD/AMCIP/jNfQFFAHz/AP8ADFPgf/oK+IP/AAIg/wDjNR3H7E/g1oXEGsa7HLj5WklhdQfcCIZ/MV9CUUAfm/8AFz4W33wk8WNo15Ot5E8Sz212ibBNGSRnbk7SCGBGe3oQa4mvqr9uhVDeCm2jcRegtjkgeRgfqfzr5VoAK+nPhX+x5H4h0Cz1fxTq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2x2BQY5PnAAHGFJZeP7poA4CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvoL9i/w42pfEbUNWZSYdMsWAYDpLIwVQeP7ok7g8dxmvn2vuz9k3wO3hT4Ww39xAYb3WpPtjbjz5OMRcdgVyw6/f69gAe1UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABXgP7XXwxbxX4Pi8R2EO/UdFVmm29XtTy/8A3wRu+hevfqa6rIrKyhlYYKsMgj0oA/KuivWP2h/g2/wq8V+bZqz+H9RZpLNzz5R4LRMcdQTx6rjuDXk9ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU+GF7iVIokaSR2CqiDJYngADuaAOz+Dvw7n+KHj2w0WP5Lbm4u5SpIjhTG4nBB5JVRz1cV+jVnaxWNrDbQLsghRY41yThQMAZPsK8v/AGevg8nwq8IhrxI5Ne1DE13KE+aIEDEIPcLyT6kn2r1agAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDF8YeEdL8deHrvRdXtxcWVyuD03I3Z0PZgeQa+Avi98HNY+EeuG3vFNzpczH7HqKLhJl64I/hcDqp/DI5r9F6yPFXhPSvG2h3GkazZpe2E4+aNsggjoykcgjsRQB+YFFe6fGT9lvW/Astxqfh9Jdb0HdkRxK0l1brjJLqF5Uf3h+IFeF0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU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gyILeJYY9xydqgAZP0FWaKK+LbcndnSFFFFIAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/9k=",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "MK Jang",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "ac350ab2-3fca-4665-b347-d22badc79a9f",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_ac350ab2-3fca-4665-b347-d22badc79a9f": "H4sIAAAAAAAACh3Muw7CMAxA0X/xjKU83MR0ZunMSBjsJKBK0KHNgqr+O1XWK93z2KFIExhhT7D9ljyVBGOCarPmWj0KqUWKWVHVWszKHAMV0lITXBJ8pdV1lk//rGMajD/zva3z8p5uHRNPwZvAGLyLSCeALI6QqfDgdWAJisa4HJx9dXVaWn/d1XA0/oDj+Qf0838LqgAAAA=="
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 45219.44140625,
      "EyeY": 42125.4609375,
      "EyeZ": -26183.84765625,
      "LookX": -3275.57421875,
      "LookY": -56783.890625,
      "LookZ": 42906.1953125,
      "UpX": 0.3252749741077423,
      "UpY": 0.27529364824295044,
      "UpZ": 0.9046599864959717
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "2293b855337546edb1fce2a82a226d51",
        "Name": "Create HTML file and Open",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 276.06733435948354
      },
      {
        "Id": "128b292038734d0497a800ffdbb36664",
        "Name": "cssPart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": -281.4848569702817
      },
      {
        "Id": "ccd5e4648eca41bea187f1cd549b3006",
        "Name": "javascriptPart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": -68.89860697028143
      },
      {
        "Id": "e2e4af0fc18e4b908dcf2372c6b7c0ae",
        "Name": "htmlPath",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4497.719577670595,
        "Y": 340.06733435948354
      },
      {
        "Id": "fe86d2e04e3f446eb61d604b1722d6a7",
        "Name": "make_htmlStr__",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -4815.719577670595,
        "Y": 125.84587731101965
      },
      {
        "Id": "e97d441e14e44edc828a96c60739260d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4497.719577670595,
        "Y": 191.89483435948296
      },
      {
        "Id": "bb79dddfc2e9457e966f337a7c97306e",
        "Name": "navHTML_Part",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": 143.92889302971798
      },
      {
        "Id": "505cea545c5a4672ba1f9dca7b06fe98",
        "Name": "Create JS file",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 64.06733435948354
      },
      {
        "Id": "7911dd5152fb4afc9942fa71eb471e18",
        "Name": "start Webserver",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 488.06733435948354
      },
      {
        "Id": "eb3d472b821e4392b812a06bbd34d3ed",
        "Name": "make_htmlStr",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": -147.93266564051646
      },
      {
        "Id": "d1ff79fecf704ef6a5f9ec4bee7f2020",
        "Name": "serverFilePath",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4815.719577670595,
        "Y": 406.89483435948296
      },
      {
        "Id": "6295313e8a4a48bc83e02079e2a9eb8e",
        "Name": "0. Set Port Number: 기본값-8000 (작동 오류 없다면 변경 금지)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4585.42982759417,
        "Y": 554.5367573776175
      },
      {
        "Id": "fef5572a431c4fde8517afbe902a131f",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5097.719577670595,
        "Y": 404.89483435948296
      },
      {
        "Id": "4d510c5a94814cffa3d4ae58fe74664c",
        "Name": "Building Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5673.359447535112,
        "Y": -136.8868998383723
      },
      {
        "Id": "c1fcec73c860411f965c3205e13a53bf",
        "Name": "▶ [A.1] 토공참조선을 생성할 대상 선택. (드래그만 가능)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13513.793621880088,
        "Y": 3151.999585155972
      },
      {
        "Id": "ec0957085d604537b91f29637a0fd228",
        "Name": "▶ [A.2] 토공참조선 선택 대상들을 그룹으로 적용하시겠습니까? 개별로 적용하시겠습니까?",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13532.635206415653,
        "Y": 2875.005083855584
      },
      {
        "Id": "e2880396992841d2827e53d2f2cf8e31",
        "Name": "make_refLine_forExca_byMode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8449.76393872991,
        "Y": 2829.71483576816
      },
      {
        "Id": "3c9c05912bcd4f21a83d0ee995482a3f",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10468.483824296862,
        "Y": 3771.111393179709
      },
      {
        "Id": "1338a90484f541299269e48957d2252c",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10471.34643512151,
        "Y": 4253.314705556072
      },
      {
        "Id": "e573bcfdb1ab4a56a5dbdfdf7c4dadca",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10197.043981538105,
        "Y": 3598.6092462496295
      },
      {
        "Id": "2d582196cdbe4521890b952417aac578",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10185.403655372163,
        "Y": 4129.513869832135
      },
      {
        "Id": "dd324403c8d2426297eb22420423adb6",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9512.907494891648,
        "Y": 3710.915598107982
      },
      {
        "Id": "18aba5663c574ee286b695875f5baecf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9845.451678834506,
        "Y": 3594.7365636357067
      },
      {
        "Id": "b7785df8d1fd43a3aaaaefacc9d0bc7a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10165.483250782141,
        "Y": 3866.3762270006728
      },
      {
        "Id": "c82b101ace0a457682d6c2bd38843e2b",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9933.039359488635,
        "Y": 3717.7165629436354
      },
      {
        "Id": "461e3721ec6a4d26b879f546e0908112",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10107.671597246279,
        "Y": 4328.161995704882
      },
      {
        "Id": "b75e9b72598045128e4cd6a9e5f8f46d",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9894.326600358118,
        "Y": 4172.3402462458525
      },
      {
        "Id": "3b24ad1bfd164309a72773ac7d209e74",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9488.144181922213,
        "Y": 4167.775444588385
      },
      {
        "Id": "27b0ea6c7a7b4831b2fdfeab014e9389",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10948.160275020022,
        "Y": 6730.508439020721
      },
      {
        "Id": "591889c6fe8a4647aeaab636623a76d8",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11246.487936723213,
        "Y": 6726.997770562536
      },
      {
        "Id": "25c88cea114d477b91fe86fb4c02be42",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10980.96245649044,
        "Y": 7276.226561013893
      },
      {
        "Id": "5be6e756780f4979a499b8cfe8041258",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10232.365561090211,
        "Y": 6927.470882587676
      },
      {
        "Id": "977fc4e68df849e4be62353155dd68b2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10468.465882681861,
        "Y": 7044.757358141875
      },
      {
        "Id": "4e4342225379411ca2567ee9826dbfa8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9427.822519567939,
        "Y": 6731.213966597892
      },
      {
        "Id": "e7eb00eb7e9d4727b84ad39bc3dc6667",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9733.151212796383,
        "Y": 6886.891197933087
      },
      {
        "Id": "9ff8ea3a3df243d0b2b7ccc57106e18d",
        "Name": "▶ [0.2] GL 레벨 선택",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12000.445198537773,
        "Y": 5365.30943820425
      },
      {
        "Id": "45694e26cbdf4c5390294ff64865ef54",
        "Name": "Level.Elevation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11707.14236578302,
        "Y": 5365.9419423195895
      },
      {
        "Id": "afcf64071a22497bb205b94bf7425c1c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10434.417894066615,
        "Y": 5024.021861682981
      },
      {
        "Id": "f5fe8f9c5ba642238307a16c7be10c4d",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10124.417894066615,
        "Y": 5081.19436168298
      },
      {
        "Id": "a179122c5d914896acba1cb4b503e4cf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10448.329643005482,
        "Y": 5189.727723968811
      },
      {
        "Id": "5331cdd1a45741d49f1fe50ac9ce929d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9881.551092362371,
        "Y": 5665.87659942073
      },
      {
        "Id": "4335018d9de645d7aceeb3c58948ee03",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9837.756037071129,
        "Y": 5409.67798594562
      },
      {
        "Id": "ac80177712a2432b8cd2438a52767d01",
        "Name": "Earth View 열기",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13024.871475416612,
        "Y": 2299.837801741372
      },
      {
        "Id": "9f716c2978a743279c7407a634a31b9b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -13520.57188928824,
        "Y": 2163.3167584957596
      },
      {
        "Id": "d898cc3c2bba495d939dd99fff568523",
        "Name": "▶ [A.3] 터파기 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12153.270610653079,
        "Y": 4080.9901383402084
      },
      {
        "Id": "d183314fc9f84d0585d3aa23617e7dd1",
        "Name": "공통정보 입력 파싱",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11633.623625044562,
        "Y": 4082.919549291415
      },
      {
        "Id": "b764e90b3fb148af9fc85367fdfd11ec",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11325.623625044562,
        "Y": 4082.919549291415
      },
      {
        "Id": "1c8ef8f989844fc0bd4b898667fb3ed6",
        "Name": "▶ [0.1] 실행모드 선택 - 확인 필수!",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13495.277221886046,
        "Y": 2580.5337050711087
      },
      {
        "Id": "c5ebc6f0b3ea414b83659c5adf64b856",
        "Name": "▶ [B.1] 토공 물량 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12148.071086036292,
        "Y": 4684.992948820192
      },
      {
        "Id": "36807ed35bb54ec788bd788e7498708f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11331.510285324786,
        "Y": 4687.512537675796
      },
      {
        "Id": "8f7bcda97ed74a4ea3b572a0190b69ab",
        "Name": "makeExca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -6239.082094316474,
        "Y": 6616.93392682926
      },
      {
        "Id": "40c0649d2aef40e4b6dfefab8827545c",
        "Name": "All ElementsExceptRails",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10575.097061226568,
        "Y": 8687.667408617777
      },
      {
        "Id": "e731a6054af14c22ad1abe966ad50a2a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9066.97705667309,
        "Y": 8701.89948278437
      },
      {
        "Id": "1a069ed848e7430a9deb3e3ef0f72b32",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8502.963096457635,
        "Y": 9579.852943314856
      },
      {
        "Id": "129d0975b42940088c8c76b1522e2f0f",
        "Name": "[1.A.3] 터파기 관련 공통정보 입력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -12879.718537128794,
        "Y": 4187.742738101778
      },
      {
        "Id": "ddf025c3e4d145e88d83e0f73080fecc",
        "Name": "[1.B.1] 토공 물량 관련 공통정보 입력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -12891.443568890509,
        "Y": 4774.800828513138
      },
      {
        "Id": "bd263cd2761044758867a928af0d553f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12747.358369850152,
        "Y": 6412.189432829049
      },
      {
        "Id": "18b7185c493b4b34abdced738675d953",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9792.575967893219,
        "Y": 6405.857693104204
      },
      {
        "Id": "16fb2fdc7ce44da48248c5441dd82123",
        "Name": "Element.GetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8946.492439303778,
        "Y": 6708.8937635348675
      },
      {
        "Id": "822b6bdf5810416bb58840cf8cd4bb66",
        "Name": "공통정보 입력 파싱",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11589.044291306614,
        "Y": 4689.226275544515
      },
      {
        "Id": "ead180525cc042dfa2504f3dd3c1e750",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9846.94726697892,
        "Y": 5164.01186004486
      },
      {
        "Id": "1df28b41a9b14c8c956f3328c8738007",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9340.211124617634,
        "Y": 5352.635015955819
      },
      {
        "Id": "e0c86f122847424dac5fc1edbe972adb",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9830.176232843838,
        "Y": 4783.989894241797
      },
      {
        "Id": "4b789ff8fed24d4db9fc70a07e87c2a9",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8815.958169371845,
        "Y": 6188.443218824135
      },
      {
        "Id": "9314854b56ca4ba29fe4cad964819dee",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": false,
        "X": -6670.367500024622,
        "Y": 8819.746808955648
      },
      {
        "Id": "79e76a2f25b24c0484d6ce85b28558a5",
        "Name": "Element.Id",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9548.990747881095,
        "Y": 7312.017932955507
      },
      {
        "Id": "4c4212003b724ed7bec9a4dc23b35735",
        "Name": "group_closed_curves_ : function",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7741.9551418415585,
        "Y": 7273.081392681394
      },
      {
        "Id": "ac350ab23fca4665b347d22badc79a9f",
        "Name": "DirectShape.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4883.76422699713,
        "Y": 7499.868382672988
      },
      {
        "Id": "e064875705f049dfb7460e6872dc217b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11125.001116612892,
        "Y": 8701.263833901743
      },
      {
        "Id": "3721a1e7f7b94282aa6f7e63632a2e20",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7610.074326981278,
        "Y": 8539.086961776766
      },
      {
        "Id": "b6d74907ef0143e09d18db672ff42d03",
        "Name": "Cuboid.ByLengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8173.508606019859,
        "Y": 8341.898608567531
      },
      {
        "Id": "3fb9ac7931864c8192108b5adda5d624",
        "Name": "List.IsEmpty",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7873.857341083859,
        "Y": 8747.572497582343
      },
      {
        "Id": "b4120c3680414d91bc2ceda3a7229c88",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5721.66868203126,
        "Y": 7516.455921977587
      },
      {
        "Id": "78a29380e41a416ba2369f6b6a68595b",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5390.317630564533,
        "Y": 7579.4007861628925
      },
      {
        "Id": "ebbab7fe769f4acbb4da07b9509c5cfe",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5444.507356273868,
        "Y": 7367.526305946268
      },
      {
        "Id": "2c5ed5e961944687b4173c852167f980",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5744.027912979469,
        "Y": 7179.385086132191
      },
      {
        "Id": "9bcf898e0bda443d8e1a87ae89619706",
        "Name": "::: 토공 항목 별 산출 결과 :::",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5751.020748262922,
        "Y": 6544.109369865491
      },
      {
        "Id": "04c9ae06ebe44a77b72aaf82de8bd48c",
        "Name": "⏸ [0.0]안내문 영역 // 입력 불필요 //",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13500.621784761242,
        "Y": 2292.7588113126435
      },
      {
        "Id": "3f35264bc1ed4779b0893083e1de2cc1",
        "Name": "getGeoms",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8565.014834942924,
        "Y": 8711.662247360397
      },
      {
        "Id": "a710f251caff4a27b25963549f28ec27",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7307.166151561797,
        "Y": 8852.560742016465
      },
      {
        "Id": "c7a8b14ae1764eaeafe8daba1072fde5",
        "Name": "time stamp",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5372.343864063609,
        "Y": 7807.269186133388
      },
      {
        "Id": "20e43fd35a704884a7d0df61a6c1db5e",
        "Name": "c3/c2 ratio",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10606.838436487173,
        "Y": 4448.667452516642
      },
      {
        "Id": "0c36d54a65a3421a80733db774a1d047",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8685.582568203257,
        "Y": 4436.105746800843
      },
      {
        "Id": "b8ece175ed67499aaf07d7ee3e89c68b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7068.128558294975,
        "Y": 5760.030588211503
      },
      {
        "Id": "8688612e9aa44ff4bea3805130ac5555",
        "Name": "C1,C2,C3,C4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10885.919395298763,
        "Y": 4648.78858750631
      },
      {
        "Id": "e7e4ecb7955c4b3c962b4fc2cad4fe95",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9146.351684042034,
        "Y": 4648.873502113337
      },
      {
        "Id": "24b95594fbaf40eaaeab996157a0a104",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7025.303562204581,
        "Y": 6155.7739798280345
      },
      {
        "Id": "e7a25190a3c6488d95373d871d0fb039",
        "Name": "Coordinates.BasePoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12002.486760042264,
        "Y": 5590.6795362995845
      },
      {
        "Id": "e33a4dd07d4447b2b96ef23b9bc57d19",
        "Name": "Coordinates.SurveyPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12007.27648488637,
        "Y": 5851.033391817156
      },
      {
        "Id": "3e80e620254f46ab9feaf6bb6e52e493",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10569.60593902663,
        "Y": 1686.6042448468106
      },
      {
        "Id": "b06296458370433d888569c6f3cc521c",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9853.81122509683,
        "Y": 1883.56668841377
      },
      {
        "Id": "0f7c27495826488ebe398d343fecec09",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10089.911546688529,
        "Y": 2000.8531639679604
      },
      {
        "Id": "426500c7e68f44a1ba06f44ffe8644e8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9049.26818357457,
        "Y": 1687.3097724239806
      },
      {
        "Id": "0eea658601884ecf84dd705e42645228",
        "Name": "Detail Line 속성값은 1, 아니면 0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9413.673392520152,
        "Y": 1841.8509169184656
      },
      {
        "Id": "26b4922c2a404062852f379baa03285b",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10867.93360072983,
        "Y": 1683.09357638863
      },
      {
        "Id": "4c963d58e13440e3b2808c27829ffa31",
        "Name": "토공객체 필터",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8490.119003233916,
        "Y": 2340.2463503505523
      },
      {
        "Id": "5242ccc05ade40b5b8e8b7d0c4ccbc34",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10556.46873919226,
        "Y": 2341.0871347815314
      },
      {
        "Id": "cb25696431ec49f7a20477e9c5500e52",
        "Name": "Element.Delete",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7873.247984132293,
        "Y": 2245.0571394554036
      },
      {
        "Id": "61992af6dc044afb83a47c2a33d65bca",
        "Name": "SolidByUnion 예외처리",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7143.615590148209,
        "Y": 8226.225686552336
      },
      {
        "Id": "bc690724c0094c43862f307071ab1a07",
        "Name": "filter lean Pile etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9375.124632790737,
        "Y": 8707.63827007629
      },
      {
        "Id": "9d46f01bec9444f3819d824a7289ee2f",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9827.245560644575,
        "Y": 9209.857312849535
      },
      {
        "Id": "835ec69080604241a56c0e94a75b3a87",
        "Name": "※ 형상 바운딩화 옵션 (B모드 에러시 True로 설정 요망)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13507.198696445323,
        "Y": 3816.868872141675
      },
      {
        "Id": "ae676c7a092d4e129b34920599b65931",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11352.738848917117,
        "Y": 5879.940519323268
      },
      {
        "Id": "046b4178564e46c598392155dad04ba1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7703.7418666513795,
        "Y": 8137.152081336486
      },
      {
        "Id": "1cc32b9bb53840949ee0966179e4c6ec",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7874.758107508347,
        "Y": 8473.749415407126
      },
      {
        "Id": "a65998c4edef44e1872a508de22c1335",
        "Name": "filter line etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12555.65650712638,
        "Y": 3149.9413527973957
      },
      {
        "Id": "6acbca1799b5454198b699a5b793cb8c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10523.920775345316,
        "Y": 7839.321331048944
      },
      {
        "Id": "2ec38bb9c798484c9d4f9ca4c3270562",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9566.426853941059,
        "Y": 8305.069009652278
      },
      {
        "Id": "23f4615566c643d082ed970950ead1bf",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9826.445316654761,
        "Y": 8510.830277346731
      },
      {
        "Id": "17f1749771634e99bed2571c399c4f59",
        "Name": "filter etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12171.111151864488,
        "Y": 2969.012029311866
      },
      {
        "Id": "bcf643a5a21647fdbcb47dc32bc43e23",
        "Name": "total_leanAndOthers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -5886.96038572497,
        "Y": 5908.610552246243
      },
      {
        "Id": "1b68956335aa492db8caae0904e092bf",
        "Name": "filter line etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9698.596925602262,
        "Y": 8778.604922817363
      },
      {
        "Id": "2144217f779c4d969388ed3434943498",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10011.504562924049,
        "Y": 8776.98108561711
      },
      {
        "Id": "1de69a865de84efea106629730693a19",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9408.268211210425,
        "Y": 8174.499952001738
      },
      {
        "Id": "0184325c8ff14d8abf43a1523f01f953",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11302.631429062327,
        "Y": 5569.0131677476775
      },
      {
        "Id": "76acbf9b2ab14b44a2b4bbb7e49079c2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10874.95195199801,
        "Y": 5500.815159911823
      },
      {
        "Id": "baad84a2047f4b6e971e0192061b8fe1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11577.19045202929,
        "Y": 5083.567402903832
      },
      {
        "Id": "78f51f111d7d4148aeb033961ee56095",
        "Name": "GL_elevation_decide",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11314.628196845038,
        "Y": 5348.712291832157
      },
      {
        "Id": "c241e403b5c44f9b8adc6b40c62c7c0d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11661.097519837247,
        "Y": 5590.000840543806
      },
      {
        "Id": "5a6f3eb1432340b9b34554dd87237466",
        "Name": "output 출력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4850.715750027884,
        "Y": 5984.182109087179
      },
      {
        "Id": "66a3070877154daea15aab9c7bb4d28a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8476.113728056522,
        "Y": 3513.83311940527
      },
      {
        "Id": "dee9e3f1fffb4ed783f40a36185ac50a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5683.330040201711,
        "Y": 5602.347832034962
      },
      {
        "Id": "662cfdb5eef54bf7ac8597f6e1f7563d",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -7800.112294257808,
        "Y": 2557.2999898221974
      }
    ],
    "Annotations": [
      {
        "Id": "eac8167caa2e4e0ebb602f9199d377b8",
        "Title": "HTML 부재별 물량 기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2293b855337546edb1fce2a82a226d51",
          "128b292038734d0497a800ffdbb36664",
          "e2e4af0fc18e4b908dcf2372c6b7c0ae",
          "ccd5e4648eca41bea187f1cd549b3006",
          "505cea545c5a4672ba1f9dca7b06fe98",
          "eb3d472b821e4392b812a06bbd34d3ed",
          "fe86d2e04e3f446eb61d604b1722d6a7",
          "7911dd5152fb4afc9942fa71eb471e18",
          "e97d441e14e44edc828a96c60739260d",
          "bb79dddfc2e9457e966f337a7c97306e",
          "fef5572a431c4fde8517afbe902a131f",
          "d1ff79fecf704ef6a5f9ec4bee7f2020",
          "6295313e8a4a48bc83e02079e2a9eb8e"
        ],
        "HasNestedGroups": false,
        "Left": -5148.082515224886,
        "Top": -426.4848569702817,
        "Width": 1542.3629375542914,
        "Height": 1113.0216143478992,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -281.4848569702817,
        "InitialHeight": 981.0216143478992,
        "TextblockHeight": 135.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "707afda58f21458a86f3241372e09c8a",
        "Title": "GWL 높이",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "afcf64071a22497bb205b94bf7425c1c",
          "f5fe8f9c5ba642238307a16c7be10c4d",
          "a179122c5d914896acba1cb4b503e4cf"
        ],
        "HasNestedGroups": false,
        "Left": -10458.329643005482,
        "Top": 4951.021861682981,
        "Width": 500.91174893886637,
        "Height": 370.70586228583034,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 5024.021861682981,
        "InitialHeight": 310.70586228583034,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e89ee029ab6c4294a965bfaede39f4ec",
        "Title": "모델라인만 검출",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "27b0ea6c7a7b4831b2fdfeab014e9389",
          "5be6e756780f4979a499b8cfe8041258",
          "977fc4e68df849e4be62353155dd68b2",
          "4e4342225379411ca2567ee9826dbfa8",
          "e7eb00eb7e9d4727b84ad39bc3dc6667",
          "591889c6fe8a4647aeaab636623a76d8"
        ],
        "HasNestedGroups": false,
        "Left": -11256.487936723213,
        "Top": 6653.997770562536,
        "Width": 2073.6654171552746,
        "Height": 534.7595875793386,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 6726.997770562536,
        "InitialHeight": 462.7595875793386,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b9ed130bbcd149338f0e1996efdce705",
        "Title": "공통정보 입력",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d898cc3c2bba495d939dd99fff568523",
          "d183314fc9f84d0585d3aa23617e7dd1",
          "b764e90b3fb148af9fc85367fdfd11ec",
          "c5ebc6f0b3ea414b83659c5adf64b856",
          "36807ed35bb54ec788bd788e7498708f",
          "822b6bdf5810416bb58840cf8cd4bb66"
        ],
        "HasNestedGroups": false,
        "Left": -12163.270610653079,
        "Top": 4007.9901383402084,
        "Width": 1001.6469856085168,
        "Height": 1029.002810479984,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4080.9901383402084,
        "InitialHeight": 753.2361372043069,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ceaf8d3d4494280a2a7f2cf8143a001",
        "Title": "Excavation Target Select 뷰로 이동",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ac80177712a2432b8cd2438a52767d01",
          "9f716c2978a743279c7407a634a31b9b",
          "1c8ef8f989844fc0bd4b898667fb3ed6",
          "04c9ae06ebe44a77b72aaf82de8bd48c"
        ],
        "HasNestedGroups": false,
        "Left": -13530.57188928824,
        "Top": 2090.3167584957596,
        "Width": 704.7004138716275,
        "Height": 622.2169465753491,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2163.3167584957596,
        "InitialHeight": 562.2169465753491,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "2d5c60e954b9457aaed4e7edc2f4ddce",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "40c0649d2aef40e4b6dfefab8827545c"
        ],
        "HasNestedGroups": false,
        "Left": -10585.097061226568,
        "Top": 8311.667408617777,
        "Width": 402.49666666666667,
        "Height": 520.0,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 8687.667408617777,
        "InitialHeight": 145.0,
        "TextblockHeight": 366.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f2254d05863148f88a81bf44a34be7df",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c1fcec73c860411f965c3205e13a53bf",
          "ec0957085d604537b91f29637a0fd228"
        ],
        "HasNestedGroups": false,
        "Left": -13542.635206415653,
        "Top": 2802.005083855584,
        "Width": 734.0,
        "Height": 601.994501300388,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2875.005083855584,
        "InitialHeight": 421.99450130038804,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "82675b875e244a78b768a0469bbd1502",
        "Title": "모델라인만 검출 - 삭제용",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3e80e620254f46ab9feaf6bb6e52e493",
          "b06296458370433d888569c6f3cc521c",
          "0f7c27495826488ebe398d343fecec09",
          "426500c7e68f44a1ba06f44ffe8644e8",
          "0eea658601884ecf84dd705e42645228",
          "26b4922c2a404062852f379baa03285b"
        ],
        "HasNestedGroups": false,
        "Left": -10877.93360072983,
        "Top": 1610.09357638863,
        "Width": 2073.66541715526,
        "Height": 534.7595875793304,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1683.09357638863,
        "InitialHeight": 462.7595875793304,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "76c81246263d448d9acbaca2e1f60dca",
        "Title": "토공객체",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c963d58e13440e3b2808c27829ffa31"
        ],
        "HasNestedGroups": false,
        "Left": -8500.119003233916,
        "Top": 2195.2463503505523,
        "Width": 404.0,
        "Height": 319.0,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2340.2463503505523,
        "InitialHeight": 145.0,
        "TextblockHeight": 135.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 6464.199397462806,
    "Y": -975.2743654690876,
    "Zoom": 0.4627538488001993
  }
}