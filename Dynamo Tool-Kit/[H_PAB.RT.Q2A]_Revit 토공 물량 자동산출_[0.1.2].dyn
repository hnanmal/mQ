{
  "Uuid": "15ecbe31-603b-466d-bfab-24dae519df57",
  "IsCustomNode": false,
  "Description": "Auto Calculating the Quantities of each Element As per the Family List",
  "Name": "[H_PAB.RT.Q2A]_Revit 토공 물량 자동산출_[0.1.2]",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Revit.Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "2ca016977a7a4a7b9ad0088b9481a8eb",
      "Name": "▶ [A.1] 토공참조선을 생성할 대상 선택. (드래그만 가능)",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "f7d3e180-17c3-4011-8982-6d929283498e-002c02f4,f7d3e180-17c3-4011-8982-6d929283498e-002c0387,f7d3e180-17c3-4011-8982-6d929283498e-002c0418,f7d3e180-17c3-4011-8982-6d929283498e-002c044d,f7d3e180-17c3-4011-8982-6d929283498e-002c04d2,f7d3e180-17c3-4011-8982-6d929283498e-002c0647,f7d3e180-17c3-4011-8982-6d929283498e-002c06a0,f7d3e180-17c3-4011-8982-6d929283498e-002c06d1,f7d3e180-17c3-4011-8982-6d929283498e-002c077f,f7d3e180-17c3-4011-8982-6d929283498e-002c0864,f7d3e180-17c3-4011-8982-6d929283498e-002c08a7,f7d3e180-17c3-4011-8982-6d929283498e-002c08d2,f7d3e180-17c3-4011-8982-6d929283498e-002c099a,f7d3e180-17c3-4011-8982-6d929283498e-002c0a49,f7d3e180-17c3-4011-8982-6d929283498e-002c0a76,f7d3e180-17c3-4011-8982-6d929283498e-002c0aa3,f7d3e180-17c3-4011-8982-6d929283498e-002c0b00,f7d3e180-17c3-4011-8982-6d929283498e-002c0b47,f7d3e180-17c3-4011-8982-6d929283498e-002c0b70,f7d3e180-17c3-4011-8982-6d929283498e-002c0b99,f7d3e180-17c3-4011-8982-6d929283498e-002c0bcc,f7d3e180-17c3-4011-8982-6d929283498e-002c0d24,f7d3e180-17c3-4011-8982-6d929283498e-002c0d7d,f7d3e180-17c3-4011-8982-6d929283498e-002c0db8,f7d3e180-17c3-4011-8982-6d929283498e-002c0dd7,f7d3e180-17c3-4011-8982-6d929283498e-002c0e00,f7d3e180-17c3-4011-8982-6d929283498e-002c0e23,f7d3e180-17c3-4011-8982-6d929283498e-002c1090,f7d3e180-17c3-4011-8982-6d929283498e-002c1216,f7d3e180-17c3-4011-8982-6d929283498e-002c128b,f7d3e180-17c3-4011-8982-6d929283498e-002c1300,f7d3e180-17c3-4011-8982-6d929283498e-002c13d4,f7d3e180-17c3-4011-8982-6d929283498e-002c13d5,f7d3e180-17c3-4011-8982-6d929283498e-002c13d6,f7d3e180-17c3-4011-8982-6d929283498e-002c13d7,f7d3e180-17c3-4011-8982-6d929283498e-002c13e1,f7d3e180-17c3-4011-8982-6d929283498e-002c13e2,f7d3e180-17c3-4011-8982-6d929283498e-002c13e3,f7d3e180-17c3-4011-8982-6d929283498e-002c13e4,f7d3e180-17c3-4011-8982-6d929283498e-002c140d,f7d3e180-17c3-4011-8982-6d929283498e-002c1417,f7d3e180-17c3-4011-8982-6d929283498e-002c1423,f7d3e180-17c3-4011-8982-6d929283498e-002c142b,f7d3e180-17c3-4011-8982-6d929283498e-002c1435,f7d3e180-17c3-4011-8982-6d929283498e-002c1447,f7d3e180-17c3-4011-8982-6d929283498e-002c1684,f7d3e180-17c3-4011-8982-6d929283498e-002c1692,f7d3e180-17c3-4011-8982-6d929283498e-002c169c,f7d3e180-17c3-4011-8982-6d929283498e-002c16a6,f7d3e180-17c3-4011-8982-6d929283498e-002c16f2,f7d3e180-17c3-4011-8982-6d929283498e-002c1771,f7d3e180-17c3-4011-8982-6d929283498e-002c177b,f7d3e180-17c3-4011-8982-6d929283498e-002c1785,f7d3e180-17c3-4011-8982-6d929283498e-002c178f,f7d3e180-17c3-4011-8982-6d929283498e-002c18d8,f7d3e180-17c3-4011-8982-6d929283498e-002c1a12,f7d3e180-17c3-4011-8982-6d929283498e-002c1a8e,f7d3e180-17c3-4011-8982-6d929283498e-002c1aad,f7d3e180-17c3-4011-8982-6d929283498e-002c1b3c,f7d3e180-17c3-4011-8982-6d929283498e-002c1b3d,f7d3e180-17c3-4011-8982-6d929283498e-002c1b3e,f7d3e180-17c3-4011-8982-6d929283498e-002c1b3f,f7d3e180-17c3-4011-8982-6d929283498e-002c1b49,f7d3e180-17c3-4011-8982-6d929283498e-002c1b4a,f7d3e180-17c3-4011-8982-6d929283498e-002c1b4b,f7d3e180-17c3-4011-8982-6d929283498e-002c1b4c,f7d3e180-17c3-4011-8982-6d929283498e-002c1b83,f7d3e180-17c3-4011-8982-6d929283498e-002c1b8b,f7d3e180-17c3-4011-8982-6d929283498e-002c1b95,f7d3e180-17c3-4011-8982-6d929283498e-002c1b9f,f7d3e180-17c3-4011-8982-6d929283498e-002c1ba9,f7d3e180-17c3-4011-8982-6d929283498e-002c1bc5,f7d3e180-17c3-4011-8982-6d929283498e-002c1c87,f7d3e180-17c3-4011-8982-6d929283498e-002c1cdc,f7d3e180-17c3-4011-8982-6d929283498e-002c1d2b,f7d3e180-17c3-4011-8982-6d929283498e-002c1d92,f7d3e180-17c3-4011-8982-6d929283498e-002c1e78,f7d3e180-17c3-4011-8982-6d929283498e-002c1e79,f7d3e180-17c3-4011-8982-6d929283498e-002c1e7a,f7d3e180-17c3-4011-8982-6d929283498e-002c1e7b,f7d3e180-17c3-4011-8982-6d929283498e-002c1e7c,f7d3e180-17c3-4011-8982-6d929283498e-002c2a14,f7d3e180-17c3-4011-8982-6d929283498e-002c2a29,f7d3e180-17c3-4011-8982-6d929283498e-002c2a86,f7d3e180-17c3-4011-8982-6d929283498e-002c2a87,f7d3e180-17c3-4011-8982-6d929283498e-002c2abf,f7d3e180-17c3-4011-8982-6d929283498e-002c2ae4,f7d3e180-17c3-4011-8982-6d929283498e-002c2af8,f7d3e180-17c3-4011-8982-6d929283498e-002c2b0c,f7d3e180-17c3-4011-8982-6d929283498e-002c2b2a,f7d3e180-17c3-4011-8982-6d929283498e-002c2b4d,f7d3e180-17c3-4011-8982-6d929283498e-002c2b87,f7d3e180-17c3-4011-8982-6d929283498e-002c2ba0,f7d3e180-17c3-4011-8982-6d929283498e-002c2bf8,f7d3e180-17c3-4011-8982-6d929283498e-002c2bf9,f7d3e180-17c3-4011-8982-6d929283498e-002c2bfa,f7d3e180-17c3-4011-8982-6d929283498e-002c2bfb,f7d3e180-17c3-4011-8982-6d929283498e-002c2bfc,f7d3e180-17c3-4011-8982-6d929283498e-002c2bfd,f7d3e180-17c3-4011-8982-6d929283498e-002c2bfe,f7d3e180-17c3-4011-8982-6d929283498e-002c2bff,f7d3e180-17c3-4011-8982-6d929283498e-002c2c24,f7d3e180-17c3-4011-8982-6d929283498e-002c2d76,f7d3e180-17c3-4011-8982-6d929283498e-002c2e3b,f7d3e180-17c3-4011-8982-6d929283498e-002c3048,f7d3e180-17c3-4011-8982-6d929283498e-002c30e1,f7d3e180-17c3-4011-8982-6d929283498e-002c3f07,f7d3e180-17c3-4011-8982-6d929283498e-002c3ffe,f7d3e180-17c3-4011-8982-6d929283498e-002c4009,f7d3e180-17c3-4011-8982-6d929283498e-002c40af,f7d3e180-17c3-4011-8982-6d929283498e-002c4138,f7d3e180-17c3-4011-8982-6d929283498e-002c425c,f7d3e180-17c3-4011-8982-6d929283498e-002c434f,f7d3e180-17c3-4011-8982-6d929283498e-002c4490,f7d3e180-17c3-4011-8982-6d929283498e-002c4530,532a571f-d1e1-498a-9098-821f1b111843-002c4a00,532a571f-d1e1-498a-9098-821f1b111843-002c4a9b,532a571f-d1e1-498a-9098-821f1b111843-002c4b3a,532a571f-d1e1-498a-9098-821f1b111843-002c4c8a,532a571f-d1e1-498a-9098-821f1b111843-002c4cd3,532a571f-d1e1-498a-9098-821f1b111843-002c4e76,532a571f-d1e1-498a-9098-821f1b111843-002c4f3f,532a571f-d1e1-498a-9098-821f1b111843-002c4f92,532a571f-d1e1-498a-9098-821f1b111843-002c503f,532a571f-d1e1-498a-9098-821f1b111843-002c50fb,532a571f-d1e1-498a-9098-821f1b111843-002c5199,532a571f-d1e1-498a-9098-821f1b111843-002c521e,532a571f-d1e1-498a-9098-821f1b111843-002c52c4,532a571f-d1e1-498a-9098-821f1b111843-002c533f,532a571f-d1e1-498a-9098-821f1b111843-002c543e,532a571f-d1e1-498a-9098-821f1b111843-002c5480,532a571f-d1e1-498a-9098-821f1b111843-002c5548,532a571f-d1e1-498a-9098-821f1b111843-002c55df,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5d62,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5e0b,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5ed1,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5f59,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5fbc,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c603e,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6106,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6142,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c61f8,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6246,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c62de,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6337,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6451,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c64d7,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c652b,cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c656b",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "Id": "37c848dc2bdf4610a41fbc71badbbea3",
      "Name": "▶ [A.2] 토공참조선 선택 대상들을 그룹으로 적용하시겠습니까? 개별로 적용하시겠습니까?",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "그룹모드",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 0
    },
    {
      "Id": "d4a4a5006e444577b0510f2539c64aaa",
      "Name": "▶ [0.2] GL 레벨 선택",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "HPP",
      "Description": "Select a level in the active document",
      "SelectedIndex": 1
    },
    {
      "Id": "818c8fd72df243069a0baf16c0a021aa",
      "Name": "▶ [A.3] 터파기 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
      "Type": "string",
      "Type2": "string",
      "Value": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------",
      "Description": "Creates a string"
    },
    {
      "Id": "0b7622ba631148ecb0e6fc93d1960739",
      "Name": "▶ [0.1] 실행모드 선택 - 확인 필수!",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "A. 토공참조선작성모드",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 0
    },
    {
      "Id": "6e2eb95cde3c422d93ae92327b8a44e2",
      "Name": "▶ [B.1] 토공 물량 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
      "Type": "string",
      "Type2": "string",
      "Value": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(m : GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------",
      "Description": "Creates a string"
    },
    {
      "Id": "6040a82ed935470c8982b6e99759423b",
      "Name": "⏸ [0.0]안내문 영역 // 입력 불필요 //",
      "Type": "string",
      "Type2": "string",
      "Value": "본 토공 물량 산출기는\r\n터파기하단선 작성 → 형상 및 물량 산출의 순서로 이루어집니다.\r\n아래 [0.1] 항목에서\r\n\"A 모드 선택 후 실행 → B 모드 선택 후 실행\"의 순서로 이용십시오.",
      "Description": "Creates a string"
    },
    {
      "Id": "87a41f68533c4439b53c42e8b858b149",
      "Name": "※ 형상 바운딩화 옵션 (B모드 에러시 True로 설정 요망)",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "false",
      "Description": "Enables selection between True and False"
    }
  ],
  "Outputs": [
    {
      "Id": "a9a05c5a4a494f8b99846ace8a15d810",
      "Name": "::: 토공 항목 별 산출 결과 :::",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n\r\nimport time\r\nimport subprocess\r\nimport asyncio\r\nimport multiprocessing\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncontents = IN[0]\r\nfolderPath = IN[1]\r\ncwd = folderPath\r\nportNo = IN[2]\r\n#bdName = IN[2]\r\n# Place your code below this line\r\n\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\ndef make_resultHTMLname(htmlStr,title,cwd):\r\n    timeStamp = time.strftime('%H_%M_%S', time.localtime(time.time()))\r\n    #folderPath = f\"{cwd}\\\\.dynLog\"\r\n    folderPath = cwd\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    fileName = f\"index.html\"\r\n    filePath = f\"{folderPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(htmlStr)\r\n    f.close()\r\n    return fileName\r\n\r\n\r\ndef execute_browser(cwd):\r\n    #cwd = find_cwd()\r\n    folderPath = cwd\r\n    os.chdir(folderPath)\r\n    #cmdStr = \"start chrome http:localhost:8000\"\r\n    cmdStr = f\"start msedge http:localhost:{portNo}\"\r\n    cmdList= cmdStr.split(' ')\r\n    #subprocess.run(args=[fileName], shell=True)\r\n    #subprocess.run(args=['start','excel',fileName], shell=True)\r\n    subprocess.run(args=cmdList, shell=True)\r\n    return cmdList\r\n\r\n\r\nfileName = make_resultHTMLname(contents,\"test\",cwd)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = execute_browser(cwd)#fileName.split('.')[0]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cf754be6b5634bd29028ca0a52448dd2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ac29465613bd482fa6f98e8743c754ca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ae4aa8174f243c6bf15328d874ec55f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac7ef79b661944419f83db8aa512b8dc",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "560684eb71d04a5db06d954925d1f97d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ncssPart = '''\r\n\r\n/* style.css */\r\nimg {\r\n width : 25%;\r\n height: 25%; \r\n}\r\n\r\n:root {\r\n  --text-color: #f0f4f5;\r\n  --background-color: #263343;\r\n  --accent-color: orange;\r\n  --icons-color: rgb(152, 187, 201);\r\n  --bodybackground-color: lightgray;\r\n}\r\n\r\nth {\r\n  text-align: center;\r\n  padding-left: 30px;\r\n}\r\n\r\ntd {\r\n  padding-left: 40px;\r\n  border-bottom : 1px solid gray;\r\n  border-collapse : collapse;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  background-color: var(--bodybackground-color);\r\n  font-family: 'STIX Two Math';\r\n} \r\n\r\na {\r\n  text-decoration: none;\r\n  color: var(--text-color);\r\n}\r\n\r\n.navbar {\r\n  display: flex;\r\n  position: sticky;\r\n  top: 0px; /* 도달했을때 고정시킬 위치 */\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: var(--background-color);\r\n  padding: 8px 12px;\r\n  font-family: 'STIX Two Math';\r\n}\r\n\r\n.navbar__logo i {\r\n  color: var(--accent-color);\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__menu {\r\n  list-style: none;\r\n  display: flex;\r\n  margin: 0;\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__menu li {\r\n  padding: 8px 30px;\r\n  color: var(--text-color);\r\n}\r\n\r\n.navbar__menu li:hover {\r\n  background-color: var(--accent-color);\r\n  border-radius: 3px;\r\n}\r\n\r\n.navbar__icons {\r\n  list-style: none;\r\n  display: flex;\r\n  color: var(--icons-color);\r\n  margin: 0;\r\n  padding-left: 0;\r\n}\r\n\r\n.navbar__icons li {\r\n  padding: 8px 12px;\r\n  margin: 0;\r\n}\r\n\r\n#cat {\r\n  display: block;\r\n  }\r\n\r\n#home {\r\n  font-weight: bolder;\r\n  }\r\n\r\n#homePage {\r\n  display: inline;\r\n  }\r\n\r\n#infoPage {\r\n  display: None;\r\n  }\r\n\r\n#famTypePage {\r\n  display: None;\r\n  }\r\n\r\n#roomInfoPage {\r\n  display: None;\r\n  }\r\n\r\n#roomInfoPage_chk {\r\n  display: None;\r\n  }\r\n\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = cssPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f3362b7a4a744f2c83d486cc23248248",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c7eb60c777bc4fb49344190189077d90",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2f30bb61e9842f5bce9325560d19a6d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02909388ca5949dfb0715ca6eb170db6",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d20cfd9d2a1412682ce473b6c53184b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\njsPart = '''\r\nfunction hideAllPages() {\r\n        document.querySelector(\"#home\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#homePage\").style.display = \"None\";\r\n        document.querySelector(\"#info\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#infoPage\").style.display = \"None\";\r\n        document.querySelector(\"#famType\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#famTypePage\").style.display = \"None\";\r\n        document.querySelector(\"#roomInfo\").style.fontWeight = \"normal\";\r\n        document.querySelector(\"#roomInfoPage\").style.display = \"None\";\r\n        document.querySelector(\"#roomInfoPage_chk\").style.display = \"None\";\r\n}\r\n\r\ndocument.querySelector(\"#cat\").onclick = function() {\r\n\t    let img = document.createElement(\"img\");\r\n\t    img.setAttribute(\"src\", \"https://t4.ftcdn.net/jpg/05/62/99/31/360_F_562993122_e7pGkeY8yMfXJcRmclsoIjtOoVDDgIlh.jpg\");\r\n\t    document.querySelector(\"#cat\").style.display = \"None\";\r\n\t    img.setAttribute(\"style\", \"width:300px;margin-top:20px;\")\r\n\t    document.body.append(img);\r\n\t};\r\ndocument.querySelector(\"#home\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#home\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#homePage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#info\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#info\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#infoPage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#famType\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#famType\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#famTypePage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#roomInfo\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#roomInfo\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#roomInfoPage\").style.display = \"inline\";\r\n\t};\r\ndocument.querySelector(\"#roomInfo_chk\").onclick = function() {\r\n        hideAllPages();\r\n        document.querySelector(\"#roomInfo_chk\").style.fontWeight = \"bolder\";\r\n        document.querySelector(\"#roomInfoPage_chk\").style.display = \"inline\";\r\n\t};\r\n\t\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = jsPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "27db9a5890714924af961756878dd8f2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f394786cf48d443ba7f1ed4ffecf31e6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ffbe090e8f048ceac88f748cfe5367b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3065825e07c247ad80cf4d130eb31ab0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1d85b857e7d478091be46b8877402fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport time\r\nimport subprocess\r\nimport os\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndynTempServerPath = IN[0]\r\n# Place your code below this line\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\ncwd = find_cwd()\r\n#cwd = os.getenv(\"HomePath\")\r\n\r\nfolderPath = f\"{cwd}\\\\{dynTempServerPath}\\\\tmpForBOQ\"\r\nif not os.path.exists(folderPath):\r\n    os.makedirs(folderPath)\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = \"C:\"+folderPath\r\nOUT = folderPath",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a8037bb941b24aefbb8a7c954bdadf1c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c28601f156a641af8fe328768a9543cc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fa0bd071cc44f71b3241d55d2fb95b1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\njsPart = IN[0]\r\ncssPart = IN[1]\r\nnavPart = IN[2]\r\n\r\npjtName = IN[3][0]\r\nbdName = IN[3][1]\r\npages = IN[4]\r\n\r\nhomePage = pages[0]\r\n\r\n\r\n\r\n# Place your code below this line\r\n##folderPath_r = folderPath.replace('\\\\','\\\\\\\\')\r\n\r\nhtmlStr = f'''\r\n<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n\r\n<head>\r\n    <link rel=\"shortcut icon\" href=\"#\">\r\n    <meta charset=\"UTF-8\">\r\n    <title>RVT Calculation Result</title>\r\n    <style>\r\n        {cssPart}\r\n    </style>\r\n</head>\r\n\r\n<header>\r\n<h5>Revit Elements' Bill of Quantities Page</h5>\r\n<h4>{pjtName}</h4>\r\n<h4>{bdName}</h4>\r\n</header>\r\n\r\n<body>\r\n{navPart}\r\n\r\n<div id=\"homePage\">\r\n{homePage}\r\n</div>\r\n\r\n\r\n\r\n<script type =\"module\" src=\"./js/script.js\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = htmlStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "db8ab5b988a94db4b0078f8a573877d8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0d164630c6674771a6691546aed10994",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95834993dfdf44c89ec70be7a7f38d0d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfe5ea2062134c91ba2ef9d3de1b9cbf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d36f4f37829c4a06940d87cc720a14e7",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65044fc2f2424dab86937479bef182b8",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52de29af188b40b58991a6c96405c633",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "63954f978a364108967cfd139a53a027",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c8f8392b424341519504d4b3da00a6ba",
          "Name": "htmlStr",
          "Description": "htmlStr",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be16dfbdf9be4a19832ee1e59b83fcb7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "htmlStr;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnavPart = f\"\"\"\r\n\r\n<nav class=\"navbar\">\r\n\r\n  <ul class=\"navbar__menu\">\r\n    <li id=\"home\">Home</li>\r\n  </ul>\r\n\r\n</nav>\r\n\r\n\"\"\"\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = navPart",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "395022e2df424b0ea9278f5b2d5bc597",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "70c1b5706b534ce8a47ed0d79ca5b4d2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "057fe81754df4e1c86feda9aa5fdba9a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit import Elements\r\n\r\nimport time\r\nimport subprocess\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncontents = IN[0]\r\nfolderPath = IN[1]\r\n#bdName = IN[2]\r\n# Place your code below this line\r\ndef find_cwd():\r\n    doc = Revit.Application.Document.Current\r\n    filePath_string = doc.FilePath\r\n    folderPath = filePath_string.split('\\\\')\r\n    folderPath.pop(-1)\r\n    folderPath_str = '\\\\'.join(folderPath)\r\n    return folderPath_str\r\n\r\n#cwd = find_cwd()\r\ncwd = folderPath\r\n\r\ndef make_resultHTMLname(jsStr,cwd):\r\n    #timeStamp = time.strftime('%H_%M_%S', time.localtime(time.time()))\r\n    #folderPath = f\"{cwd}\\\\.dynLog\"\r\n    folderPath = cwd\r\n    jsPath = cwd + \"\\\\js\"\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    if not os.path.exists(jsPath):\r\n        os.makedirs(jsPath)\r\n    fileName = \"script.js\"\r\n    filePath = f\"{jsPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(jsStr)\r\n    f.close()\r\n    return fileName\r\n\r\ndef execute_file(fileName):\r\n    #cwd = find_cwd()\r\n    folderPath = cwd\r\n    os.chdir(folderPath)\r\n    subprocess.run(args=[fileName], shell=True)\r\n    #subprocess.run(args=['start','excel',fileName], shell=True)\r\n    \r\n\r\nfileName = make_resultHTMLname(contents,cwd)\r\n#fileName = \"Test1.html\"\r\n\r\n#execute_file(fileName)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = fileName",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e96d643dcf064c7e94aac9e3b260f35b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c4155e71568b4830881ccdff683294ca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de4511e34b1e4eee93387b7a4f3ded1b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce96f0f5ad8049ada8ab9b7930b94d0d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "173d7c4038354e549873280dee2bfce3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\nimport asyncio\r\nimport multiprocessing\r\nimport subprocess\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncwd = IN[0]\r\nportNo = IN[1]\r\n# Place your code below this line\r\nbatStr = f\"\"\"\r\n@echo on\r\npython -m http.server {portNo}\r\ncmd /k\r\n\"\"\"\r\n##cmd /k\r\ntitle = \"localWebserver\"\r\n\r\ndef make_startSever_bat(batStr,title,cwd):\r\n    folderPath = cwd\r\n    if not os.path.exists(folderPath):\r\n        os.makedirs(folderPath)\r\n    fileName = f\"{title}.bat\"\r\n    filePath = f\"{folderPath}\\\\\" + fileName\r\n    f = open(filePath, 'w', encoding='utf8')\r\n    f.write(batStr)\r\n    f.close()\r\n    return fileName\r\n\r\ndef startBat(fileName, cwd):\r\n    cmdStr = f\".\\\\{fileName}\"\r\n    cmdList= cmdStr.split(' ')\r\n    os.chdir(cwd)\r\n    \r\n    res = subprocess.Popen(args=cmdList, shell=True)\r\n    return res\r\n\r\nbatFileName = make_startSever_bat(batStr,title,cwd)\r\n#res = multiprocessing.Process(name=\"SubProcess\", target=startBat, args=(batFileName, cwd))\r\n# Assign your output to the OUT variable.\r\nOUT = startBat(batFileName, cwd)\r\n\r\n#startBat(fileName, cwd)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0997ba6718324ff081fe91f3ce1535e0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b244d15a50d3405ea72302e60993e008",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "333c9512c51a4ccd9345ea3a298069dd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d73b54a12c8476790fdbb3cd3ce1d8b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\njsPart = IN[0]\r\ncssPart = IN[1]\r\ntablePart = IN[2]\r\n\r\n# Place your code below this line\r\n##folderPath_r = folderPath.replace('\\\\','\\\\\\\\')\r\n\r\nhtmlStr = f'''\r\n<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>my first three.js app</title>\r\n    <style>\r\n        {cssPart}\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n\r\n\r\n<div class=\"wrapper\">\r\n\r\n  <a data-fslightbox=\"gallery\" href=\"#custom-source\">\r\n    유튜브 라이트박스\r\n  </a>\r\n\r\n  <iframe id=\"custom-source\"\r\n          frameborder=\"0\"\r\n          width=\"1920px\"\r\n          height=\"1080px\"\r\n          allow=\"autoplay; fullscreen\"\r\n          src=\"https://www.youtube.com/embed/qgBSiRwsbNw?autoplay=1\">\r\n  </iframe>\r\n</div>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/fslightbox/3.3.1/index.min.js\" integrity=\"sha512-EqNNJuepkw5P9vxCml8eBk7C4Ld+4kAnvzOD/jG21rkxWPILGoQa5EvD62UieiJF0u3xoQrcVnce4i83VnYj/Q==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n'''\r\n# Assign your output to the OUT variable.\r\nOUT = htmlStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b0c79b8f7c43421cb24454e4b5a3c6c5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "59f35d04a34b411eb9e0f713fcfd011f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b62474dfd8ce4cd68e328c6a8656e273",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "571389e6f4374bd1a27699329a448a29",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72d8b065602f4a4a8bb9e3380be202c0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "08c009f046864602ba768cfce2de03b6",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "810ea229c08b4624995fa89dd5ef085b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\".dynTemp\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cba2fe4be33240ff936f27fc8accdb21",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "906352ffaebd4462b2df3faed4fe4f60",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "8000"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "01f19c6794424b339ffd2165bba73d2e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "96fad71671024f0d93f51c192c6500f1",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f27d4903409c435ab66415b8319a3e9d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "61002c118052475da50beebb8c44d28d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1efd445609f6400292c4bcbb80da533c",
          "Name": "bdName",
          "Description": "bdName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24fe1a2cd3234642bb321550b557a5cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "bdName;"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "f7d3e180-17c3-4011-8982-6d929283498e-002c02f4",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0387",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0418",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c044d",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c04d2",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0647",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c06a0",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c06d1",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c077f",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0864",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c08a7",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c08d2",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c099a",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0a49",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0a76",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0aa3",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0b00",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0b47",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0b70",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0b99",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0bcc",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0d24",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0d7d",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0db8",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0dd7",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0e00",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c0e23",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1090",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1216",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c128b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1300",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13d4",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13d5",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13d6",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13d7",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13e1",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13e2",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13e3",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c13e4",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c140d",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1417",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1423",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c142b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1435",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1447",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1684",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1692",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c169c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c16a6",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c16f2",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1771",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c177b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1785",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c178f",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c18d8",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1a12",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1a8e",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1aad",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b3c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b3d",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b3e",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b3f",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b49",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b4a",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b4b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b4c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b83",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b8b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b95",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1b9f",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1ba9",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1bc5",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1c87",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1cdc",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1d2b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1d92",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1e78",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1e79",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1e7a",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1e7b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c1e7c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2a14",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2a29",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2a86",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2a87",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2abf",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2ae4",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2af8",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2b0c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2b2a",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2b4d",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2b87",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2ba0",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bf8",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bf9",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bfa",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bfb",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bfc",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bfd",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bfe",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2bff",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2c24",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2d76",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c2e3b",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c3048",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c30e1",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c3f07",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c3ffe",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c4009",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c40af",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c4138",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c425c",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c434f",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c4490",
        "f7d3e180-17c3-4011-8982-6d929283498e-002c4530",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4a00",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4a9b",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4b3a",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4c8a",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4cd3",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4e76",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4f3f",
        "532a571f-d1e1-498a-9098-821f1b111843-002c4f92",
        "532a571f-d1e1-498a-9098-821f1b111843-002c503f",
        "532a571f-d1e1-498a-9098-821f1b111843-002c50fb",
        "532a571f-d1e1-498a-9098-821f1b111843-002c5199",
        "532a571f-d1e1-498a-9098-821f1b111843-002c521e",
        "532a571f-d1e1-498a-9098-821f1b111843-002c52c4",
        "532a571f-d1e1-498a-9098-821f1b111843-002c533f",
        "532a571f-d1e1-498a-9098-821f1b111843-002c543e",
        "532a571f-d1e1-498a-9098-821f1b111843-002c5480",
        "532a571f-d1e1-498a-9098-821f1b111843-002c5548",
        "532a571f-d1e1-498a-9098-821f1b111843-002c55df",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5d62",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5e0b",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5ed1",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5f59",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c5fbc",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c603e",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6106",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6142",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c61f8",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6246",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c62de",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6337",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c6451",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c64d7",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c652b",
        "cb3e720e-4048-4a6d-bdba-82bcf4c7f195-002c656b"
      ],
      "Id": "2ca016977a7a4a7b9ad0088b9481a8eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ac59c7b278ea4aff8689ed1a6615fc10",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select multiple elements from the Revit document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "그룹모드",
          "Item": "그룹모드"
        },
        {
          "Name": "개별모드",
          "Item": "개별모드"
        }
      ],
      "SelectedIndex": 0,
      "SelectedString": "그룹모드",
      "Id": "37c848dc2bdf4610a41fbc71badbbea3",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9309eda99c6445ddabbb33819953e2b3",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n# Add Revit API references\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\ndef get_geom_elem(mode, elems):\r\n    res = []\r\n    tmp = []\r\n    if refLine_mode==\"그룹모드\":\r\n        for elem in elems:\r\n            try:\r\n                tmp.append(elem.Geometry()[0])\r\n            except: pass\r\n        res.append(tmp)\r\n    if refLine_mode==\"개별모드\":\r\n        for elem in elems:\r\n            try:\r\n                res.append(elem.Geometry())\r\n            except: pass\r\n    res_ = go(\r\n        res,\r\n        filter(lambda x: x ),\r\n        list,\r\n    )\r\n    \r\n    return res_\r\n    \r\ndef get_btm_srf(geom):\r\n    filter_rule = lambda srf: go(\r\n        srf,\r\n        lambda x: x.NormalAtParameter(0,0),\r\n        lambda x: x.Z,\r\n        lambda z: z==-1,\r\n    )\r\n\r\n    res = go(\r\n        geom,\r\n        lambda x: x.Explode(),\r\n        filter( filter_rule ),\r\n        list,\r\n    )\r\n    \r\n    return res\r\n\r\n#to convert point\r\ndef feet_to_m(a,b,c):\r\n    k=0.3048\r\n    return XYZ(a/k,b/k,c/k)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\nrefLine_mode = IN[1]\r\ntgt_elems_ = IN[2]\r\ntgt_elems = go(\r\n    tgt_elems_,\r\n    filter( lambda x: \"Lean\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),#.AsValueString() ),\r\n    list,\r\n)\r\ndescent_height = IN[3]\r\noffset_gap = IN[4]\r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\ndef make_refLine_forExca(refLine_mode, tgt_elems, descent_height, offset_gap):\r\n    all_geoms = get_geom_elem(refLine_mode, tgt_elems)\r\n    bdCuboids = go(\r\n        all_geoms,\r\n        map( lambda x: BoundingBox.ByGeometry(list(x)) ),\r\n        map( lambda x: x.ToCuboid() ),\r\n    )\r\n    btmSrfs = go(\r\n        bdCuboids,\r\n        map( get_btm_srf ),\r\n        lambda x: chain(*x),list,\r\n        map( lambda x: x.Translate(0,0,descent_height) ),\r\n    )\r\n    \r\n    refLines = go(\r\n        btmSrfs,\r\n        map( lambda x: x.PerimeterCurves() ),\r\n        map( lambda x: PolyCurve.ByJoinedCurves(x) ),\r\n        map( lambda x: x.OffsetMany(\r\n            signedDistance=offset_gap,\r\n            extendCircular=False,\r\n            planeNormal=None)\r\n            ),\r\n        lambda x: chain(*x),list,\r\n        map( lambda x: x.Explode() ),\r\n        list,\r\n        #map( lambda x: ModelCurve. .GeometryCurve(x) ),\r\n    )\r\n    \r\n    # Step 4: Start a transaction to create the ModelCurve\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    \r\n    # Create the ModelCurve in Revit\r\n    res = []\r\n    for refLine in refLines:\r\n        tmp = []\r\n        for line in refLine:\r\n            try:\r\n                model_curve = Revit.Elements.ModelCurve.ByCurve(line)\r\n                tmp.append(model_curve)\r\n            except:\r\n                pass\r\n        res.append(tmp)\r\n    # Complete the transaction    \r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    \r\n\r\n    \r\n    return refLines, res\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"토공참조선작성모드\":\r\n    OUT = make_refLine_forExca(refLine_mode, tgt_elems, descent_height, offset_gap)\r\nelse:\r\n    OUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "60de27b5144b4a4aa9efe3ae63544250",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4d905f133182440687864f8b39940d64",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "980d29d191e24c359b820242222ad14d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f38c6ff0fb74cf2ae93dc90f04fdb10",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "722621a8cffd47f697c6e5b5f25f2b5e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f1e01a477f4cf58e78e18bf4db9448",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7db54da8579b44428ca2d304a537575a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "e1d1afef15494e90aebd8687d98b6e6b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "486f40831b9d470986648abada5b65d6",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "899d5a8197104764afb0147a1bceeb7e",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "788c7390f38b4710b025a6e742755ab2",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e58e2381bb8144ddb5419691ec36dfa4",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c566c8fc3804ba69be5481fc03e6cfd",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "b7eb027137e8454086a1b726cac71c64",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "afec17263b3748268ba56525793a8fbf",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f3ad879f22749a9ba63aebff5fccea1",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0854b43957e4a51b38d0e1b107acae0",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "293ee08495b341f19c26b16d75749769",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "28d4e2e8bd334488afd8ec5ec8952902",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fc29f4dd1f54d04a9aa2d84fef84325",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "21df8c09eca34793b299597bcfed8f3e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e52c9f2c60434034a400f74526a939a2",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0449558db480429e93c3e5c6fb805ad7",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9f03d47a5f154d068cb2559098252015",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5e7f4639d379438296c7c9ab72a4e2a3",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08830621fd33491ebaa94ad78d131012",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96836be7a0da4af7ad7dc9d10f3816ac",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "27ee575618b3499cb2a23d855513fd4e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d5722d2c77841ca92f918186e3f1cf1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "50f219f3cb8d407594cf82aafb1d85c1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "03873713d2d243c7b7bd849159714295",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "64b606fadf054cdea60b4d782f097369",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cf41cb4e438048d5a643b53478b8c2d6",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "061d205c835f4150837598857ff18677",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c134bea4ff3f4fa6975aa585f66663d9",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7538ce257ae440bb8a4278632bffc241",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a98af5beea094aa0a3a365d9c3e764a0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "291b803880f14ab29cb7f746ca7395d3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a27692fbf48d4efa88f3a4ed2e0e4053",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af540f1b4e1e4abd806765a8770d0240",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e922d85c1a1411ab9b386203a434464",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "cac820213efc4f5f8eaf469052e5253e",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "982f768820174889a738f9ab0a6bfe8e",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c977062ff3b4bf2996b2d6039d1fc40",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "79479c28a4cc437681e541b69a3541a0",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ade0eefd687c4bad9a2eb3f2da23679d",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf7c85c0dfe94edbbcbcb5d74e06e610",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 302,
      "SelectedString": "OST_Lines",
      "Id": "31436c5e3a3d44d69317868ea565d8a4",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b963c06f63184cb4a22429992aa31db3",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "81c8b0b26eff41a6b7852e25463ed7a9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4140c31f7523452a9fa75c3d7304d2e0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3923b3f638514f7e93711499c860714a",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6ac6c5392a214bb5ad3cd59692be9f9c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b19efeea56b94780b857442218c585f2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2da86effb7b64384a9f44f49c8aae6c2",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdc6827d67894112b55a17cca3fed3d6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a73ca8bcd1c94ae8b2e3d3f6aa381a13",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "557c7def07a0454f9cf3b80f2d8457cc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Detail Line\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db501a978ca94ef0832af298241e8759",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4128780dd76a4a9ab7c53f58cb91be4c",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d7e93c10cea45c79fb97bdd59295f20",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "646da640e791436b9e676def7f197946",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42639701044443749e71792766cfa267",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "55168216983b4a09ba4192666bc455ef",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e512591d32174a12863e417abfd0d6a0",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79e53e16f8694521a9c1447937335a31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i==0?true:false;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "HPP",
      "Id": "d4a4a5006e444577b0510f2539c64aaa",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95b5d68c9a764d089acfbc245c17294a",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b69db45dd5f844868c367543122be4c8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "76082dbfceaa48c184a3862515808afd",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfa4524ea7284ca3b012023e85a63031",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e764f3df4c3e43ad9801fff7bcba33d5",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "107f9e83911f47549f090965adf30ae2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c77b970fb9549f2b6cbe88b4c7e9c11",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i*1000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03e45e46c08e4020b2c5b1e22b3a9e63",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3dc830b4f1fd469cb3d390236468d7db",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa3eacad04b04a3a966bfb02469776e4",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68488badc20e49648613793634544f42",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b8fa2618c4d14c7fa6cc7eedfae57dbd",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "d92038dce9ce40fd99171d85fc06a1a2",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "282392fad3304099b9758a347ed8a8c5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c018b722b526496dbfb2b22020736e33",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "67024f753938496798386c09943c2086",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9aac8ef1a874411982cee6c4f12fe0d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a90594faab9d4f7b93e4fdaf5cfdd3f2",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "21bec21de85046caa92ea991230f688e",
          "Name": "G",
          "Description": "G",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e27458bab3f24c76b14aa032282f33b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "G;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Import required Revit API and services\r\nimport clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference(\"RevitNodes\")\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Get the active document and UIDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\nuidoc = uiapp.ActiveUIDocument\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Input: View name from Dynamo\r\nview_name = IN[0]  # View name (string) to open\r\n\r\n# Find the view by name\r\nviews = FilteredElementCollector(doc).OfClass(View).ToElements()\r\ntarget_view = None\r\n\r\nfor view in views:\r\n    if view.Name == view_name and not view.IsTemplate:  # Ignore view templates\r\n        target_view = view\r\n        break\r\n\r\n# Open the view if it exists\r\n\r\nif target_view:\r\n    # Start a transaction\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    \r\n    uidoc.RequestViewChange(target_view)  # Opens the target view\r\n    \r\n    # Complete the transaction    \r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    OUT = \"View opened: {}\".format(view_name)\r\n\r\nelse:\r\n    OUT = \"View not found: {}\".format(view_name)\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "6de9297320c3435a9638b0a843520671",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "15ba494c217c40b9ad711fddbe5ff745",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b0e47914dc64d0d8065044efa9ca551",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e935e5b8d6894a80a1197cd3f2178b90",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "77451183d8844e38b1f08ca466dbb2f2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"3D_AR_for Earth Calc\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "818c8fd72df243069a0baf16c0a021aa",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "952c3a7f9e1e43379adf1a6992042e4f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncommon_info_str = IN[0]\r\n# Place your code below this line\r\n\r\ndef parse_commonInfo(common_info_str):\r\n    res = common_info_str.split(\"\\n\")\r\n    \r\n    res = go(\r\n        common_info_str,\r\n        lambda x: x.split(\"\\n\"),\r\n        map(lambda x: x.strip()),\r\n        filter(lambda x: \"---\" not in x),\r\n        filter(lambda x: \"<\" not in x),\r\n        map(lambda x: x.split(\":\")),\r\n        map(lambda x: float(x[-1])),\r\n    )\r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = parse_commonInfo(common_info_str)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3f05393318ea48a98df43c326a7f3088",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "fa2db91d4c7c441b93dbeb54c43c6d78",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a866d833892b46e7abb4de3b59e307c2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "53943525b95f4d968097c2b1e3011ec5",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "2fac04ed0dff41f8a60db925de32d4fa",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1b824ecac7c47399fae21ce6c412a60",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5be6c4217fb14f5f98c0f991d5bcd1af",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5e1daa10db34268ae424463e26d6def",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65127c6ec8d4406887c716c71eddf16a",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe02f83fda3a4290bd6a20a532f032fb",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "916e961e923a45f491428cd033a8e672",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0];\ni[1];\ni[2];\ni[3];\ni[4];\ni[5];"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "A. 토공참조선작성모드",
          "Item": "토공참조선작성모드"
        },
        {
          "Name": "B. 물량산출모드",
          "Item": "물량산출모드"
        },
        {
          "Name": "* 토공객체삭제모드",
          "Item": "토공객체삭제모드"
        }
      ],
      "SelectedIndex": 0,
      "SelectedString": "A. 토공참조선작성모드",
      "Id": "0b7622ba631148ecb0e6fc93d1960739",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c52a231866114079afc4282e74eaf842",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6e2eb95cde3c422d93ae92327b8a44e2",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c82450fef44b47cf8f041e4105f515fc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(m : GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5a6ed5eabfd347cf89e631ab8cdf79bd",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "66d6f373451c40d98515da2af535f43d",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba7a775e4ad44bd4bf63c158065df0f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "145a0c642c904289887dcc0c6841d34e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "731d114e8cb340f2ae982f6044dc37ae",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0];\ni[1];\ni[2];"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n# Add Revit API references\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\ngroup_closed_curves = IN[1]\r\nbelow_refLines = IN[2]\r\nVCF, GWL, G, GL = IN[3]\r\nall_elem_solid = IN[4]\r\nc1_d2 = IN[5]\r\n# Place your code below this line\r\n\r\n\r\ndef make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2):\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    below_refPolyline = go(\r\n        line_grp,\r\n        PolyCurve.ByJoinedCurves,\r\n        \r\n    )\r\n    \r\n    btm_ref_Z = go(\r\n        line_grp,\r\n        map(lambda x: x.StartPoint.Z),\r\n        min,\r\n    )\r\n    \r\n    height_to_GL = GL - btm_ref_Z\r\n    \r\n    if height_to_GL > 0:\r\n        upper_pre_refPolyline = go(\r\n            below_refPolyline,\r\n            lambda x: x.Translate(0,0,height_to_GL),\r\n        )\r\n        \r\n        upper_offset_refPolyline = go(\r\n            upper_pre_refPolyline,\r\n            lambda x: x.OffsetMany(\r\n                signedDistance=(height_to_GL * G),\r\n                extendCircular=False,\r\n                planeNormal=None\r\n                ),\r\n            lambda x: x[0],\r\n        )\r\n        \r\n        if upper_pre_refPolyline.Length > upper_offset_refPolyline.Length:\r\n            upper_offset_refPolyline = go(\r\n                upper_pre_refPolyline,\r\n                lambda x: x.OffsetMany(\r\n                    signedDistance=-(height_to_GL * G),\r\n                    extendCircular=False,\r\n                    planeNormal=None\r\n                    ),\r\n                lambda x: x[0],\r\n            )\r\n        \r\n        res = Autodesk.DesignScript.Geometry.Solid.ByLoft(\r\n            [below_refPolyline, upper_offset_refPolyline]\r\n        )\r\n    else:\r\n        res = None\r\n    \r\n    btmRefArea = below_refPolyline.Patch().Area / 10**6\r\n    leanAndOthers_vol = btmRefArea * sum([c1,c2,c3,c4]) \r\n    \r\n    return res, leanAndOthers_vol\r\n    \r\ndef make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2):\r\n    below_refLine_grps = group_closed_curves(below_refLines)\r\n    excaSolids = []\r\n    leanAndOthers_vol = []\r\n    for line_grp in below_refLine_grps:\r\n        if make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[0] != None:\r\n            excaSolids.append(\r\n                make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[0]\r\n            )\r\n        leanAndOthers_vol.append(\r\n            make_excaSolid_perGrp(line_grp, VCF, GWL, G, GL, c1_d2)[1]\r\n        )\r\n    res = Autodesk.DesignScript.Geometry.Solid.ByUnion(excaSolids)\r\n    total_leanAndOthers = sum( leanAndOthers_vol )\r\n    \r\n    return res, total_leanAndOthers\r\n\r\ndef find_earthCalc_solids(below_refLines, VCF, GWL, G, GL, c1_d2):\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    whole_exca_solid = make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2)[0]\r\n#    total_leanAndOthers = round( \r\n#        make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2)[1], 3\r\n#    )\r\n\r\n    \r\n    gwl_above_solid = go(\r\n        whole_exca_solid,\r\n        BoundingBox.ByGeometry,\r\n        BoundingBox.ToCuboid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==1 ),\r\n        next,\r\n        lambda x: x.Thicken(GWL-GL, False),\r\n        #lambda x: x.Thicken(5000),\r\n    )\r\n    split_for_gwl_solid = Geometry.Split( whole_exca_solid, gwl_above_solid )\r\n    \r\n    if len(split_for_gwl_solid)<2:\r\n        above_exca_solid = split_for_gwl_solid[0]\r\n        above_exca_solid_volume = round(above_exca_solid.Volume/10**9, 3)\r\n        below_exca_solid_volume = 0.0\r\n    else:\r\n        above_exca_solid = split_for_gwl_solid[1]\r\n        above_exca_solid_volume = round(above_exca_solid.Volume/10**9, 3)\r\n        \r\n        below_exca_solid = split_for_gwl_solid[0]\r\n        below_exca_solid_volume = round(below_exca_solid.Volume/10**9, 3)\r\n    \r\n    split_for_disp_solid = Geometry.Split( whole_exca_solid, all_elem_solid )\r\n    backfill_solid = split_for_disp_solid[0]\r\n    backfill_solid_volume = round(backfill_solid.Volume/10**9, 3)\r\n    \r\n    disposal_solid = split_for_disp_solid[1]\r\n    disposal_solid_volume = round(disposal_solid.Volume/10**9, 3)\r\n\r\n    total_leanAndOthers = go(\r\n        disposal_solid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n        map( lambda x: x.Thicken(sum([c1,c2,c3,c4])*1000, False) ),\r\n        list,\r\n        map(lambda x: x.Volume ),\r\n        sum,\r\n        lambda x: round(x / 10**9, 3),\r\n    )\r\n\r\n    res = [\r\n        [\r\n            backfill_solid,\r\n            disposal_solid,\r\n        ],\r\n        [\r\n            [\"Above_GWL_Excavation Volume (m3)\", round(above_exca_solid_volume, 3)],\r\n            [\"Below_GWL_Excavation Volume (m3)\", round(below_exca_solid_volume, 3)],\r\n            [\"Total_Excavation Volume (m3)\", round(whole_exca_solid.Volume/10**9, 3)],\r\n            [\"Backfill Volume (m3)\", round((backfill_solid_volume - total_leanAndOthers), 3)],\r\n            [\"Disposal Volume (m3)\", round((disposal_solid_volume + total_leanAndOthers), 3)],\r\n            [\"Disposal Volume_VCF (m3)\", round((disposal_solid_volume + total_leanAndOthers) * VCF, 3)],\r\n            #[\"Backfill Volume (m3)\", backfill_solid_volume],\r\n            #[\"Disposal Volume (m3)\", disposal_solid_volume],\r\n            #[\"Disposal Volume_VCF (m3)\", disposal_solid_volume * VCF],\r\n           \r\n        ]\r\n    ]\r\n\r\n    \r\n    return res\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    OUT = find_earthCalc_solids(below_refLines, VCF, GWL, G, GL, c1_d2)\r\n    #OUT = make_excaSolids(below_refLines, VCF, GWL, G, GL, c1_d2)\r\n    #OUT = group_closed_curves(below_refLines)\r\n    #OUT = calc_allLeans_base_volume(c3c2_ratio)\r\nelse:\r\n    OUT = [[[]]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c73788e7f1394f22b07d752572b0c451",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c2c948173c6f4aeb817c250ff2353708",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90724f9b493f48f48e9737ce53e854fd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "110e94e4545d4edbaa4a8aba39c41298",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa45b2f9aa9c42e18bd6a1c1c148e9c6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25c363e7e240458eb5390292ebb75059",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e517991c72db4770bf32102dfb86a949",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d7ecb8284d7402fb0c59e52af318432",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n#clr.AddReference(\"Revit.GeometryConversion\")\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n#import Revit.GeometryConversion #import ProtoToRevit, RevitToProto\r\n#from Revit import GeometryConversion\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\n\r\n\r\n#########################################################################\r\ndef get_QGeometry(elem):\r\n    # Revit Document 객체 가져오기\r\n    doc = DocumentManager.Instance.CurrentDBDocument\r\n    revitElement = UnwrapElement(elem)\r\n    \r\n    # Geometry 가져오기 옵션 설정\r\n    geometryOptions = Options()\r\n    geometryOptions.DetailLevel = ViewDetailLevel.Fine  # 세부 레벨 설정 (Fine, Medium, Coarse 등)\r\n    geometryOptions.IncludeNonVisibleObjects = True    # 비가시 기하학 포함 여부\r\n    \r\n    # GeometryElement 가져오기\r\n    #geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n    geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n\r\n    # Geometry 변환 리스트 초기화\r\n    dynamoGeometries = []\r\n\r\n    # GeometryElement 내의 GeometryObject 순회\r\n    for geomObj in geometryElement:\r\n        # Revit GeometryObject를 Dynamo Geometry로 변환\r\n        dynGeom = geomObj#.ToProtoType()\r\n        #dynGeom = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geomObj)\r\n        if dynGeom:\r\n            dynamoGeometries.append(dynGeom)\r\n    \r\n    return dynamoGeometries\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Rooms,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    \r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def get_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def get_ug_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_ug_cols():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n        \r\n    def get_ug_frames():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_railElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n        \r\n    def get_genericModels():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            #filter( lambda x: DSCore.Object.Type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            filter( lambda x: type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    pre_res = go(\r\n        list(chain(*map(get_elems, bics))),\r\n        filter( lambda x: \"Lean\" not in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n        list,\r\n    )\r\n\r\n    res = [\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Rooms),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming),\r\n        get_ug_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Walls),\r\n        #get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_Floors),\r\n        get_elems(Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation),\r\n        #list(map(get_elems, bics))# + get_genericModels()\r\n        pre_res,\r\n    ]\r\n\r\n    return res\r\n\r\ndef get_solid(element):\r\n    geos = []\r\n    for geo in element.get_Geometry(Options()):\r\n        geos.append(geo)\r\n    \r\n    #res = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geos[0])\r\n    \r\n    return geos[0]\r\n\r\n\r\ndef union_solids(solids):\r\n    \"\"\"\r\n    주어진 Solid 객체 리스트를 유니온하여 하나의 Solid로 반환\r\n    :param solids: List[Solid]\r\n    :return: Solid\r\n    \"\"\"\r\n    if not solids or len(solids) < 2:\r\n        raise ValueError(\"유니온을 수행할 최소 2개의 Solid가 필요합니다.\")\r\n    \r\n    # 첫 번째 Solid를 기준으로 시작\r\n    result = solids[0]\r\n    \r\n    # 남은 Solid와 반복적으로 유니온 수행\r\n    for solid in solids[1:]:\r\n        if solid.Volume > 0:  # Solid가 비어 있지 않은지 확인\r\n            result = BooleanOperationsUtils.ExecuteBooleanOperation(result, solid, BooleanOperationsType.Union)\r\n    \r\n    return result\r\n\r\ndef get_allElems_unionSolid(allElems):\r\n    allRooms = get_allElems(doc)[0]\r\n    allElems = list(chain(*get_allElems(doc)[1]))\r\n    res = go(\r\n        allElems,\r\n        #map(lambda x: dir(x)),\r\n        map( lambda x: get_solid(x) ),\r\n        list,\r\n        #map(lambda x: get_QGeometry(x)),\r\n#        lambda x: chain(*x),\r\n        lambda x: Solid_ByUnion(x),\r\n    )\r\n    return res\r\n    \r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    OUT = get_allElems(doc)\r\nelse:\r\n    OUT = [[]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4eb222ddf2cf4962952ad43889a19ec5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0a4173ea38d2404c8b116370d2bb6484",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e28569b87b4d4353ad09451af14aeb6c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fbb762181f3c4840b74f5cb59d8a543e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab00f406d2f74dec85e656e09b1b0234",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcbd7bf60c3a4bdcab77bb4a95cf5519",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dd996477d434a4d8b243e577514872d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "51eef0ea8ea5421fbc755bb911cf7224",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f87682dc5990477b96cfe19d54245212",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0af4bd0098c46e280ac31a36a2e357e",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fdb57bb5f0134f658aa58c492650cd08",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c7c267fb9dc47b78e6163c6e4778239",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< Lean 두께 (m) >>\r\nC1 : 0.05\r\n------------------------\r\n<< Base 두께 (m) >>\r\nC2 : 0.1\r\n------------------------\r\n<< SubBase 두께 (m) >>\r\nC3 : 0.1\r\n------------------------\r\n<< Extra Excavation 두께 (m) >>\r\nC4 : 0\r\n------------------------\r\n<< Lean 돌출길이 (m) >>\r\nD1 : 0.1\r\n------------------------\r\n<< 터파기 여유폭 (m) >>\r\nD2 : 0.2\r\n------------------------"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cf812266306644d4a00091f7ee5f16df",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "922be7a688d74e108184e70238b1e52e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "------------------------\r\n<< 토량환산계수 >>\r\nVCF : 1.15\r\n------------------------\r\n<< 지하수위(GL 기준 음수) >>\r\nGWL : -1\r\n------------------------\r\n<< 터파기각도 >\r\nG : 1\r\n------------------------"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "83e83621632f4736aca0429b270e9a83",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "70741d1ad80b43f18db33b4563c4e6ca",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9593892c7d9478ebcd5be8624b88145",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c94bb3aa760349aba6a9f8ba26417482",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "8c175b4b034a427fb438f7052bc58eac",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61cf8573bcd2443cb2666f042c4cc87b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "851507e58ee843c398755e9daa50534f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a1c4193c62ec411fbe91925404122753",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e60ccd5524604e77983a06fb0c9a4012",
          "Name": "geometry[]",
          "Description": "The element’s location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Replication": "Auto",
      "Description": "Returns an element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncommon_info_str = IN[0]\r\n# Place your code below this line\r\n\r\ndef parse_commonInfo(common_info_str):\r\n    res = common_info_str.split(\"\\n\")\r\n    \r\n    res = go(\r\n        common_info_str,\r\n        lambda x: x.split(\"\\n\"),\r\n        map(lambda x: x.strip()),\r\n        filter(lambda x: \"---\" not in x),\r\n        filter(lambda x: \"<\" not in x),\r\n        map(lambda x: x.split(\":\")),\r\n        map(lambda x: float(x[-1])),\r\n    )\r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = parse_commonInfo(common_info_str)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c3ceffa982e94ad7a720497468ee14f9",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c9634c885a964762b7ec9bc942965bf2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00e85db361714b81b105e742d292ab69",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "acb83bb51bd44088b25478c70ce07170",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5d1db244d6d14d36aec2f43a3114d4a2",
          "Name": "GWL",
          "Description": "GWL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b9f8881dcc149c39074a70551ad09cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "GWL;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "e26c17ad753148ab9e9fcf3481c50037",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9ba4c23c342040e1a2048c9855578460",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "144e956c220b4e8a9aaf9a87073eba78",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45228b58f4f54684ae8104f9f3677cba",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac7eab8dc8754471985a40c9504fe6c4",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cb8300c1b6f4f4e863d0b6288b37f84",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "270d4bb54fd349a2aaa8a558636976f5",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ad2bd980203244dcb64f1f8d18976673",
          "Name": "VCF",
          "Description": "VCF",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bf730dede244bb68315b9cd640991de",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "VCF;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7b6644a839774948b8029e5c549d783a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "564bb94abe084588acf1ec0819ff93b0",
          "Name": "comm_infos",
          "Description": "comm_infos",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d90ce8c151414c198dad2c47b45f2e05",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "comm_infos;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e549fba3a8a14c7594291a5afce83651",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d5a569ad30f1488982ad237c6164afb9",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99e62a12fbe24cbaa3560642ca3d9da6",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4249a70818b9405996db7a29eafb8a09",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d7804deafd54d52a09455473ab4ad80",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "180375d033094d13ac4980972f3a5294",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nimport math\r\n# Import Dynamo Geometry Library\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import Line, Point\r\n\r\n\r\n\r\ndef find_closed_loops_dynamo(lines):\r\n    \"\"\"Find closed loops from a list of Dynamo Line segments.\"\"\"\r\n    def is_close_dynamo(point1, point2, tolerance=1e-6):\r\n        \"\"\"Check if two Dynamo Points are close within a given tolerance.\"\"\"\r\n        return (\r\n            math.isclose(point1.X, point2.X, abs_tol=tolerance) and\r\n            math.isclose(point1.Y, point2.Y, abs_tol=tolerance) and\r\n            math.isclose(point1.Z, point2.Z, abs_tol=tolerance)\r\n        )\r\n    \r\n    closed_loops = []  # Stores completed closed loops\r\n    source_list = lines.copy()  # Clone the source list to maintain original data\r\n\r\n\r\n    while source_list:\r\n        inspection_completed = []  # List to track inspected lines\r\n        current_line = source_list.pop(0)  # Step 1: Select the first line\r\n        inspection_completed.append(current_line)  # Add it to inspected list\r\n\r\n        # Initialize start and end points\r\n        start_point = current_line.StartPoint\r\n        end_point = current_line.EndPoint\r\n\r\n        while True:\r\n            # Step 2: Find a line that connects to the last end point\r\n            matching_line = None\r\n            for line in source_list:\r\n                if is_close_dynamo(line.StartPoint, end_point):\r\n                    matching_line = line\r\n                    new_start = line.StartPoint\r\n                    new_end = line.EndPoint\r\n                    break\r\n                elif is_close_dynamo(line.EndPoint, end_point):\r\n                    matching_line = line\r\n                    new_start = line.EndPoint\r\n                    new_end = line.StartPoint\r\n                    break\r\n\r\n            # If no matching line is found, break the loop\r\n            if not matching_line:\r\n                break\r\n\r\n            # Update end point and add the matching line to inspected list\r\n            end_point = new_end\r\n            inspection_completed.append(matching_line)\r\n            source_list.remove(matching_line)\r\n\r\n            # Step 3: Check if the loop is closed\r\n            if is_close_dynamo(start_point, end_point):\r\n                # Step 4: Add inspection list as a closed loop\r\n                closed_loops.append(inspection_completed)\r\n                inspection_completed = []  # Reset for the next loop\r\n                break\r\n\r\n        # Step 6: If loop is incomplete, reset inspection list\r\n        if inspection_completed:\r\n            source_list.extend(inspection_completed)\r\n\r\n    return closed_loops\r\n\r\n\r\n\r\n# Find closed curves\r\n#closed_groups = group_closed_curves(lines)\r\n\r\n# Output: List of groups forming closed curves\r\n#OUT = closed_groups\r\nOUT = find_closed_loops_dynamo",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "de1230571d4c4e6f87ab546362e828b2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "047e22f2a0124372be3e2e00dc6f84e4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b52eebcebc2843c89f4eddb6cc6ff373",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "263cac9140d547d8981c3a118cb3eee9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8fd6277ef5e94878a0986d876c707690",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9b308a19d42493da80ca90dbdb16813",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbb1d16091a64fe388037cc36c393be9",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c562f8c5e8ec4ea4a0ee6787dd867f99",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d31b48983d794209af9463e99aa78ae7",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9a53d7f6ad2e4881bb96f69f39a5739b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1bfd24dbee78465a903885390d4c3cf3",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "321d6c65fdc1457bac746fbf05117dcf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "bfa1cd1b7d094ff2b8503be502484af9",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "99fbc826dea34f3d92020c5f5f991b79",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "292e4e138a3c4337997b837072ef4abf",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83b32d83d7ce4efa950969738ade1e58",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9089c121b05c4c89ae81e572c2569dce",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ee63afc1942d4ac5ac308afc40889b2d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "063ad8144f824d0e84093e59e8c1e6ba",
          "Name": "width",
          "Description": "Width of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1e02624f8c140f6b1ec894b50065979",
          "Name": "length",
          "Description": "Length of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "260d47f2efda4fb3a7f5fd16eed0f674",
          "Name": "height",
          "Description": "Height of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bc7e1786bca464ca8221697d540ee69",
          "Name": "Cuboid",
          "Description": "Cuboid created by lengths",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@double,double,double",
      "Replication": "Auto",
      "Description": "Create a Cuboid centered at WCS origin, with width, length, and height.\n\nCuboid.ByLengths (width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b9c5ce2bacfe4557b876fec8afc8be09",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cc5a0070bf10427591d3f1e005176e3f",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e087e2f459544cc0822d99a3f7c91868",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "173e0835a03e40b5a769824330b2be57",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57ed4fa54f4047afb7579fcb05cff565",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[];"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 271,
      "SelectedString": "OST_GenericModel",
      "Id": "d52ca280c18e44f993d186dd0439ef88",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f89d2060c1af471a95238de51edc6076",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "77a72279e9c44aa19b2f8c56697ed09e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e24b46f3499743878a62fa64dc8728fa",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b2c1bdb26c54ce6b4cc9d702bb1a9f3",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c92b2393e2746ffb315387a05c56073",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca502e8cc47840ac9ac027152294cfa5",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6631cd186e274a54a1e822f904e4217b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e617029049fc4d328d93180e3db80a69",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ffd44fdeb3848399e1650a75500d4a4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i[0][0];"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "a9a05c5a4a494f8b99846ace8a15d810",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "366f9faf7e72498aa570161794bbeeb9",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ffa9230fa7843eea5447a5513548426",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6040a82ed935470c8982b6e99759423b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ac453586362c47cea70d1cff951a44dc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "본 토공 물량 산출기는\r\n터파기하단선 작성 → 형상 및 물량 산출의 순서로 이루어집니다.\r\n아래 [0.1] 항목에서\r\n\"A 모드 선택 후 실행 → B 모드 선택 후 실행\"의 순서로 이용십시오."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallElems = IN[0]\r\ngl_elev = IN[1]\r\n# Place your code below this line\r\n\r\ndef getGeoms(elems):\r\n    res = []\r\n    for elem in elems:\r\n        try:\r\n            res.append( elem.Geometry() )\r\n        except:\r\n            pass\r\n    return res\r\n\r\nallGeoms = list(chain(*getGeoms(allElems)))\r\n\r\nget_bottom_elev = lambda geom: go(\r\n    geom,\r\n    lambda x: BoundingBox.ByGeometry(x).ToCuboid(),\r\n    Geometry.Explode,\r\n    filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n    next,\r\n    lambda x: x.PointAtParameter(0,0).Z ,\r\n)\r\n\r\nres = go(\r\n    allGeoms,\r\n    filter(lambda x: get_bottom_elev(x) < gl_elev ),\r\n)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "43da51236c554f2892911db665f03317",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2fa7066550f44285a4400b3e54f78901",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f181d292a9d4272a142f157245dacf9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d383ff4a7aa449c5b86be9cbb4be76c0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a39e2769294846aca79eb664dc6c8c30",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "066359f1451c4bcc8774eb8d8b3c9da3",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3cf75134120453f83444e1a0e00f6a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom datetime import datetime\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n\r\ndef log_with_timestamp():\r\n    timestamp = datetime.now().strftime(\"%Y-%m-%d_%H%M%S\")\r\n    return f\"Backfill shape_{timestamp}\"\r\n    #print(f\"[{timestamp}] {message}\")\r\n# Assign your output to the OUT variable.\r\nOUT = log_with_timestamp()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "58c13f103462428fa2a81ac37b600bbe",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cc963243e89f44aa87e4d817c4b61e0f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdd9e4a64f574b56b42e10e4450253bf",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5cd0fe084b6c45c7b30dad8722678f44",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9dd370b4036d4833afdcc644207f61f8",
          "Name": "c2",
          "Description": "c2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dd1c3b0dd84416785fb036c71f8d6ea",
          "Name": "c1",
          "Description": "c1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c84c32030dd24be4b4dd652cb0e8b0d3",
          "Name": "c3",
          "Description": "c3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cfc14c75d0e84ffebf42847d9347038a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\nc2/c1,\nc3/c1\n];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2185322479c649f08325dd489fa32d78",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e847a376b8664723ab3dca09e70068e6",
          "Name": "c3c2_ratio",
          "Description": "c3c2_ratio",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "245c1798a0f941789373d4caffa30e9a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c3c2_ratio;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8fed588f7a1742c9972ef418e103bdc3",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "0a442860d9f44528b5523b98716c6f51",
          "Name": "c3c2_ratio",
          "Description": "c3c2_ratio",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd82bfc592874480b00df10d21a5138d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c3c2_ratio;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f429b08a14c04cde8d72ef4f686342d8",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "bbec63fd044e48d3a86f6949cb3c5e7e",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eedf59a492d747979d6e69fb77301474",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\ni[0],\ni[1],\ni[2],\ni[3],\ni[4],\ni[5]\n];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5cd176d3073d4d0c880842516e91f263",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "7a8f2d1227da430c95b29191445dca67",
          "Name": "c1_c4",
          "Description": "c1_c4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0b47aad55d04a7f9719771fe5c7e08f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c1_c4;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "30707940c6b74d129abc0e9b09a32bb9",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "2984a83c7a1a4235baa507a50f2e069e",
          "Name": "c1_c4",
          "Description": "c1_c4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "303455cc3802440b9aefd550619eb969",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "c1_c4;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0d16e9ca63ff4ceea8ba6761a216a6df",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d90cfaf687642ceba87d67d6e7276f2",
          "Name": "Point",
          "Description": "Project Base Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Coordinates.BasePoint",
      "Replication": "Auto",
      "Description": "Get Project Base Point\n\nCoordinates.BasePoint ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "212e7a74f661403fb6deb65b906479eb",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f0bfb08e6e14afd9c0a7187987f54e8",
          "Name": "Point",
          "Description": "Survey Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Coordinates.SurveyPoint",
      "Replication": "Auto",
      "Description": "Get Survey Point\n\nCoordinates.SurveyPoint ( ): Point"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "281a358e91934df0870b45472292d905",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "251fd819aa394d168f423af387fb89c3",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbb3608967d04d5994804b6b4ecfb4e3",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ec11c18f678c4f8f99dc481fb4d3c40b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab8796ea772f491b9ecc8d59fb1478fc",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "530623bdd91a44d7ada3be63ececd806",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4f8fb184ad64df1a4d91584eaa9aaca",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ff87fc3eeb124eebb47401a4a301662c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f79d4f26b78a4892b463611aa27a299a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Detail Line\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d7fe458ad2dd443bb255b7751bd49d03",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c4982846340f40cea71cb027ab17135e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6a88fb00ae6456eae65fc8efa96c86a",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2a996b70a4f4a7da749af01ea8f3049",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f64d7b9d06044988a6ac27b6eeb7e7bd",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0438b09fd7af4ddf972c9fbd2e335670",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1798cc94649b4ebe86d05a357539463b",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1124d06318ad4caaacfccf6dd28f181b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "i==0?true:false;"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 302,
      "SelectedString": "OST_Lines",
      "Id": "6a159a3c85e54828a8a5454c6416ad29",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6f5f9c037bfc4f90ba47f7aa0d9385a0",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n#clr.AddReference(\"Revit.GeometryConversion\")\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n#import Revit.GeometryConversion #import ProtoToRevit, RevitToProto\r\n#from Revit import GeometryConversion\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\nmodel_lines = IN[1]\r\n\r\n#########################################################################\r\ndef get_QGeometry(elem):\r\n    # Revit Document 객체 가져오기\r\n    doc = DocumentManager.Instance.CurrentDBDocument\r\n    revitElement = UnwrapElement(elem)\r\n    \r\n    # Geometry 가져오기 옵션 설정\r\n    geometryOptions = Options()\r\n    geometryOptions.DetailLevel = ViewDetailLevel.Fine  # 세부 레벨 설정 (Fine, Medium, Coarse 등)\r\n    geometryOptions.IncludeNonVisibleObjects = True    # 비가시 기하학 포함 여부\r\n    \r\n    # GeometryElement 가져오기\r\n    #geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n    geometryElement = revitElement.get_Geometry(geometryOptions).ToProtoType()\r\n\r\n    # Geometry 변환 리스트 초기화\r\n    dynamoGeometries = []\r\n\r\n    # GeometryElement 내의 GeometryObject 순회\r\n    for geomObj in geometryElement:\r\n        # Revit GeometryObject를 Dynamo Geometry로 변환\r\n        dynGeom = geomObj#.ToProtoType()\r\n        #dynGeom = Revit.GeometryConversion.RevitToProtoSolid.ToProtoType(geomObj)\r\n        if dynGeom:\r\n            dynamoGeometries.append(dynGeom)\r\n    \r\n    return dynamoGeometries\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Rooms,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_EdgeSlab,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    \r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def get_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def get_ug_elems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_ug_cols():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n        \r\n    def get_ug_frames():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            filter( lambda x: \"UG\" in x.LookupParameter(\"Family and Type\").AsValueString() ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    def get_railElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n        \r\n    def get_genericModels():\r\n        x = Autodesk.Revit.DB.BuiltInCategory.OST_GenericModel\r\n        collector = FilteredElementCollector(doc)\r\n        allElems = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        res = go(\r\n            allElems,\r\n            #filter( lambda x: DSCore.Object.Type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            #filter( lambda x: type(x)!=\"Revit.Elements.DirectShape\" ),\r\n            filter( lambda x: \"Backfil\" in x.Name ),\r\n            list,\r\n        )\r\n        return res\r\n\r\n    res = get_genericModels()\r\n    \r\n\r\n    return res\r\n\r\n\r\n# Place your code below this line\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"토공객체삭제모드\":\r\n    OUT = get_allElems(doc) + model_lines\r\nelse:\r\n    OUT = []",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8d7c299df46e41d8ae576c88cb75da4a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "acc46becd8b34dd3b936b8a8e38ce80a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe586b75465c4fcebce8d2cdcd0f5d88",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a28ee4b1a6b646ae9d565ef9cfe1774b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "57eefe1c8834403f9de366ebff03fcb2",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "84f2dd1531554bdf8a66946bdfe582ea",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "796a04602b534799b68356b144a2c061",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6f96e9b87b094550b9382d8332875fe1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e00e9c9dcfb74b20b17a4c363ffd3266",
          "Name": "element",
          "Description": "The element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdd559154e0642a79f207295e4d4eae3",
          "Name": "int[]",
          "Description": "The list of element id's deleted, including any dependent elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Delete@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Delete the element and any elements that are totally dependent upon the element.\n\nElement.Delete (element: Element): int[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsolids = IN[0]\r\nis_boundMode = IN[1]\r\n# Place your code below this line\r\n\r\n\r\n\r\n\r\ndef union_solids(solids, is_boundMode):\r\n    union_obj=None\r\n    if is_boundMode:\r\n        for idx, sol in enumerate(solids):\r\n            if idx==0:\r\n                union_obj = BoundingBox.ByGeometry(sol).ToCuboid()\r\n            else:\r\n                try:\r\n                    bounding_sol = BoundingBox.ByGeometry(sol).ToCuboid()\r\n                    union_obj = union_obj.Union(bounding_sol)\r\n                except:\r\n                    pass\r\n    else:\r\n        for idx, sol in enumerate(solids):\r\n            if idx==0:\r\n                union_obj = sol\r\n            else:\r\n                try:\r\n                    union_obj = union_obj.Union(sol)\r\n                except:\r\n                    try:\r\n                        bounding_sol = BoundingBox.ByGeometry(sol).ToCuboid()\r\n                        union_obj = union_obj.Union(bounding_sol)\r\n                    except:\r\n                        pass\r\n    return union_obj\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = union_solids(solids, is_boundMode)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "08d0f488c7854199adb84275345e5cbe",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "abb21a5ef9ca46e586729c4cf8eff6f0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ad42d5aa7ab4086a512f9045d0ab0bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f7a186800434de6aceafd9586782707",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\n\r\n\r\nres = go(\r\n    elems,\r\n    #lambda x: list(chain(*x)),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7b4591957ea448b9a4bcab5bff0804b7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b0d42f6d90f54421a9b6a7b56452f162",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6ac2fd052ed48ffb154d88432ade61d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a42b83dfbcc449338f58bb7d5fa4a760",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d940f073111349cd91a05c5b5747b3d2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3b8c7e3507d4055a565cd0b0104df39",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "87a41f68533c4439b53c42e8b858b149",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9011fcd1c3c94c51ad6c14d7b4fbb44e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0a2c12ca26ec432db86db9dd83ee215d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "d6794e90247b43b7beb49f2bed7dac4a",
          "Name": "is_boundMode",
          "Description": "is_boundMode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f27832850ef4f5096b0f2b4d89a3f50",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "is_boundMode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "597f70847fad44a89638e546e997cb67",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "fdac6a60caee4b1cab05c4613f543a37",
          "Name": "is_boundMode",
          "Description": "is_boundMode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff768f82693e464a87f9eaf5c352a9ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "is_boundMode;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "155339af74384d7dbbda283a9a402501",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a05e590bc94a4498833a99c609839dbf",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f609517cbb5a468298c07efd968765c1",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Lines\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Railings\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Doors\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Windows\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Curtain Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash Block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Stairs\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Void\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"void\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0c02c0acd77442e7bef9a06cea64c7f4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5a1118e087f7442992993c7cd224f5aa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efb005de89d94cf1b90dee5eae8ee39d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "60644640b4a8411ea3a6d07603dbcdca",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a6527724034c4c2b957ef6947d638b38",
          "Name": "filtered_target",
          "Description": "filtered_target",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cd828ae85d3486696711e228cc66818",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "filtered_target;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"_Ground Insulation\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Slab Edge\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Edge\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5cf59c31abf246da8869b0e12128f6c6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1566b3b8aa664b79bdfd44ee62d5d75e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48b8615484bf4aabafd1935d0f196b7d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Document and UI setup\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexca_res = IN[0]\r\nc1_d2 = IN[1]\r\n# Place your code below this line\r\nif exca_res != [[[]]]:\r\n    c1,c2,c3,c4,d1,d2 = c1_d2\r\n    \r\n    backfill_solid, disposal_solid = exca_res[0]\r\n    members_btmThicken = go(\r\n        disposal_solid,\r\n        Geometry.Explode,\r\n        filter( lambda x: x.NormalAtParameter(0.5,0.5).Z==-1 ),\r\n        map( lambda x: x.Thicken(sum([c1,c2,c3,c4])*1000, False) ),\r\n    )\r\n    res = members_btmThicken\r\nelse:\r\n    res = 0\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "870b4fa4ab744dffab07c4a0ba58ed36",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "551004823e144e7aa8d57ff72fd1b203",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a92e7565f3ba450884ef78603ea21745",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5a1319c42fe40c1b4d7f8a192d1a1cb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelems = IN[0]\r\n# Place your code below this line\r\nres = go(\r\n    elems,\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Lines\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Railings\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Doors\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Windows\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Curtain Wall\" not in str(x.GetParameterValueByName(\"Category\")) ),\r\n    filter( lambda x: \"Line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"line\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"Point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"point\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_pile_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Lean_\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash Block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_Splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n    filter( lambda x: \"_splash block\" not in str(x.GetParameterValueByName(\"Family and Type\")) ),\r\n)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5268bcfd640743249f40e9ffbd974618",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "fa0fa9cb3300408094443bf0a8f4de43",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d599de0a7cd4a14aaa0ed0227bbdb9f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7c9fce77c27c45f082e1e04926c84aa2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c88f3e3c2d774e72a879ff760d9e06f5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "777e5cb073c04b9a84c80180404131a5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bef95d7b612432fbe6cf1aacec96c8e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7ccbe229ea2f4e67ac88e34f3428db97",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "547fb99b1e1d404b90d5bddb3db1f1ac",
          "Name": "gl_elev",
          "Description": "gl_elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f13141cef7a04f84ab2f95090eeafd69",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "gl_elev;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ea612841e668431b9174f30c9aa64a7c",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "6ab85c1c0778430cb0588003d0ece491",
          "Name": "GL",
          "Description": "GL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cd1a62f69c940f6a1cc9b73890fbbfd",
          "Name": "BP",
          "Description": "BP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb7fe37bef604a2ba7279811a8ed09ee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "GL + BP.Z;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a8e139c6526b46038f81b3a14f02b82f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b0469036434143b983f3e855ac3627b8",
          "Name": "socket",
          "Description": "socket",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a313d695e9804025b92829bb2c100467",
          "Name": "sp_Z",
          "Description": "sp_Z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "702361fe72834d39a135b1a7f9ab0ea8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "socket + sp_Z;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0790983701cb45debd75ce48bdffe628",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "4c700999c699495b9c85647e153b7907",
          "Name": "pjtBP",
          "Description": "pjtBP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77a5e945dd0045efad8be8ae1a4ec5d9",
          "Name": "GL",
          "Description": "GL",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a62feadab3a48ac9bf15e875884a062",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "pjtBP.Z - GL;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nGL_elevation_prime = IN[0]\r\npjtBasePointZ = IN[1]\r\n# Place your code below this line\r\n\r\nif GL_elevation_prime - pjtBasePointZ < 100:\r\n    res = GL_elevation_prime\r\nelse:\r\n    res = GL_elevation_prime + pjtBasePointZ\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "504336eb80f54af49ca6a2c46b27bb5f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2c3439dd52a44f5e8ff57d8b5f66ca87",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54256426ab8a4e6b80ba7888601e7c54",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b16c40727324f3ea6103e74cf9afe8d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "94c794e0087e46c484b12349e4394817",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ca1b7103b6d8427fbad97f0084369b53",
          "Name": "BP",
          "Description": "BP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b92adbe59055457ca88c5e223e484b09",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "BP.Z;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport datetime  # For timestamp\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Revit Services와 DocumentManager 추가 (Revit API 접근)\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\n\r\ncurry = lambda f: lambda a, *args: (\r\n    f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a, f: f(a), args)  ## 함수도 축약 가능 ##\r\n\r\n\r\ndef dictUpdate(dic1, dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n\r\n\r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n\r\n\r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\n\r\ndef update_nested_dict(dictionary, keys, value):\r\n    current_dict = dictionary\r\n    for key in keys[:-1]:\r\n        current_dict = current_dict.setdefault(key, {})\r\n    current_dict[keys[-1]] = value\r\n\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a:\r\n            yield from flat(i)\r\n    else:\r\n        yield a\r\n\r\n\r\ndef grpBy(iter, key):\r\n    f, grpKeys, grps = key, [], []\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_, key=f):\r\n        grpKeys.append(key)\r\n        grps.append(list(grp_data))\r\n    return grps, grpKeys\r\n\r\n\r\n#########################################################################\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexec_mode = IN[0]\r\ndata = IN[1]\r\n# Place your code below this line\r\n\r\n# 저장할 파일 경로 설정 (경로는 사용자에 맞게 수정)\r\n# 현재 열려있는 Revit 문서 가져오기\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# 파일 경로 가져오기\r\ntimestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n# 리스트를 텍스트 파일로 저장\r\nfolder_path = \"\\\\\".join( doc.PathName.split(\"\\\\\")[:-1] )\r\nmodeling_name = doc.PathName.split(\"\\\\\")[-1].split(\".rvt\")[0]\r\nfile_path = folder_path + \"\\\\\" + modeling_name + f\"_토공산출결과_{timestamp}.txt\"\r\n\r\ndef save_txt(file_path, str):\r\n    try:\r\n        with open(file_path, \"w\", encoding=\"utf-8\") as file:\r\n#            for item in data:\r\n#                # 리스트 항목을 문자열로 변환하고 줄바꿈 추가\r\n#                file.write(str(item) + \"\\n\")\r\n            file.write(str + \"\\n\")\r\n        OUT = \"파일 저장 성공: \" + file_path\r\n    except Exception as e:\r\n        OUT = \"파일 저장 실패: \" + str(e)\r\n\r\n# Assign your output to the OUT variable.\r\nif exec_mode == \"물량산출모드\":\r\n    str = go(\r\n        data[1],\r\n        map(lambda x: \": \".join( map(lambda y: str(y) , x) ) ),\r\n        lambda x: \"\\n\".join(x),\r\n    )\r\n    \r\n    save_txt(file_path, str)\r\n    OUT = \"txt 파일 저장됨\"\r\nelse:\r\n    OUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8f341677c0b24803bab60fc279f83147",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b647ec80a5d94670aa3f091dcff621a0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "889409699266443691fc587fbd4a77e6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "596f10e0940e4dc7824e758608fc76a2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f4bfc98c8f8247b2ba14022942b36299",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "534bfa849bd440b990a61f119fe49ccd",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5b89898071949c0a01540c82a89c79f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "292eb0266a724e5da49ba36d9dd1bd8d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a7695d0844b84cbbb1302d3c44d2c188",
          "Name": "exec_mode",
          "Description": "exec_mode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76791f417f0e4b51a87e489f6e09e21d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "exec_mode;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# 필요한 모듈 불러오기\r\nimport clr\r\nimport datetime  # For timestamp\r\n# Revit Services와 DocumentManager 추가 (Revit API 접근)\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# 현재 열려있는 Revit 문서 가져오기\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n# Generate current timestamp (format: YYYYMMDD_HHMMSS)\r\ntimestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n# 파일 경로 가져오기\r\nfolder_path = \"\\\\\".join( doc.PathName.split(\"\\\\\")[:-1] )\r\nmodeling_name = doc.PathName.split(\"\\\\\")[-1].split(\".rvt\")[0]\r\nfile_path = folder_path + \"\\\\\" + modeling_name + f\"_토공산출결과_{timestamp}.txt\"\r\n\r\n# 경로 출력\r\nOUT = file_path\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3fbe28bfdec440dcbc86418f4ede92c7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9caabdf1cfa94f0fb220bd1d3a3f1238",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "982dc2c7a0944bc6836f58f05f0388c6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5ea6f63a85214a819ddf81e53e3583cf",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ae1925bc79664d6cb5b3c424f2e98b6a",
          "Name": "SP",
          "Description": "SP",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7ce9044256040dcb0fdaef88be0ab8e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "SP.Z;"
    }
  ],
  "Connectors": [
    {
      "Start": "9d20cfd9d2a1412682ce473b6c53184b",
      "End": "95834993dfdf44c89ec70be7a7f38d0d",
      "Id": "a574c86e078640e2aa79eb0c0e556745",
      "IsHidden": "False"
    },
    {
      "Start": "9d20cfd9d2a1412682ce473b6c53184b",
      "End": "b62474dfd8ce4cd68e328c6a8656e273",
      "Id": "c4efc312c3c443038f2066c503ba1294",
      "IsHidden": "False"
    },
    {
      "Start": "d1d85b857e7d478091be46b8877402fe",
      "End": "0d164630c6674771a6691546aed10994",
      "Id": "22de8c124b234d58b2e6f50ed06e74bd",
      "IsHidden": "False"
    },
    {
      "Start": "d1d85b857e7d478091be46b8877402fe",
      "End": "c4155e71568b4830881ccdff683294ca",
      "Id": "fad57e77919645c3b0081dfe63cfd1ab",
      "IsHidden": "False"
    },
    {
      "Start": "d1d85b857e7d478091be46b8877402fe",
      "End": "59f35d04a34b411eb9e0f713fcfd011f",
      "Id": "525ee594f1d846f0bbb6cf03d606ca19",
      "IsHidden": "False"
    },
    {
      "Start": "9fa0bd071cc44f71b3241d55d2fb95b1",
      "End": "9ae4aa8174f243c6bf15328d874ec55f",
      "Id": "a9d07782dce143a6a874bec2f2ef38da",
      "IsHidden": "False"
    },
    {
      "Start": "9fa0bd071cc44f71b3241d55d2fb95b1",
      "End": "de4511e34b1e4eee93387b7a4f3ded1b",
      "Id": "55e3f4444acb436c876bd569d208adf0",
      "IsHidden": "False"
    },
    {
      "Start": "9fa0bd071cc44f71b3241d55d2fb95b1",
      "End": "b244d15a50d3405ea72302e60993e008",
      "Id": "f8142c767a83405f99a045181dcf73ae",
      "IsHidden": "False"
    },
    {
      "Start": "52de29af188b40b58991a6c96405c633",
      "End": "c8f8392b424341519504d4b3da00a6ba",
      "Id": "7adae16d2f5440aa878198c499336051",
      "IsHidden": "False"
    },
    {
      "Start": "be16dfbdf9be4a19832ee1e59b83fcb7",
      "End": "ac29465613bd482fa6f98e8743c754ca",
      "Id": "6ab8af6001344d479e777282a738ca34",
      "IsHidden": "False"
    },
    {
      "Start": "057fe81754df4e1c86feda9aa5fdba9a",
      "End": "dfe5ea2062134c91ba2ef9d3de1b9cbf",
      "Id": "e7846a8c21874099827adc040bf8fbbd",
      "IsHidden": "False"
    },
    {
      "Start": "810ea229c08b4624995fa89dd5ef085b",
      "End": "c28601f156a641af8fe328768a9543cc",
      "Id": "965534610c844e869070f88447aef3a4",
      "IsHidden": "False"
    },
    {
      "Start": "906352ffaebd4462b2df3faed4fe4f60",
      "End": "ac7ef79b661944419f83db8aa512b8dc",
      "Id": "bb47a79837ac49c0a3418794f5fe1ff5",
      "IsHidden": "False"
    },
    {
      "Start": "906352ffaebd4462b2df3faed4fe4f60",
      "End": "333c9512c51a4ccd9345ea3a298069dd",
      "Id": "6be4c595b8714cbd8448fac77628fa11",
      "IsHidden": "False"
    },
    {
      "Start": "f27d4903409c435ab66415b8319a3e9d",
      "End": "65044fc2f2424dab86937479bef182b8",
      "Id": "679ca4f8f19441cbac6cadce8afb9ad2",
      "IsHidden": "False"
    },
    {
      "Start": "24fe1a2cd3234642bb321550b557a5cb",
      "End": "d36f4f37829c4a06940d87cc720a14e7",
      "Id": "914ea585bd044e4886ce3c8dfea519b5",
      "IsHidden": "False"
    },
    {
      "Start": "ac59c7b278ea4aff8689ed1a6615fc10",
      "End": "5a1118e087f7442992993c7cd224f5aa",
      "Id": "9ef7d088908d4590b74682cee50faded",
      "IsHidden": "False"
    },
    {
      "Start": "9309eda99c6445ddabbb33819953e2b3",
      "End": "980d29d191e24c359b820242222ad14d",
      "Id": "5727e8d2dfe741b7878df55c8a39e995",
      "IsHidden": "False"
    },
    {
      "Start": "9c566c8fc3804ba69be5481fc03e6cfd",
      "End": "28d4e2e8bd334488afd8ec5ec8952902",
      "Id": "a39a23bb643544779d7655ea1813a7b8",
      "IsHidden": "False"
    },
    {
      "Start": "b0854b43957e4a51b38d0e1b107acae0",
      "End": "e52c9f2c60434034a400f74526a939a2",
      "Id": "01f815dbd2a84bfbbc67cf2e563137a0",
      "IsHidden": "False"
    },
    {
      "Start": "9fc29f4dd1f54d04a9aa2d84fef84325",
      "End": "cf41cb4e438048d5a643b53478b8c2d6",
      "Id": "c7fa56f11df3456c9d1e9ece8e6f1b11",
      "IsHidden": "False"
    },
    {
      "Start": "0449558db480429e93c3e5c6fb805ad7",
      "End": "a27692fbf48d4efa88f3a4ed2e0e4053",
      "Id": "c1a6dc9fbd4d43759c038dcef49d2b9b",
      "IsHidden": "False"
    },
    {
      "Start": "96836be7a0da4af7ad7dc9d10f3816ac",
      "End": "722621a8cffd47f697c6e5b5f25f2b5e",
      "Id": "327d56589f354055a6b4cd1888812448",
      "IsHidden": "False"
    },
    {
      "Start": "5d5722d2c77841ca92f918186e3f1cf1",
      "End": "08830621fd33491ebaa94ad78d131012",
      "Id": "b8a7a92f21ba4f0db57bda5fb7dd3511",
      "IsHidden": "False"
    },
    {
      "Start": "03873713d2d243c7b7bd849159714295",
      "End": "061d205c835f4150837598857ff18677",
      "Id": "bff13f84ea71496c9ca393378251998a",
      "IsHidden": "False"
    },
    {
      "Start": "c134bea4ff3f4fa6975aa585f66663d9",
      "End": "5e7f4639d379438296c7c9ab72a4e2a3",
      "Id": "74cb9e6d7c0541339052701efdc2f9e4",
      "IsHidden": "False"
    },
    {
      "Start": "a98af5beea094aa0a3a365d9c3e764a0",
      "End": "af540f1b4e1e4abd806765a8770d0240",
      "Id": "10c6b5b90ce847b3a6f485685ed04c09",
      "IsHidden": "False"
    },
    {
      "Start": "8e922d85c1a1411ab9b386203a434464",
      "End": "982f768820174889a738f9ab0a6bfe8e",
      "Id": "60538c4f4a5b46ba90d459d2008995cc",
      "IsHidden": "False"
    },
    {
      "Start": "3c977062ff3b4bf2996b2d6039d1fc40",
      "End": "45f1e01a477f4cf58e78e18bf4db9448",
      "Id": "5eb0f6a1daba4a13a62eff698d739571",
      "IsHidden": "False"
    },
    {
      "Start": "bf7c85c0dfe94edbbcbcb5d74e06e610",
      "End": "4140c31f7523452a9fa75c3d7304d2e0",
      "Id": "70df0a4f1f0b4044a394e7eb4f380898",
      "IsHidden": "False"
    },
    {
      "Start": "bf7c85c0dfe94edbbcbcb5d74e06e610",
      "End": "b19efeea56b94780b857442218c585f2",
      "Id": "37e35232c50f4774a5ee6b7c30efc0b8",
      "IsHidden": "False"
    },
    {
      "Start": "bf7c85c0dfe94edbbcbcb5d74e06e610",
      "End": "4128780dd76a4a9ab7c53f58cb91be4c",
      "Id": "ce6519e13bc34c25abe247ac69794b10",
      "IsHidden": "False"
    },
    {
      "Start": "b963c06f63184cb4a22429992aa31db3",
      "End": "ade0eefd687c4bad9a2eb3f2da23679d",
      "Id": "9057858ff23741e982ac023a89f03979",
      "IsHidden": "False"
    },
    {
      "Start": "fdc6827d67894112b55a17cca3fed3d6",
      "End": "e512591d32174a12863e417abfd0d6a0",
      "Id": "1f07161da9a74fe0a63fa30b88c99a5f",
      "IsHidden": "False"
    },
    {
      "Start": "557c7def07a0454f9cf3b80f2d8457cc",
      "End": "2da86effb7b64384a9f44f49c8aae6c2",
      "Id": "e02fa9cce03f48b7b18f782600d8a178",
      "IsHidden": "False"
    },
    {
      "Start": "646da640e791436b9e676def7f197946",
      "End": "a1c4193c62ec411fbe91925404122753",
      "Id": "6b243174b8144819ab09c962de38c9fc",
      "IsHidden": "False"
    },
    {
      "Start": "646da640e791436b9e676def7f197946",
      "End": "9d7804deafd54d52a09455473ab4ad80",
      "Id": "1efa851cbff847e69999337d1e83a3c1",
      "IsHidden": "False"
    },
    {
      "Start": "79e53e16f8694521a9c1447937335a31",
      "End": "7d7e93c10cea45c79fb97bdd59295f20",
      "Id": "31882083caf04b9da8a555c95607173d",
      "IsHidden": "False"
    },
    {
      "Start": "95b5d68c9a764d089acfbc245c17294a",
      "End": "76082dbfceaa48c184a3862515808afd",
      "Id": "9b704195ef3c4b6c9abafbc44f19ef84",
      "IsHidden": "False"
    },
    {
      "Start": "dfa4524ea7284ca3b012023e85a63031",
      "End": "6ab85c1c0778430cb0588003d0ece491",
      "Id": "ff17f62efed54567b810a83b7608adc4",
      "IsHidden": "False"
    },
    {
      "Start": "dfa4524ea7284ca3b012023e85a63031",
      "End": "77a5e945dd0045efad8be8ae1a4ec5d9",
      "Id": "2dca6ce746844f49867b755a119fc62b",
      "IsHidden": "False"
    },
    {
      "Start": "dfa4524ea7284ca3b012023e85a63031",
      "End": "2c3439dd52a44f5e8ff57d8b5f66ca87",
      "Id": "a87f3cec609a47e4b9ef3e96f107918e",
      "IsHidden": "False"
    },
    {
      "Start": "1c77b970fb9549f2b6cbe88b4c7e9c11",
      "End": "3dc830b4f1fd469cb3d390236468d7db",
      "Id": "6f34cf5f8adf473b899d94edb95eeb85",
      "IsHidden": "False"
    },
    {
      "Start": "68488badc20e49648613793634544f42",
      "End": "5d1db244d6d14d36aec2f43a3114d4a2",
      "Id": "6308af9fcbfd43a79e699dc561cde264",
      "IsHidden": "False"
    },
    {
      "Start": "282392fad3304099b9758a347ed8a8c5",
      "End": "fa3eacad04b04a3a966bfb02469776e4",
      "Id": "519db425943a4a019d9e08ab15eaf609",
      "IsHidden": "False"
    },
    {
      "Start": "e9aac8ef1a874411982cee6c4f12fe0d",
      "End": "ac7eab8dc8754471985a40c9504fe6c4",
      "Id": "8a652ae0ec7441ed85a64f57d6e1a69e",
      "IsHidden": "False"
    },
    {
      "Start": "e27458bab3f24c76b14aa032282f33b3",
      "End": "45228b58f4f54684ae8104f9f3677cba",
      "Id": "fb5632ad432f43d787c346621f2e7247",
      "IsHidden": "False"
    },
    {
      "Start": "77451183d8844e38b1f08ca466dbb2f2",
      "End": "15ba494c217c40b9ad711fddbe5ff745",
      "Id": "3508422a6d484439a53a9741a32e0025",
      "IsHidden": "False"
    },
    {
      "Start": "952c3a7f9e1e43379adf1a6992042e4f",
      "End": "fa2db91d4c7c441b93dbeb54c43c6d78",
      "Id": "d093eac1870f49ff93f9e319e0a4aadb",
      "IsHidden": "False"
    },
    {
      "Start": "a866d833892b46e7abb4de3b59e307c2",
      "End": "2fac04ed0dff41f8a60db925de32d4fa",
      "Id": "12ca42933208400fbab4234df7154b92",
      "IsHidden": "False"
    },
    {
      "Start": "a866d833892b46e7abb4de3b59e307c2",
      "End": "bbec63fd044e48d3a86f6949cb3c5e7e",
      "Id": "24c4bda5c0d34d94a56fc8b2cac11367",
      "IsHidden": "False"
    },
    {
      "Start": "a1b824ecac7c47399fae21ce6c412a60",
      "End": "486f40831b9d470986648abada5b65d6",
      "Id": "1a4bdfd965e3415096b4ed878e784a57",
      "IsHidden": "False"
    },
    {
      "Start": "a1b824ecac7c47399fae21ce6c412a60",
      "End": "0dd1c3b0dd84416785fb036c71f8d6ea",
      "Id": "82d0f29a9cb7423dbc4cd78ab710821b",
      "IsHidden": "False"
    },
    {
      "Start": "5be6c4217fb14f5f98c0f991d5bcd1af",
      "End": "899d5a8197104764afb0147a1bceeb7e",
      "Id": "0134a497dfae476fa7d8c0e509129a64",
      "IsHidden": "False"
    },
    {
      "Start": "5be6c4217fb14f5f98c0f991d5bcd1af",
      "End": "c84c32030dd24be4b4dd652cb0e8b0d3",
      "Id": "cd1141f03d4a4cfa9582df15f6164030",
      "IsHidden": "False"
    },
    {
      "Start": "a5e1daa10db34268ae424463e26d6def",
      "End": "788c7390f38b4710b025a6e742755ab2",
      "Id": "1a3581d9ce954ab0af5b48b1d4beac26",
      "IsHidden": "False"
    },
    {
      "Start": "a5e1daa10db34268ae424463e26d6def",
      "End": "9dd370b4036d4833afdcc644207f61f8",
      "Id": "436da9b4b63e4345972e9a4345b401e0",
      "IsHidden": "False"
    },
    {
      "Start": "65127c6ec8d4406887c716c71eddf16a",
      "End": "e58e2381bb8144ddb5419691ec36dfa4",
      "Id": "14e0bf00d6fd4e198487f920518b5c46",
      "IsHidden": "False"
    },
    {
      "Start": "fe02f83fda3a4290bd6a20a532f032fb",
      "End": "afec17263b3748268ba56525793a8fbf",
      "Id": "31d507f931c74de29aeacee612ae369c",
      "IsHidden": "False"
    },
    {
      "Start": "916e961e923a45f491428cd033a8e672",
      "End": "4f3ad879f22749a9ba63aebff5fccea1",
      "Id": "f26e7fc11f0e4ccb98b603fca762d1d0",
      "IsHidden": "False"
    },
    {
      "Start": "c52a231866114079afc4282e74eaf842",
      "End": "4d905f133182440687864f8b39940d64",
      "Id": "a0dd854554d94e04badf98a2f3c6eb22",
      "IsHidden": "False"
    },
    {
      "Start": "c52a231866114079afc4282e74eaf842",
      "End": "70741d1ad80b43f18db33b4563c4e6ca",
      "Id": "1431419a6bb9442f827a78e9e94a49be",
      "IsHidden": "False"
    },
    {
      "Start": "c52a231866114079afc4282e74eaf842",
      "End": "84f2dd1531554bdf8a66946bdfe582ea",
      "Id": "fc3ca7aefadd4abf959a705c24a3d492",
      "IsHidden": "False"
    },
    {
      "Start": "c52a231866114079afc4282e74eaf842",
      "End": "534bfa849bd440b990a61f119fe49ccd",
      "Id": "62318b213ca14d07a80c0ac6e0823aae",
      "IsHidden": "False"
    },
    {
      "Start": "c82450fef44b47cf8f041e4105f515fc",
      "End": "c9634c885a964762b7ec9bc942965bf2",
      "Id": "84c876b39c9b4eb98166285f2686e64b",
      "IsHidden": "False"
    },
    {
      "Start": "ba7a775e4ad44bd4bf63c158065df0f0",
      "End": "ad2bd980203244dcb64f1f8d18976673",
      "Id": "44d6ac12f48b40a3abc41e0f910c6ae0",
      "IsHidden": "False"
    },
    {
      "Start": "145a0c642c904289887dcc0c6841d34e",
      "End": "107f9e83911f47549f090965adf30ae2",
      "Id": "1f796950bd7e415c9d2574889bf722f5",
      "IsHidden": "False"
    },
    {
      "Start": "731d114e8cb340f2ae982f6044dc37ae",
      "End": "21bec21de85046caa92ea991230f688e",
      "Id": "b78cac31e15345a681f7edbbec6fdcfa",
      "IsHidden": "False"
    },
    {
      "Start": "4d7ecb8284d7402fb0c59e52af318432",
      "End": "366f9faf7e72498aa570161794bbeeb9",
      "Id": "10e0c304f65748e0bacadb9cda98c5ef",
      "IsHidden": "False"
    },
    {
      "Start": "4d7ecb8284d7402fb0c59e52af318432",
      "End": "e617029049fc4d328d93180e3db80a69",
      "Id": "9a8bd4dac5974c809b5b1a61d2944b0b",
      "IsHidden": "False"
    },
    {
      "Start": "4d7ecb8284d7402fb0c59e52af318432",
      "End": "551004823e144e7aa8d57ff72fd1b203",
      "Id": "de5a9bcb9dcd49b49c54fd8f83d431d1",
      "IsHidden": "False"
    },
    {
      "Start": "4d7ecb8284d7402fb0c59e52af318432",
      "End": "889409699266443691fc587fbd4a77e6",
      "Id": "bc5a454b196d423ca2053839c875989a",
      "IsHidden": "False"
    },
    {
      "Start": "e28569b87b4d4353ad09451af14aeb6c",
      "End": "d940f073111349cd91a05c5b5747b3d2",
      "Id": "95981e87ed7e49068a1a9188782347c5",
      "IsHidden": "False"
    },
    {
      "Start": "e28569b87b4d4353ad09451af14aeb6c",
      "End": "c88f3e3c2d774e72a879ff760d9e06f5",
      "Id": "1bfe82ec609e46faa423ac96e2297d0a",
      "IsHidden": "False"
    },
    {
      "Start": "7dd996477d434a4d8b243e577514872d",
      "End": "f87682dc5990477b96cfe19d54245212",
      "Id": "ad9d79e3c1254495aff23c03d0134b5e",
      "IsHidden": "False"
    },
    {
      "Start": "7dd996477d434a4d8b243e577514872d",
      "End": "2fa7066550f44285a4400b3e54f78901",
      "Id": "764d2cf9b167431db387afb71c67d174",
      "IsHidden": "False"
    },
    {
      "Start": "e9593892c7d9478ebcd5be8624b88145",
      "End": "8c175b4b034a427fb438f7052bc58eac",
      "Id": "02179bd6b58d4f1bb17c98d2d5dc68cf",
      "IsHidden": "False"
    },
    {
      "Start": "e9593892c7d9478ebcd5be8624b88145",
      "End": "1bfd24dbee78465a903885390d4c3cf3",
      "Id": "e02ad12a4efd4bbc891dac415569d34c",
      "IsHidden": "False"
    },
    {
      "Start": "61cf8573bcd2443cb2666f042c4cc87b",
      "End": "c2c948173c6f4aeb817c250ff2353708",
      "Id": "80195b53a73c4fedb29290ae3900ca21",
      "IsHidden": "False"
    },
    {
      "Start": "e60ccd5524604e77983a06fb0c9a4012",
      "End": "110e94e4545d4edbaa4a8aba39c41298",
      "Id": "ca002a28edf14fc0bc9c959c9f940cba",
      "IsHidden": "False"
    },
    {
      "Start": "00e85db361714b81b105e742d292ab69",
      "End": "66d6f373451c40d98515da2af535f43d",
      "Id": "699103451bc344089217888c2a2f76ed",
      "IsHidden": "False"
    },
    {
      "Start": "2b9f8881dcc149c39074a70551ad09cd",
      "End": "144e956c220b4e8a9aaf9a87073eba78",
      "Id": "dcc6dc8be66e49a48969d1333398e444",
      "IsHidden": "False"
    },
    {
      "Start": "4cb8300c1b6f4f4e863d0b6288b37f84",
      "End": "564bb94abe084588acf1ec0819ff93b0",
      "Id": "5bd12065068d44159a9a1df56ee78d67",
      "IsHidden": "False"
    },
    {
      "Start": "9bf730dede244bb68315b9cd640991de",
      "End": "9ba4c23c342040e1a2048c9855578460",
      "Id": "023f17a1bdd449d584f3bf7267f221c2",
      "IsHidden": "False"
    },
    {
      "Start": "d90ce8c151414c198dad2c47b45f2e05",
      "End": "aa45b2f9aa9c42e18bd6a1c1c148e9c6",
      "Id": "f2f66cb863814120b268e5f217ece169",
      "IsHidden": "False"
    },
    {
      "Start": "b52eebcebc2843c89f4eddb6cc6ff373",
      "End": "90724f9b493f48f48e9737ce53e854fd",
      "Id": "8dc8da97bb094be3a69a0b6bc359509b",
      "IsHidden": "False"
    },
    {
      "Start": "321d6c65fdc1457bac746fbf05117dcf",
      "End": "0a4173ea38d2404c8b116370d2bb6484",
      "Id": "3a85ec711ebe4787b994a34aa6ffd709",
      "IsHidden": "False"
    },
    {
      "Start": "9089c121b05c4c89ae81e572c2569dce",
      "End": "066359f1451c4bcc8774eb8d8b3c9da3",
      "Id": "2c5bbb4b92bb400ca0d24ae104f5c1f5",
      "IsHidden": "False"
    },
    {
      "Start": "9089c121b05c4c89ae81e572c2569dce",
      "End": "abb21a5ef9ca46e586729c4cf8eff6f0",
      "Id": "80d2b493089343249c275a8b9beb1b09",
      "IsHidden": "False"
    },
    {
      "Start": "9089c121b05c4c89ae81e572c2569dce",
      "End": "d5a569ad30f1488982ad237c6164afb9",
      "Id": "7a52aae674e7450bb24380259656555a",
      "IsHidden": "False"
    },
    {
      "Start": "9bc7e1786bca464ca8221697d540ee69",
      "End": "a05e590bc94a4498833a99c609839dbf",
      "Id": "9a98d15672af46f0bc522f5b8d879365",
      "IsHidden": "False"
    },
    {
      "Start": "e087e2f459544cc0822d99a3f7c91868",
      "End": "99fbc826dea34f3d92020c5f5f991b79",
      "Id": "741fb2ed3826436e999deddf983fd037",
      "IsHidden": "False"
    },
    {
      "Start": "e087e2f459544cc0822d99a3f7c91868",
      "End": "e24b46f3499743878a62fa64dc8728fa",
      "Id": "af076b106342435eaab0efe4909c1b25",
      "IsHidden": "False"
    },
    {
      "Start": "57ed4fa54f4047afb7579fcb05cff565",
      "End": "5b2c1bdb26c54ce6b4cc9d702bb1a9f3",
      "Id": "3b4853ba8f7f40789ee505c675883f6f",
      "IsHidden": "False"
    },
    {
      "Start": "f89d2060c1af471a95238de51edc6076",
      "End": "d9b308a19d42493da80ca90dbdb16813",
      "Id": "02201ab982b04c89acc3a6d6f2d26077",
      "IsHidden": "False"
    },
    {
      "Start": "ca502e8cc47840ac9ac027152294cfa5",
      "End": "8fd6277ef5e94878a0986d876c707690",
      "Id": "4fba163652d041d9b693230d7b1b6886",
      "IsHidden": "False"
    },
    {
      "Start": "0ffd44fdeb3848399e1650a75500d4a4",
      "End": "5c92b2393e2746ffb315387a05c56073",
      "Id": "7c06246554134ac2beb93077b30dda7a",
      "IsHidden": "False"
    },
    {
      "Start": "d383ff4a7aa449c5b86be9cbb4be76c0",
      "End": "cc5a0070bf10427591d3f1e005176e3f",
      "Id": "ff14dada150f4481b1ed13a1b6f62eea",
      "IsHidden": "False"
    },
    {
      "Start": "d383ff4a7aa449c5b86be9cbb4be76c0",
      "End": "83b32d83d7ce4efa950969738ade1e58",
      "Id": "74c0a87306e845c4a38b493d464c221f",
      "IsHidden": "False"
    },
    {
      "Start": "bdd9e4a64f574b56b42e10e4450253bf",
      "End": "c562f8c5e8ec4ea4a0ee6787dd867f99",
      "Id": "26ed72288ab4405d846da390a1ca786c",
      "IsHidden": "False"
    },
    {
      "Start": "cfc14c75d0e84ffebf42847d9347038a",
      "End": "e847a376b8664723ab3dca09e70068e6",
      "Id": "c6036b858d8940ffb077ab8281f0ea35",
      "IsHidden": "False"
    },
    {
      "Start": "245c1798a0f941789373d4caffa30e9a",
      "End": "0a442860d9f44528b5523b98716c6f51",
      "Id": "4dd12a6bcb6b4f43b1379c16130d392f",
      "IsHidden": "False"
    },
    {
      "Start": "eedf59a492d747979d6e69fb77301474",
      "End": "7a8f2d1227da430c95b29191445dca67",
      "Id": "a4306918b8cd4ad98d35a7afd053b045",
      "IsHidden": "False"
    },
    {
      "Start": "b0b47aad55d04a7f9719771fe5c7e08f",
      "End": "2984a83c7a1a4235baa507a50f2e069e",
      "Id": "54d17c296b094babb3b1465d0a4e0285",
      "IsHidden": "False"
    },
    {
      "Start": "303455cc3802440b9aefd550619eb969",
      "End": "e517991c72db4770bf32102dfb86a949",
      "Id": "9a93ebb3c9124512ae67177a4eba37f3",
      "IsHidden": "False"
    },
    {
      "Start": "303455cc3802440b9aefd550619eb969",
      "End": "a92e7565f3ba450884ef78603ea21745",
      "Id": "16d4a3c1dd2044f18bea6ff322df8dfe",
      "IsHidden": "False"
    },
    {
      "Start": "2d90cfaf687642ceba87d67d6e7276f2",
      "End": "5cd1a62f69c940f6a1cc9b73890fbbfd",
      "Id": "52870fc5da2f4dab862a64c33342c7dd",
      "IsHidden": "False"
    },
    {
      "Start": "2d90cfaf687642ceba87d67d6e7276f2",
      "End": "4c700999c699495b9c85647e153b7907",
      "Id": "07193dd2e9244b35907bd3622bef9438",
      "IsHidden": "False"
    },
    {
      "Start": "2d90cfaf687642ceba87d67d6e7276f2",
      "End": "ca1b7103b6d8427fbad97f0084369b53",
      "Id": "09c6a73516c9425d9bc5983bd82df17b",
      "IsHidden": "False"
    },
    {
      "Start": "2f0bfb08e6e14afd9c0a7187987f54e8",
      "End": "ae1925bc79664d6cb5b3c424f2e98b6a",
      "Id": "cdb11c7fd5564e6a9906dbd0228de1f8",
      "IsHidden": "False"
    },
    {
      "Start": "cbb3608967d04d5994804b6b4ecfb4e3",
      "End": "ab8796ea772f491b9ecc8d59fb1478fc",
      "Id": "1a768ff535d64b8faaec810cc79041de",
      "IsHidden": "False"
    },
    {
      "Start": "cbb3608967d04d5994804b6b4ecfb4e3",
      "End": "c4982846340f40cea71cb027ab17135e",
      "Id": "4bf372b603fa4beeba1e93ffdfd8c8c3",
      "IsHidden": "False"
    },
    {
      "Start": "d4f8fb184ad64df1a4d91584eaa9aaca",
      "End": "1798cc94649b4ebe86d05a357539463b",
      "Id": "c957c74eca8242fc9624ce4bc1fbad5f",
      "IsHidden": "False"
    },
    {
      "Start": "f79d4f26b78a4892b463611aa27a299a",
      "End": "530623bdd91a44d7ada3be63ececd806",
      "Id": "180edc992b2b4dc8aabc81f5496c5c85",
      "IsHidden": "False"
    },
    {
      "Start": "d2a996b70a4f4a7da749af01ea8f3049",
      "End": "fe586b75465c4fcebce8d2cdcd0f5d88",
      "Id": "1c123ee8a0254acabab76a93ac400d0f",
      "IsHidden": "False"
    },
    {
      "Start": "1124d06318ad4caaacfccf6dd28f181b",
      "End": "c6a88fb00ae6456eae65fc8efa96c86a",
      "Id": "e21a7884c8874568ac2c777f1982019e",
      "IsHidden": "False"
    },
    {
      "Start": "6f5f9c037bfc4f90ba47f7aa0d9385a0",
      "End": "251fd819aa394d168f423af387fb89c3",
      "Id": "9e1686a03b58410d819d640930bb62ca",
      "IsHidden": "False"
    },
    {
      "Start": "a28ee4b1a6b646ae9d565ef9cfe1774b",
      "End": "e00e9c9dcfb74b20b17a4c363ffd3266",
      "Id": "06d629d60210448eb1d65778c45fa3d4",
      "IsHidden": "False"
    },
    {
      "Start": "796a04602b534799b68356b144a2c061",
      "End": "acc46becd8b34dd3b936b8a8e38ce80a",
      "Id": "abc8c20ad1ee4c199a29899c0497c2f2",
      "IsHidden": "False"
    },
    {
      "Start": "6f7a186800434de6aceafd9586782707",
      "End": "25c363e7e240458eb5390292ebb75059",
      "Id": "f111b043bb2c4768b1b848d7bcffbf41",
      "IsHidden": "False"
    },
    {
      "Start": "f6ac2fd052ed48ffb154d88432ade61d",
      "End": "ab00f406d2f74dec85e656e09b1b0234",
      "Id": "ca63aabe8ed14945a620ae0f5c44b32f",
      "IsHidden": "False"
    },
    {
      "Start": "9011fcd1c3c94c51ad6c14d7b4fbb44e",
      "End": "d6794e90247b43b7beb49f2bed7dac4a",
      "Id": "a7393e46a8364c7986c01bba77b615d3",
      "IsHidden": "False"
    },
    {
      "Start": "0f27832850ef4f5096b0f2b4d89a3f50",
      "End": "fdac6a60caee4b1cab05c4613f543a37",
      "Id": "3e0cd24cddd24bafa8f43e601f819bbe",
      "IsHidden": "False"
    },
    {
      "Start": "ff768f82693e464a87f9eaf5c352a9ca",
      "End": "3ad42d5aa7ab4086a512f9045d0ab0bb",
      "Id": "63764fae4e3643fb87b50bb695438f19",
      "IsHidden": "False"
    },
    {
      "Start": "f609517cbb5a468298c07efd968765c1",
      "End": "292e4e138a3c4337997b837072ef4abf",
      "Id": "1f289c45c85c445d88cd5c0b844e2d14",
      "IsHidden": "False"
    },
    {
      "Start": "efb005de89d94cf1b90dee5eae8ee39d",
      "End": "a6527724034c4c2b957ef6947d638b38",
      "Id": "04a7da379fe2430ba2100a991b13de9f",
      "IsHidden": "False"
    },
    {
      "Start": "efb005de89d94cf1b90dee5eae8ee39d",
      "End": "1566b3b8aa664b79bdfd44ee62d5d75e",
      "Id": "ba13a4a819d746e280503cd02de498f7",
      "IsHidden": "False"
    },
    {
      "Start": "48b8615484bf4aabafd1935d0f196b7d",
      "End": "9f38c6ff0fb74cf2ae93dc90f04fdb10",
      "Id": "7cf73bcfa9a742ec9e563ca178809e49",
      "IsHidden": "False"
    },
    {
      "Start": "6d599de0a7cd4a14aaa0ed0227bbdb9f",
      "End": "b0d42f6d90f54421a9b6a7b56452f162",
      "Id": "5e8593b56c474b6bb9cb84ce66fa594a",
      "IsHidden": "False"
    },
    {
      "Start": "9bef95d7b612432fbe6cf1aacec96c8e",
      "End": "fa0fa9cb3300408094443bf0a8f4de43",
      "Id": "b6e4e32679ab4cc1acedacc3a84eb565",
      "IsHidden": "False"
    },
    {
      "Start": "f13141cef7a04f84ab2f95090eeafd69",
      "End": "1f181d292a9d4272a142f157245dacf9",
      "Id": "f973313129dd4031b39c339c626a6ae7",
      "IsHidden": "False"
    },
    {
      "Start": "702361fe72834d39a135b1a7f9ab0ea8",
      "End": "d92038dce9ce40fd99171d85fc06a1a2",
      "Id": "ca4b5b5e143943e5b96f97ee33889173",
      "IsHidden": "False"
    },
    {
      "Start": "702361fe72834d39a135b1a7f9ab0ea8",
      "End": "67024f753938496798386c09943c2086",
      "Id": "7988d95ecdce4775a8e865563905af8e",
      "IsHidden": "False"
    },
    {
      "Start": "702361fe72834d39a135b1a7f9ab0ea8",
      "End": "547fb99b1e1d404b90d5bddb3db1f1ac",
      "Id": "06a4725c9bca4ba8b139673a312187fa",
      "IsHidden": "False"
    },
    {
      "Start": "1b16c40727324f3ea6103e74cf9afe8d",
      "End": "b0469036434143b983f3e855ac3627b8",
      "Id": "39e71c90d5f24251b019a79d84144c6c",
      "IsHidden": "False"
    },
    {
      "Start": "b92adbe59055457ca88c5e223e484b09",
      "End": "54256426ab8a4e6b80ba7888601e7c54",
      "Id": "053edd506489484cb746e308670cb080",
      "IsHidden": "False"
    },
    {
      "Start": "a5b89898071949c0a01540c82a89c79f",
      "End": "a7695d0844b84cbbb1302d3c44d2c188",
      "Id": "4e252f4ffdee4e2ebbdb1f1e309d0aef",
      "IsHidden": "False"
    },
    {
      "Start": "76791f417f0e4b51a87e489f6e09e21d",
      "End": "b647ec80a5d94670aa3f091dcff621a0",
      "Id": "560eb32cde054ab890edd3dd56d6c57a",
      "IsHidden": "False"
    },
    {
      "Start": "c7ce9044256040dcb0fdaef88be0ab8e",
      "End": "a313d695e9804025b92829bb2c100467",
      "Id": "f504d9a8c7844ae7968a0e0869cb596c",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "/9j/4AAQSkZJRgABAQEBSgFKAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAO5A2kDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoorJ8SeK9H8H6a9/rWo2+m2i/wDLS4cLuPoo6sfYZNAGtRXzv4w/bQ8NaTJJD4f0y6151xtnkP2aE9ckbgX444KjNeOa9+158QdY3La3FjoyHIxZ2oY4OO8hfnjqMdT7YAPuuivzkvvjr8QNRkZ5fF2qIWXafInMI/AJgA+4rP8A+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4uj/hbPjj/AKHLxB/4NJ//AIugD9K6K/NT/hbPjj/ocvEH/g0n/wDi6P8AhbPjj/ocvEH/AINJ/wD4ugD9K6K/NT/hbPjj/ocvEH/g0n/+Lo/4Wz44/wChy8Qf+DSf/wCLoA/SuivzU/4Wz44/6HLxB/4NJ/8A4uj/AIWz44/6HLxB/wCDSf8A+LoA/SuivzU/4Wz44/6HLxB/4NJ//i6P+Fs+OP8AocvEH/g0n/8Ai6AP0ror81P+Fs+OP+hy8Qf+DSf/AOLo/wCFs+OP+hy8Qf8Ag0n/APi6AP0ror81P+Fs+OP+hy8Qf+DSf/4unxfF7xzDIHXxjrxI/valMw/ItigD9KKK/PnSf2mPiRpEmV8RyXSbtzR3cEUoPtkrkD6EV6P4X/ba1i1KR+INAtL+MDBmsXaB+g+Yq24E9em0c9scgH1/RXm3gb9oXwP4+YxWerLYXm3d9k1ICCQjGTgk7WI5yFYngnpzXpNABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFNd1jVmZgqqMlmOAB60k0yW8LyyuscSKWZ3OFUDkknsK+Kv2hf2kJ/Hk1z4e8OStb+G1bbLcDKyXpH8o/QdTjJ9AAelfGH9rey8NzXGkeEI4dV1BMpJqMmTbwsCQQo48wjHXO3kfe5FfJviTxXrHjDUnv9a1G41K7b/lpcOW2j0UdFHsMCsmigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvYPhZ+014p+HjwWV3N/behh8vbXXMqKWyxjk659myPYZzXj9FAH6V/Dv4naB8T9GXUNEut+OJbWbCzwH0dATj6gkHsa6uvzB8JeLdU8D69a6xo901pfW7ZVhyGHdWHdT3Ffe3wW+Nml/F7RWaMLY63bL/penlsle3mIf4kP6Hg9iQD0iiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiivMf2hPicPhn8Pbua3kaPWL9WtbAqD8rkfNJnoCqksM9SB70AeH/tXfHB9U1CXwZoV4y2NszR6pJHx5soODDn+6uOfU8dq+Z6fNM9xK8srtJI7FmdzksTyST3NMoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK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YUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABX5+/tRKsfx18ThVCjNscAY5NtESfzr9Aq/P/APak/wCS7eJv+3X/ANJYqAPKaKKKACiiigArq/hN/wAlU8G/9hqy/wDR6VyldX8Jv+SqeDf+w1Zf+j0oA/SuiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA+f/wBtb/klelf9hqL/ANET18U19rftrf8AJK9K/wCw1F/6Inr4poAKKKKACiiigAooooA/QD9lv/khPhn/ALev/SqWvVq8p/Zb/wCSE+Gf+3r/ANKpa9WoA/EH/gpV/wAnmeO/+uen/wDpBb18xV9O/wDBSr/k8zx3/wBc9P8A/SC3r5ir/SfhH/kncv8A+vNL/wBIifHYj+NP1YUUUV9YYH9K1r/x6w/7i/yqWorX/j1h/wBxf5VLX+Vst2fcBRRRSAKKKKAPhD/gsB/yQPwj/wBjNH/6S3FfknX62f8ABYD/AJIH4R/7GaP/ANJbivyTr+7PCP8A5Jal/jn+Z8xj/wCOwooor9nPOP2B/wCCR3/Jsutf9jRdf+k1rX21XxL/AMEjv+TZda/7Gi6/9JrWvtqv86ePf+Snx/8AjZ9dhf4MfQKKKK+COoKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAr8//wBqT/ku3ib/ALdf/SWKv0Ar8/8A9qT/AJLt4m/7df8A0lioA8pooooAKKKKACur+E3/ACVTwb/2GrL/ANHpXKV1fwm/5Kp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD5//AG1v+SV6V/2Gov8A0RPXxTX2t+2t/wAkr0r/ALDUX/oievimgAooooAKKKKACiiigD9AP2W/+SE+Gf8At6/9Kpa9Wryn9lv/AJIT4Z/7ev8A0qlr1agD8Qf+ClX/ACeZ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5Lt4m/7df/SWKgDymur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKAPzU+LP/JVPGX/Yavf/AEe9cpXV/Fn/AJKp4y/7DV7/AOj3rlKAPVv2W/8Aku3hn/t6/wDSWWv0Ar8//wBlv/ku3hn/ALev/SWWv0AoAKKKKACiiigAooooAKKKKACvypr9Vq/KmgAooooAKKKKACiiigD7W/Yp/wCSV6r/ANhqX/0RBX0BXz/+xT/ySvVf+w1L/wCiIK+gKACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/wDbevlSvqv9uj/mSf8At+/9t6+VKACiiigAooooAK6v4Tf8lU8G/wDYasv/AEelcpXV/Cb/AJKp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD5//bW/5JXpX/Yai/8ARE9fFNfa37a3/JK9K/7DUX/oievimgAooooAKKKKACiiigD9AP2W/wDkhPhn/t6/9Kpa9Wryn9lv/khPhn/t6/8ASqWvVqACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/8AbevlSvqv9uj/AJkn/t+/9t6+VKACv1Wr8qa/VagAooooAKKKKACiiigAooooAK/P/wDak/5Lt4m/7df/AElir9AK/P8A/ak/5Lt4m/7df/SWKgDymur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKAPzU+LP/JVPGX/Yavf/AEe9cpXV/Fn/AJKp4y/7DV7/AOj3rlKAPVv2W/8Aku3hn/t6/wDSWWv0Ar8//wBlv/ku3hn/ALev/SWWv0AoAKKKKACiiigAooooAKKKKACvypr9Vq/KmgAooooAKKKKACiiigD7W/Yp/wCSV6r/ANhqX/0RBX0BXz/+xT/ySvVf+w1L/wCiIK+gKACiiigAooooAKKKKACiiigD5U/bo/5kn/t+/wDbevlSvqv9uj/mSf8At+/9t6+VKACiiigAooooAK6v4Tf8lU8G/wDYasv/AEelcpXV/Cb/AJKp4N/7DVl/6PSgD9K6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiii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9oo/4bo/6kn/AMq3/wBor5UooA+q/wDhuj/qSf8Ayrf/AGij/huj/qSf/Kt/9or5UooA+q/+G6P+pJ/8q3/2iqWr/txahcWciaZ4Ut7K6ZSFmub0zqp9doRM9+9fMNFAGt4o8Uan401261jWLprzULlsySMAOgwAAOAAAAAKyaKKACiiigAooooAK6v4Tf8AJVPBv/Yasv8A0elcpXV/Cb/kqng3/sNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAPn/8AbW/5JXpX/Yai/wDRE9fFNfa37a3/ACSvSv8AsNRf+iJ6+KaACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACur+E3/JVPBv/Yasv/R6VyldX8Jv+SqeDf8AsNWX/o9KAP0rooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAPn/wDbW/5JXpX/AGGov/RE9fFNfa37a3/JK9K/7DUX/oievimgAooooAKKKKACiiigD2f4F/s43Xxbs5dXvdQOlaJDMYQ0ce6adhgsFzgAAH73PPGDzj2//hinwP8A9BXxB/4EQf8Axmup/ZZVV+BXhohQCxuiSB1P2mUZP4AflXq9AHz/AP8ADFPgf/oK+IP/AAIg/wDjNH/DFPgf/oK+IP8AwIg/+M19AUUAfP8A/wAMU+B/+gr4g/8AAiD/AOM0f8MU+B/+gr4g/wDAiD/4zX0BRQB8/wD/AAxT4H/6CviD/wACIP8A4zR/wxT4H/6CviD/AMCIP/jNfQFFAHz/AP8ADFPgf/oK+IP/AAIg/wDjNR3H7E/g1oXEGsa7HLj5WklhdQfcCIZ/MV9CUUAfm/8AFz4W33wk8WNo15Ot5E8Sz212ibBNGSRnbk7SCGBGe3oQa4mvqr9uhVDeCm2jcRegtjkgeRgfqfzr5VoAK+nPhX+x5H4h0Cz1fxTq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2x2BQY5PnAAHGFJZeP7poA4CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACvoL9i/w42pfEbUNWZSYdMsWAYDpLIwVQeP7ok7g8dxmvn2vuz9k3wO3hT4Ww39xAYb3WpPtjbjz5OMRcdgVyw6/f69gAe1UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABXgP7XXwxbxX4Pi8R2EO/UdFVmm29XtTy/8A3wRu+hevfqa6rIrKyhlYYKsMgj0oA/KuivWP2h/g2/wq8V+bZqz+H9RZpLNzz5R4LRMcdQTx6rjuDXk9ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU+GF7iVIokaSR2CqiDJYngADuaAOz+Dvw7n+KHj2w0WP5Lbm4u5SpIjhTG4nBB5JVRz1cV+jVnaxWNrDbQLsghRY41yThQMAZPsK8v/AGevg8nwq8IhrxI5Ne1DE13KE+aIEDEIPcLyT6kn2r1agAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDF8YeEdL8deHrvRdXtxcWVyuD03I3Z0PZgeQa+Avi98HNY+EeuG3vFNzpczH7HqKLhJl64I/hcDqp/DI5r9F6yPFXhPSvG2h3GkazZpe2E4+aNsggjoykcgjsRQB+YFFe6fGT9lvW/Astxqfh9Jdb0HdkRxK0l1brjJLqF5Uf3h+IFeF0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU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gyILeJYY9xydqgAZP0FWaKK+LbcndnSFFFFIAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/9k=",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "MK Jang",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "263cac91-40d5-47d8-981c-3a118cb3eee9",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_263cac91-40d5-47d8-981c-3a118cb3eee9": "H4sIAAAAAAAACh3Muw6DMAxA0X/xXEt54Dhh7sLcsengPKiQWgbIUiH+vSjrle55HlCkCYxwRNh/a55KhDFC0SH4QAmDIoMD5YLek0LHZLk4W5UzEW4RvtLqtsinf9r4gZS98qNty/qe7h0LVodcdUXmyxkSeRRJGn2anWWrxM8JlTKZjUtdndbWXxMukumE8/UHXFFokaoAAAA="
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 21610.921875,
      "EyeY": 13135.802734375,
      "EyeZ": -20025.171875,
      "LookX": -8899.671875,
      "LookY": -36355.8828125,
      "LookZ": 26557.068359375,
      "UpX": 0.09044674038887024,
      "UpY": 0.2833843231201172,
      "UpZ": 0.9547317624092102
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "cf754be6b5634bd29028ca0a52448dd2",
        "Name": "Create HTML file and Open",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 276.06733435948354
      },
      {
        "Id": "f3362b7a4a744f2c83d486cc23248248",
        "Name": "cssPart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": -281.4848569702817
      },
      {
        "Id": "27db9a5890714924af961756878dd8f2",
        "Name": "javascriptPart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": -68.89860697028143
      },
      {
        "Id": "a8037bb941b24aefbb8a7c954bdadf1c",
        "Name": "htmlPath",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4497.719577670595,
        "Y": 340.06733435948354
      },
      {
        "Id": "db8ab5b988a94db4b0078f8a573877d8",
        "Name": "make_htmlStr__",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -4815.719577670595,
        "Y": 125.84587731101965
      },
      {
        "Id": "63954f978a364108967cfd139a53a027",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4497.719577670595,
        "Y": 191.89483435948296
      },
      {
        "Id": "395022e2df424b0ea9278f5b2d5bc597",
        "Name": "navHTML_Part",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5138.082515224886,
        "Y": 143.92889302971798
      },
      {
        "Id": "e96d643dcf064c7e94aac9e3b260f35b",
        "Name": "Create JS file",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 64.06733435948354
      },
      {
        "Id": "0997ba6718324ff081fe91f3ce1535e0",
        "Name": "start Webserver",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": 488.06733435948354
      },
      {
        "Id": "b0c79b8f7c43421cb24454e4b5a3c6c5",
        "Name": "make_htmlStr",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3886.719577670595,
        "Y": -147.93266564051646
      },
      {
        "Id": "08c009f046864602ba768cfce2de03b6",
        "Name": "serverFilePath",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4815.719577670595,
        "Y": 406.89483435948296
      },
      {
        "Id": "cba2fe4be33240ff936f27fc8accdb21",
        "Name": "0. Set Port Number: 기본값-8000 (작동 오류 없다면 변경 금지)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4585.42982759417,
        "Y": 554.5367573776175
      },
      {
        "Id": "01f19c6794424b339ffd2165bba73d2e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5097.719577670595,
        "Y": 404.89483435948296
      },
      {
        "Id": "61002c118052475da50beebb8c44d28d",
        "Name": "Building Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5673.359447535112,
        "Y": -136.8868998383723
      },
      {
        "Id": "2ca016977a7a4a7b9ad0088b9481a8eb",
        "Name": "▶ [A.1] 토공참조선을 생성할 대상 선택. (드래그만 가능)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13513.793621880088,
        "Y": 3151.999585155972
      },
      {
        "Id": "37c848dc2bdf4610a41fbc71badbbea3",
        "Name": "▶ [A.2] 토공참조선 선택 대상들을 그룹으로 적용하시겠습니까? 개별로 적용하시겠습니까?",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13532.635206415653,
        "Y": 2875.005083855584
      },
      {
        "Id": "60de27b5144b4a4aa9efe3ae63544250",
        "Name": "make_refLine_forExca_byMode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8449.76393872991,
        "Y": 2829.71483576816
      },
      {
        "Id": "e1d1afef15494e90aebd8687d98b6e6b",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10468.483824296862,
        "Y": 3771.111393179709
      },
      {
        "Id": "b7eb027137e8454086a1b726cac71c64",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10471.34643512151,
        "Y": 4253.314705556072
      },
      {
        "Id": "293ee08495b341f19c26b16d75749769",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10197.043981538105,
        "Y": 3598.6092462496295
      },
      {
        "Id": "21df8c09eca34793b299597bcfed8f3e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10185.403655372163,
        "Y": 4129.513869832135
      },
      {
        "Id": "9f03d47a5f154d068cb2559098252015",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9512.907494891648,
        "Y": 3710.915598107982
      },
      {
        "Id": "27ee575618b3499cb2a23d855513fd4e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9845.451678834506,
        "Y": 3594.7365636357067
      },
      {
        "Id": "50f219f3cb8d407594cf82aafb1d85c1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10165.483250782141,
        "Y": 3866.3762270006728
      },
      {
        "Id": "64b606fadf054cdea60b4d782f097369",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9933.039359488635,
        "Y": 3717.7165629436354
      },
      {
        "Id": "7538ce257ae440bb8a4278632bffc241",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10107.671597246279,
        "Y": 4328.161995704882
      },
      {
        "Id": "291b803880f14ab29cb7f746ca7395d3",
        "Name": "*",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9894.326600358118,
        "Y": 4172.3402462458525
      },
      {
        "Id": "cac820213efc4f5f8eaf469052e5253e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9488.144181922213,
        "Y": 4167.775444588385
      },
      {
        "Id": "79479c28a4cc437681e541b69a3541a0",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10948.160275020022,
        "Y": 6730.508439020721
      },
      {
        "Id": "31436c5e3a3d44d69317868ea565d8a4",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11246.487936723213,
        "Y": 6726.997770562536
      },
      {
        "Id": "81c8b0b26eff41a6b7852e25463ed7a9",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10980.96245649044,
        "Y": 7276.226561013893
      },
      {
        "Id": "6ac6c5392a214bb5ad3cd59692be9f9c",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10232.365561090211,
        "Y": 6927.470882587676
      },
      {
        "Id": "a73ca8bcd1c94ae8b2e3d3f6aa381a13",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10468.465882681861,
        "Y": 7044.757358141875
      },
      {
        "Id": "db501a978ca94ef0832af298241e8759",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9427.822519567939,
        "Y": 6731.213966597892
      },
      {
        "Id": "55168216983b4a09ba4192666bc455ef",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9733.151212796383,
        "Y": 6886.891197933087
      },
      {
        "Id": "d4a4a5006e444577b0510f2539c64aaa",
        "Name": "▶ [0.2] GL 레벨 선택",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12000.445198537773,
        "Y": 5365.30943820425
      },
      {
        "Id": "b69db45dd5f844868c367543122be4c8",
        "Name": "Level.Elevation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11707.14236578302,
        "Y": 5365.9419423195895
      },
      {
        "Id": "e764f3df4c3e43ad9801fff7bcba33d5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10434.417894066615,
        "Y": 5024.021861682981
      },
      {
        "Id": "03e45e46c08e4020b2c5b1e22b3a9e63",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10124.417894066615,
        "Y": 5081.19436168298
      },
      {
        "Id": "b8fa2618c4d14c7fa6cc7eedfae57dbd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10448.329643005482,
        "Y": 5189.727723968811
      },
      {
        "Id": "c018b722b526496dbfb2b22020736e33",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9881.551092362371,
        "Y": 5665.87659942073
      },
      {
        "Id": "a90594faab9d4f7b93e4fdaf5cfdd3f2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9837.756037071129,
        "Y": 5409.67798594562
      },
      {
        "Id": "6de9297320c3435a9638b0a843520671",
        "Name": "Earth View 열기",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13024.871475416612,
        "Y": 2299.837801741372
      },
      {
        "Id": "e935e5b8d6894a80a1197cd3f2178b90",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -13520.57188928824,
        "Y": 2163.3167584957596
      },
      {
        "Id": "818c8fd72df243069a0baf16c0a021aa",
        "Name": "▶ [A.3] 터파기 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12153.270610653079,
        "Y": 4080.9901383402084
      },
      {
        "Id": "3f05393318ea48a98df43c326a7f3088",
        "Name": "공통정보 입력 파싱",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11633.623625044562,
        "Y": 4082.919549291415
      },
      {
        "Id": "53943525b95f4d968097c2b1e3011ec5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11325.623625044562,
        "Y": 4082.919549291415
      },
      {
        "Id": "0b7622ba631148ecb0e6fc93d1960739",
        "Name": "▶ [0.1] 실행모드 선택 - 확인 필수!",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13495.277221886046,
        "Y": 2580.5337050711087
      },
      {
        "Id": "6e2eb95cde3c422d93ae92327b8a44e2",
        "Name": "▶ [B.1] 토공 물량 관련 공통정보 입력 (항목순서 변경,삭제 금지)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12148.071086036292,
        "Y": 4684.992948820192
      },
      {
        "Id": "5a6ed5eabfd347cf89e631ab8cdf79bd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11331.510285324786,
        "Y": 4687.512537675796
      },
      {
        "Id": "c73788e7f1394f22b07d752572b0c451",
        "Name": "makeExca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -6239.082094316474,
        "Y": 6616.93392682926
      },
      {
        "Id": "4eb222ddf2cf4962952ad43889a19ec5",
        "Name": "All ElementsExceptRails",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10575.097061226568,
        "Y": 8687.667408617777
      },
      {
        "Id": "fbb762181f3c4840b74f5cb59d8a543e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9066.97705667309,
        "Y": 8701.89948278437
      },
      {
        "Id": "51eef0ea8ea5421fbc755bb911cf7224",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8502.963096457635,
        "Y": 9579.852943314856
      },
      {
        "Id": "fdb57bb5f0134f658aa58c492650cd08",
        "Name": "[1.A.3] 터파기 관련 공통정보 입력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -12879.718537128794,
        "Y": 4187.742738101778
      },
      {
        "Id": "cf812266306644d4a00091f7ee5f16df",
        "Name": "[1.B.1] 토공 물량 관련 공통정보 입력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -12891.443568890509,
        "Y": 4774.800828513138
      },
      {
        "Id": "83e83621632f4736aca0429b270e9a83",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12747.358369850152,
        "Y": 6412.189432829049
      },
      {
        "Id": "c94bb3aa760349aba6a9f8ba26417482",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9792.575967893219,
        "Y": 6405.857693104204
      },
      {
        "Id": "851507e58ee843c398755e9daa50534f",
        "Name": "Element.GetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8946.492439303778,
        "Y": 6708.8937635348675
      },
      {
        "Id": "c3ceffa982e94ad7a720497468ee14f9",
        "Name": "공통정보 입력 파싱",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11589.044291306614,
        "Y": 4689.226275544515
      },
      {
        "Id": "acb83bb51bd44088b25478c70ce07170",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9846.94726697892,
        "Y": 5164.01186004486
      },
      {
        "Id": "e26c17ad753148ab9e9fcf3481c50037",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9340.211124617634,
        "Y": 5352.635015955819
      },
      {
        "Id": "270d4bb54fd349a2aaa8a558636976f5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9830.176232843838,
        "Y": 4783.989894241797
      },
      {
        "Id": "7b6644a839774948b8029e5c549d783a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8815.958169371845,
        "Y": 6188.443218824135
      },
      {
        "Id": "e549fba3a8a14c7594291a5afce83651",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": false,
        "X": -6670.367500024622,
        "Y": 8819.746808955648
      },
      {
        "Id": "4249a70818b9405996db7a29eafb8a09",
        "Name": "Element.Id",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9548.990747881095,
        "Y": 7312.017932955507
      },
      {
        "Id": "de1230571d4c4e6f87ab546362e828b2",
        "Name": "group_closed_curves_ : function",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7741.9551418415585,
        "Y": 7273.081392681394
      },
      {
        "Id": "263cac9140d547d8981c3a118cb3eee9",
        "Name": "DirectShape.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4883.76422699713,
        "Y": 7499.868382672988
      },
      {
        "Id": "9a53d7f6ad2e4881bb96f69f39a5739b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11125.001116612892,
        "Y": 8701.263833901743
      },
      {
        "Id": "bfa1cd1b7d094ff2b8503be502484af9",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7610.074326981278,
        "Y": 8539.086961776766
      },
      {
        "Id": "ee63afc1942d4ac5ac308afc40889b2d",
        "Name": "Cuboid.ByLengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8173.508606019859,
        "Y": 8341.898608567531
      },
      {
        "Id": "b9c5ce2bacfe4557b876fec8afc8be09",
        "Name": "List.IsEmpty",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7873.857341083859,
        "Y": 8747.572497582343
      },
      {
        "Id": "173e0835a03e40b5a769824330b2be57",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5721.66868203126,
        "Y": 7516.455921977587
      },
      {
        "Id": "d52ca280c18e44f993d186dd0439ef88",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5390.317630564533,
        "Y": 7579.4007861628925
      },
      {
        "Id": "77a72279e9c44aa19b2f8c56697ed09e",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5444.507356273868,
        "Y": 7367.526305946268
      },
      {
        "Id": "6631cd186e274a54a1e822f904e4217b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5744.027912979469,
        "Y": 7179.385086132191
      },
      {
        "Id": "a9a05c5a4a494f8b99846ace8a15d810",
        "Name": "::: 토공 항목 별 산출 결과 :::",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5819.41559073213,
        "Y": 6521.063281642171
      },
      {
        "Id": "6040a82ed935470c8982b6e99759423b",
        "Name": "⏸ [0.0]안내문 영역 // 입력 불필요 //",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13500.621784761242,
        "Y": 2292.7588113126435
      },
      {
        "Id": "43da51236c554f2892911db665f03317",
        "Name": "getGeoms",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8565.014834942924,
        "Y": 8711.662247360397
      },
      {
        "Id": "a39e2769294846aca79eb664dc6c8c30",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7307.166151561797,
        "Y": 8852.560742016465
      },
      {
        "Id": "58c13f103462428fa2a81ac37b600bbe",
        "Name": "time stamp",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -5372.343864063609,
        "Y": 7807.269186133388
      },
      {
        "Id": "5cd0fe084b6c45c7b30dad8722678f44",
        "Name": "c3/c2 ratio",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10606.838436487173,
        "Y": 4448.667452516642
      },
      {
        "Id": "2185322479c649f08325dd489fa32d78",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8685.582568203257,
        "Y": 4436.105746800843
      },
      {
        "Id": "8fed588f7a1742c9972ef418e103bdc3",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7068.128558294975,
        "Y": 5760.030588211503
      },
      {
        "Id": "f429b08a14c04cde8d72ef4f686342d8",
        "Name": "C1,C2,C3,C4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10885.919395298763,
        "Y": 4648.78858750631
      },
      {
        "Id": "5cd176d3073d4d0c880842516e91f263",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9146.351684042034,
        "Y": 4648.873502113337
      },
      {
        "Id": "30707940c6b74d129abc0e9b09a32bb9",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7025.303562204581,
        "Y": 6155.7739798280345
      },
      {
        "Id": "0d16e9ca63ff4ceea8ba6761a216a6df",
        "Name": "Coordinates.BasePoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12002.486760042264,
        "Y": 5590.6795362995845
      },
      {
        "Id": "212e7a74f661403fb6deb65b906479eb",
        "Name": "Coordinates.SurveyPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12007.27648488637,
        "Y": 5851.033391817156
      },
      {
        "Id": "281a358e91934df0870b45472292d905",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10569.60593902663,
        "Y": 1686.6042448468106
      },
      {
        "Id": "ec11c18f678c4f8f99dc481fb4d3c40b",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9853.81122509683,
        "Y": 1883.56668841377
      },
      {
        "Id": "ff87fc3eeb124eebb47401a4a301662c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -10089.911546688529,
        "Y": 2000.8531639679604
      },
      {
        "Id": "d7fe458ad2dd443bb255b7751bd49d03",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9049.26818357457,
        "Y": 1687.3097724239806
      },
      {
        "Id": "0438b09fd7af4ddf972c9fbd2e335670",
        "Name": "Detail Line 속성값은 1, 아니면 0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -9413.673392520152,
        "Y": 1841.8509169184656
      },
      {
        "Id": "6a159a3c85e54828a8a5454c6416ad29",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10867.93360072983,
        "Y": 1683.09357638863
      },
      {
        "Id": "8d7c299df46e41d8ae576c88cb75da4a",
        "Name": "토공객체 필터",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -8490.119003233916,
        "Y": 2340.2463503505523
      },
      {
        "Id": "57eefe1c8834403f9de366ebff03fcb2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10556.46873919226,
        "Y": 2341.0871347815314
      },
      {
        "Id": "6f96e9b87b094550b9382d8332875fe1",
        "Name": "Element.Delete",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7873.247984132293,
        "Y": 2245.0571394554036
      },
      {
        "Id": "08d0f488c7854199adb84275345e5cbe",
        "Name": "SolidByUnion 예외처리",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -7143.615590148209,
        "Y": 8226.225686552336
      },
      {
        "Id": "7b4591957ea448b9a4bcab5bff0804b7",
        "Name": "filter lean Pile etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9375.124632790737,
        "Y": 8707.63827007629
      },
      {
        "Id": "a42b83dfbcc449338f58bb7d5fa4a760",
        "Name": "Element.Parameters",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9827.245560644575,
        "Y": 9209.857312849535
      },
      {
        "Id": "87a41f68533c4439b53c42e8b858b149",
        "Name": "※ 형상 바운딩화 옵션 (B모드 에러시 True로 설정 요망)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -13507.198696445323,
        "Y": 3816.868872141675
      },
      {
        "Id": "0a2c12ca26ec432db86db9dd83ee215d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11352.738848917117,
        "Y": 5879.940519323268
      },
      {
        "Id": "597f70847fad44a89638e546e997cb67",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7703.7418666513795,
        "Y": 8137.152081336486
      },
      {
        "Id": "155339af74384d7dbbda283a9a402501",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": -7874.758107508347,
        "Y": 8473.749415407126
      },
      {
        "Id": "0c02c0acd77442e7bef9a06cea64c7f4",
        "Name": "filter line etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12555.65650712638,
        "Y": 3149.9413527973957
      },
      {
        "Id": "60644640b4a8411ea3a6d07603dbcdca",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10523.920775345316,
        "Y": 7839.321331048944
      },
      {
        "Id": "5cf59c31abf246da8869b0e12128f6c6",
        "Name": "filter etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -12171.111151864488,
        "Y": 2969.012029311866
      },
      {
        "Id": "870b4fa4ab744dffab07c4a0ba58ed36",
        "Name": "total_leanAndOthers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -5886.96038572497,
        "Y": 5908.610552246243
      },
      {
        "Id": "5268bcfd640743249f40e9ffbd974618",
        "Name": "filter line etc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9698.596925602262,
        "Y": 8778.604922817363
      },
      {
        "Id": "7c9fce77c27c45f082e1e04926c84aa2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10011.504562924049,
        "Y": 8776.98108561711
      },
      {
        "Id": "7ccbe229ea2f4e67ac88e34f3428db97",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -9408.268211210425,
        "Y": 8174.499952001738
      },
      {
        "Id": "ea612841e668431b9174f30c9aa64a7c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11302.631429062327,
        "Y": 5569.0131677476775
      },
      {
        "Id": "a8e139c6526b46038f81b3a14f02b82f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -10876.058778913808,
        "Y": 5536.233621217347
      },
      {
        "Id": "0790983701cb45debd75ce48bdffe628",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11577.19045202929,
        "Y": 5083.567402903832
      },
      {
        "Id": "504336eb80f54af49ca6a2c46b27bb5f",
        "Name": "GL_elevation_decide",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11314.628196845038,
        "Y": 5348.712291832157
      },
      {
        "Id": "94c794e0087e46c484b12349e4394817",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11661.097519837247,
        "Y": 5590.000840543806
      },
      {
        "Id": "8f341677c0b24803bab60fc279f83147",
        "Name": "output 출력",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4850.715750027884,
        "Y": 5984.182109087179
      },
      {
        "Id": "f4bfc98c8f8247b2ba14022942b36299",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -8476.113728056522,
        "Y": 3513.83311940527
      },
      {
        "Id": "292eb0266a724e5da49ba36d9dd1bd8d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5683.330040201711,
        "Y": 5602.347832034962
      },
      {
        "Id": "3fbe28bfdec440dcbc86418f4ede92c7",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": -7800.112294257808,
        "Y": 2557.2999898221974
      },
      {
        "Id": "5ea6f63a85214a819ddf81e53e3583cf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -11672.685403186037,
        "Y": 5849.075454356096
      }
    ],
    "Annotations": [
      {
        "Id": "513f9996225e46dca09e471a284333d3",
        "Title": "HTML 부재별 물량 기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cf754be6b5634bd29028ca0a52448dd2",
          "f3362b7a4a744f2c83d486cc23248248",
          "a8037bb941b24aefbb8a7c954bdadf1c",
          "27db9a5890714924af961756878dd8f2",
          "e96d643dcf064c7e94aac9e3b260f35b",
          "b0c79b8f7c43421cb24454e4b5a3c6c5",
          "db8ab5b988a94db4b0078f8a573877d8",
          "0997ba6718324ff081fe91f3ce1535e0",
          "63954f978a364108967cfd139a53a027",
          "395022e2df424b0ea9278f5b2d5bc597",
          "01f19c6794424b339ffd2165bba73d2e",
          "08c009f046864602ba768cfce2de03b6",
          "cba2fe4be33240ff936f27fc8accdb21"
        ],
        "HasNestedGroups": false,
        "Left": -5148.082515224886,
        "Top": -426.4848569702817,
        "Width": 1542.3629375542914,
        "Height": 1113.0216143478992,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -281.4848569702817,
        "InitialHeight": 981.0216143478992,
        "TextblockHeight": 135.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "54efadab0fc2496ea2756cdf230328f7",
        "Title": "GWL 높이",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e764f3df4c3e43ad9801fff7bcba33d5",
          "03e45e46c08e4020b2c5b1e22b3a9e63",
          "b8fa2618c4d14c7fa6cc7eedfae57dbd"
        ],
        "HasNestedGroups": false,
        "Left": -10458.329643005482,
        "Top": 4951.021861682981,
        "Width": 500.91174893886637,
        "Height": 370.70586228583034,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 5024.021861682981,
        "InitialHeight": 310.70586228583034,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1932b2ea57864b4db0f571f670c6fb2d",
        "Title": "모델라인만 검출",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "79479c28a4cc437681e541b69a3541a0",
          "6ac6c5392a214bb5ad3cd59692be9f9c",
          "a73ca8bcd1c94ae8b2e3d3f6aa381a13",
          "db501a978ca94ef0832af298241e8759",
          "55168216983b4a09ba4192666bc455ef",
          "31436c5e3a3d44d69317868ea565d8a4"
        ],
        "HasNestedGroups": false,
        "Left": -11256.487936723213,
        "Top": 6653.997770562536,
        "Width": 2073.6654171552746,
        "Height": 534.7595875793386,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 6726.997770562536,
        "InitialHeight": 462.7595875793386,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d0572ad0de184d13a7d185106474d10a",
        "Title": "공통정보 입력",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "818c8fd72df243069a0baf16c0a021aa",
          "3f05393318ea48a98df43c326a7f3088",
          "53943525b95f4d968097c2b1e3011ec5",
          "6e2eb95cde3c422d93ae92327b8a44e2",
          "5a6ed5eabfd347cf89e631ab8cdf79bd",
          "c3ceffa982e94ad7a720497468ee14f9"
        ],
        "HasNestedGroups": false,
        "Left": -12163.270610653079,
        "Top": 4007.9901383402084,
        "Width": 1001.6469856085168,
        "Height": 1029.002810479984,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4080.9901383402084,
        "InitialHeight": 753.2361372043069,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4b0f278cf2f44bdcada30272b91292da",
        "Title": "Excavation Target Select 뷰로 이동",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6de9297320c3435a9638b0a843520671",
          "e935e5b8d6894a80a1197cd3f2178b90",
          "0b7622ba631148ecb0e6fc93d1960739",
          "6040a82ed935470c8982b6e99759423b"
        ],
        "HasNestedGroups": false,
        "Left": -13530.57188928824,
        "Top": 2090.3167584957596,
        "Width": 704.7004138716275,
        "Height": 622.2169465753491,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2163.3167584957596,
        "InitialHeight": 562.2169465753491,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "c4c47f77cb394b0caca84bbbbb2609cf",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4eb222ddf2cf4962952ad43889a19ec5"
        ],
        "HasNestedGroups": false,
        "Left": -10585.097061226568,
        "Top": 8311.667408617777,
        "Width": 402.49666666666667,
        "Height": 520.0,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 8687.667408617777,
        "InitialHeight": 145.0,
        "TextblockHeight": 366.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eed31efa01654167bab766334d82948a",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2ca016977a7a4a7b9ad0088b9481a8eb",
          "37c848dc2bdf4610a41fbc71badbbea3"
        ],
        "HasNestedGroups": false,
        "Left": -13542.635206415653,
        "Top": 2802.005083855584,
        "Width": 734.0,
        "Height": 584.994501300388,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2875.005083855584,
        "InitialHeight": 421.99450130038804,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ca8d088f74f142d28f57051078026284",
        "Title": "모델라인만 검출 - 삭제용",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "281a358e91934df0870b45472292d905",
          "ec11c18f678c4f8f99dc481fb4d3c40b",
          "ff87fc3eeb124eebb47401a4a301662c",
          "d7fe458ad2dd443bb255b7751bd49d03",
          "0438b09fd7af4ddf972c9fbd2e335670",
          "6a159a3c85e54828a8a5454c6416ad29"
        ],
        "HasNestedGroups": false,
        "Left": -10877.93360072983,
        "Top": 1610.09357638863,
        "Width": 2073.66541715526,
        "Height": 534.7595875793304,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1683.09357638863,
        "InitialHeight": 462.7595875793304,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "52902a07c22f4cce852e56da74f4b9b4",
        "Title": "토공객체",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8d7c299df46e41d8ae576c88cb75da4a"
        ],
        "HasNestedGroups": false,
        "Left": -8500.119003233916,
        "Top": 2195.2463503505523,
        "Width": 404.0,
        "Height": 319.0,
        "FontSize": 96.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2340.2463503505523,
        "InitialHeight": 145.0,
        "TextblockHeight": 135.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 7370.643671908633,
    "Y": -879.6801711153718,
    "Zoom": 0.5120598992378174
  }
}